{
  "version": 3,
  "sources": ["../node_modules/object-assign/index.js", "../node_modules/react/cjs/react.production.min.js", "../node_modules/react/index.js", "../node_modules/prop-types/lib/ReactPropTypesSecret.js", "../node_modules/prop-types/factoryWithThrowingShims.js", "../node_modules/prop-types/index.js", "../node_modules/underscore/modules/_setup.js", "../node_modules/underscore/modules/restArguments.js", "../node_modules/underscore/modules/isObject.js", "../node_modules/underscore/modules/isNull.js", "../node_modules/underscore/modules/isUndefined.js", "../node_modules/underscore/modules/isBoolean.js", "../node_modules/underscore/modules/isElement.js", "../node_modules/underscore/modules/_tagTester.js", "../node_modules/underscore/modules/isString.js", "../node_modules/underscore/modules/isNumber.js", "../node_modules/underscore/modules/isDate.js", "../node_modules/underscore/modules/isRegExp.js", "../node_modules/underscore/modules/isError.js", "../node_modules/underscore/modules/isSymbol.js", "../node_modules/underscore/modules/isArrayBuffer.js", "../node_modules/underscore/modules/isFunction.js", "../node_modules/underscore/modules/_hasObjectTag.js", "../node_modules/underscore/modules/_stringTagBug.js", "../node_modules/underscore/modules/isDataView.js", "../node_modules/underscore/modules/isArray.js", "../node_modules/underscore/modules/_has.js", "../node_modules/underscore/modules/isArguments.js", "../node_modules/underscore/modules/isFinite.js", "../node_modules/underscore/modules/isNaN.js", "../node_modules/underscore/modules/constant.js", "../node_modules/underscore/modules/_createSizePropertyCheck.js", "../node_modules/underscore/modules/_shallowProperty.js", "../node_modules/underscore/modules/_getByteLength.js", "../node_modules/underscore/modules/_isBufferLike.js", "../node_modules/underscore/modules/isTypedArray.js", "../node_modules/underscore/modules/_getLength.js", "../node_modules/underscore/modules/_collectNonEnumProps.js", "../node_modules/underscore/modules/keys.js", "../node_modules/underscore/modules/isEmpty.js", "../node_modules/underscore/modules/isMatch.js", "../node_modules/underscore/modules/underscore.js", "../node_modules/underscore/modules/_toBufferView.js", "../node_modules/underscore/modules/isEqual.js", "../node_modules/underscore/modules/allKeys.js", "../node_modules/underscore/modules/_methodFingerprint.js", "../node_modules/underscore/modules/isMap.js", "../node_modules/underscore/modules/isWeakMap.js", "../node_modules/underscore/modules/isSet.js", "../node_modules/underscore/modules/isWeakSet.js", "../node_modules/underscore/modules/values.js", "../node_modules/underscore/modules/pairs.js", "../node_modules/underscore/modules/invert.js", "../node_modules/underscore/modules/functions.js", "../node_modules/underscore/modules/_createAssigner.js", "../node_modules/underscore/modules/extend.js", "../node_modules/underscore/modules/extendOwn.js", "../node_modules/underscore/modules/defaults.js", "../node_modules/underscore/modules/_baseCreate.js", "../node_modules/underscore/modules/create.js", "../node_modules/underscore/modules/clone.js", "../node_modules/underscore/modules/tap.js", "../node_modules/underscore/modules/toPath.js", "../node_modules/underscore/modules/_toPath.js", "../node_modules/underscore/modules/_deepGet.js", "../node_modules/underscore/modules/get.js", "../node_modules/underscore/modules/has.js", "../node_modules/underscore/modules/identity.js", "../node_modules/underscore/modules/matcher.js", "../node_modules/underscore/modules/property.js", "../node_modules/underscore/modules/_optimizeCb.js", "../node_modules/underscore/modules/_baseIteratee.js", "../node_modules/underscore/modules/iteratee.js", "../node_modules/underscore/modules/_cb.js", "../node_modules/underscore/modules/mapObject.js", "../node_modules/underscore/modules/noop.js", "../node_modules/underscore/modules/propertyOf.js", "../node_modules/underscore/modules/times.js", "../node_modules/underscore/modules/random.js", "../node_modules/underscore/modules/now.js", "../node_modules/underscore/modules/_createEscaper.js", "../node_modules/underscore/modules/_escapeMap.js", "../node_modules/underscore/modules/escape.js", "../node_modules/underscore/modules/_unescapeMap.js", "../node_modules/underscore/modules/unescape.js", "../node_modules/underscore/modules/templateSettings.js", "../node_modules/underscore/modules/template.js", "../node_modules/underscore/modules/result.js", "../node_modules/underscore/modules/uniqueId.js", "../node_modules/underscore/modules/chain.js", "../node_modules/underscore/modules/_executeBound.js", "../node_modules/underscore/modules/partial.js", "../node_modules/underscore/modules/bind.js", "../node_modules/underscore/modules/_isArrayLike.js", "../node_modules/underscore/modules/_flatten.js", "../node_modules/underscore/modules/bindAll.js", "../node_modules/underscore/modules/memoize.js", "../node_modules/underscore/modules/delay.js", "../node_modules/underscore/modules/defer.js", "../node_modules/underscore/modules/throttle.js", "../node_modules/underscore/modules/debounce.js", "../node_modules/underscore/modules/wrap.js", "../node_modules/underscore/modules/negate.js", "../node_modules/underscore/modules/compose.js", "../node_modules/underscore/modules/after.js", "../node_modules/underscore/modules/before.js", "../node_modules/underscore/modules/once.js", "../node_modules/underscore/modules/findKey.js", "../node_modules/underscore/modules/_createPredicateIndexFinder.js", "../node_modules/underscore/modules/findIndex.js", "../node_modules/underscore/modules/findLastIndex.js", "../node_modules/underscore/modules/sortedIndex.js", "../node_modules/underscore/modules/_createIndexFinder.js", "../node_modules/underscore/modules/indexOf.js", "../node_modules/underscore/modules/lastIndexOf.js", "../node_modules/underscore/modules/find.js", "../node_modules/underscore/modules/findWhere.js", "../node_modules/underscore/modules/each.js", "../node_modules/underscore/modules/map.js", "../node_modules/underscore/modules/_createReduce.js", "../node_modules/underscore/modules/reduce.js", "../node_modules/underscore/modules/reduceRight.js", "../node_modules/underscore/modules/filter.js", "../node_modules/underscore/modules/reject.js", "../node_modules/underscore/modules/every.js", "../node_modules/underscore/modules/some.js", "../node_modules/underscore/modules/contains.js", "../node_modules/underscore/modules/invoke.js", "../node_modules/underscore/modules/pluck.js", "../node_modules/underscore/modules/where.js", "../node_modules/underscore/modules/max.js", "../node_modules/underscore/modules/min.js", "../node_modules/underscore/modules/toArray.js", "../node_modules/underscore/modules/sample.js", "../node_modules/underscore/modules/shuffle.js", "../node_modules/underscore/modules/sortBy.js", "../node_modules/underscore/modules/_group.js", "../node_modules/underscore/modules/groupBy.js", "../node_modules/underscore/modules/indexBy.js", "../node_modules/underscore/modules/countBy.js", "../node_modules/underscore/modules/partition.js", "../node_modules/underscore/modules/size.js", "../node_modules/underscore/modules/_keyInObj.js", "../node_modules/underscore/modules/pick.js", "../node_modules/underscore/modules/omit.js", "../node_modules/underscore/modules/initial.js", "../node_modules/underscore/modules/first.js", "../node_modules/underscore/modules/rest.js", "../node_modules/underscore/modules/last.js", "../node_modules/underscore/modules/compact.js", "../node_modules/underscore/modules/flatten.js", "../node_modules/underscore/modules/difference.js", "../node_modules/underscore/modules/without.js", "../node_modules/underscore/modules/uniq.js", "../node_modules/underscore/modules/union.js", "../node_modules/underscore/modules/intersection.js", "../node_modules/underscore/modules/unzip.js", "../node_modules/underscore/modules/zip.js", "../node_modules/underscore/modules/object.js", "../node_modules/underscore/modules/range.js", "../node_modules/underscore/modules/chunk.js", "../node_modules/underscore/modules/_chainResult.js", "../node_modules/underscore/modules/mixin.js", "../node_modules/underscore/modules/underscore-array-methods.js", "../node_modules/underscore/modules/index.js", "../node_modules/underscore/modules/index-default.js", "../node_modules/spin/spin.js", "../node_modules/sigplot/js/common.js", "../node_modules/sigfile/dist/webpack:/sigfile/webpack/universalModuleDefinition", "../node_modules/sigfile/dist/webpack:/sigfile/webpack/bootstrap", "../node_modules/sigfile/dist/webpack:/sigfile/src/bitarray.js", "../node_modules/sigfile/dist/webpack:/sigfile/src/util.js", "../node_modules/sigfile/dist/webpack:/sigfile/src/basefilereader.js", "../node_modules/sigfile/dist/webpack:/sigfile/src/bluefile.js", "../node_modules/sigfile/dist/webpack:/sigfile/src/matfile.js", "../node_modules/loglevel/lib/loglevel.js", "../node_modules/sigplot/js/m.js", "../node_modules/tinycolor2/tinycolor.js", "../node_modules/sigplot/js/ColorMap.js", "../node_modules/sigplot/js/CanvasInput.js", "../node_modules/sigplot/js/mx.dommenu.js", "../node_modules/sigplot/js/mx.js", "../node_modules/sigplot/js/sigplot.layer1d.js", "../node_modules/sigplot/js/sigplot.layer2d.js", "../node_modules/events/events.js", "../node_modules/inherits/inherits_browser.js", "../node_modules/lru/index.js", "../node_modules/sigplot/js/sigplot.layer1dSDS.js", "../node_modules/sigplot/js/sigplot.layer2dSDS.js", "../node_modules/sigplot/js/sigplot.plugin.js", "../node_modules/sigplot/js/sigplot.accordion.js", "../node_modules/sigplot/js/sigplot.annotations.js", "../node_modules/sigplot/js/sigplot.boxes.js", "../node_modules/sigplot/js/sigplot.playback.js", "../node_modules/sigplot/js/sigplot.slider.js", "../node_modules/sigplot/js/sigplot.js", "../src/sigplot.js", "../src/arraylayer.js", "../src/layer.js", "../src/pipelayer.js", "../src/hreflayer.js", "../src/bluelayer.js", "../src/websocketlayer.js", "../src/plugin.js"],
  "sourcesContent": ["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n", "/** @license React v17.0.2\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=require(\"object-assign\"),n=60103,p=60106;exports.Fragment=60107;exports.StrictMode=60108;exports.Profiler=60114;var q=60109,r=60110,t=60112;exports.Suspense=60113;var u=60115,v=60116;\nif(\"function\"===typeof Symbol&&Symbol.for){var w=Symbol.for;n=w(\"react.element\");p=w(\"react.portal\");exports.Fragment=w(\"react.fragment\");exports.StrictMode=w(\"react.strict_mode\");exports.Profiler=w(\"react.profiler\");q=w(\"react.provider\");r=w(\"react.context\");t=w(\"react.forward_ref\");exports.Suspense=w(\"react.suspense\");u=w(\"react.memo\");v=w(\"react.lazy\")}var x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){if(null===a||\"object\"!==typeof a)return null;a=x&&a[x]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function z(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar A={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},B={};function C(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}C.prototype.isReactComponent={};C.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(z(85));this.updater.enqueueSetState(this,a,b,\"setState\")};C.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction D(){}D.prototype=C.prototype;function E(a,b,c){this.props=a;this.context=b;this.refs=B;this.updater=c||A}var F=E.prototype=new D;F.constructor=E;l(F,C.prototype);F.isPureReactComponent=!0;var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,c){var e,d={},k=null,h=null;if(null!=b)for(e in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)H.call(b,e)&&!I.hasOwnProperty(e)&&(d[e]=b[e]);var g=arguments.length-2;if(1===g)d.children=c;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];d.children=f}if(a&&a.defaultProps)for(e in g=a.defaultProps,g)void 0===d[e]&&(d[e]=g[e]);return{$$typeof:n,type:a,key:k,ref:h,props:d,_owner:G.current}}\nfunction K(a,b){return{$$typeof:n,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function L(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===n}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var M=/\\/+/g;function N(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction O(a,b,c,e,d){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case n:case p:h=!0}}if(h)return h=a,d=d(h),a=\"\"===e?\".\"+N(h,0):e,Array.isArray(d)?(c=\"\",null!=a&&(c=a.replace(M,\"$&/\")+\"/\"),O(d,b,c,\"\",function(a){return a})):null!=d&&(L(d)&&(d=K(d,c+(!d.key||h&&h.key===d.key?\"\":(\"\"+d.key).replace(M,\"$&/\")+\"/\")+a)),b.push(d)),1;h=0;e=\"\"===e?\".\":e+\":\";if(Array.isArray(a))for(var g=\n0;g<a.length;g++){k=a[g];var f=e+N(k,g);h+=O(k,b,c,f,d)}else if(f=y(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=e+N(k,g++),h+=O(k,b,c,f,d);else if(\"object\"===k)throw b=\"\"+a,Error(z(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return h}function P(a,b,c){if(null==a)return a;var e=[],d=0;O(a,e,\"\",\"\",function(a){return b.call(c,a,d++)});return e}\nfunction Q(a){if(-1===a._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}var R={current:null};function S(){var a=R.current;if(null===a)throw Error(z(321));return a}var T={ReactCurrentDispatcher:R,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:G,IsSomeRendererActing:{current:!1},assign:l};\nexports.Children={map:P,forEach:function(a,b,c){P(a,function(){b.apply(this,arguments)},c)},count:function(a){var b=0;P(a,function(){b++});return b},toArray:function(a){return P(a,function(a){return a})||[]},only:function(a){if(!L(a))throw Error(z(143));return a}};exports.Component=C;exports.PureComponent=E;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=T;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(z(267,a));var e=l({},a.props),d=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)H.call(b,f)&&!I.hasOwnProperty(f)&&(e[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)e.children=c;else if(1<f){g=Array(f);for(var m=0;m<f;m++)g[m]=arguments[m+2];e.children=g}return{$$typeof:n,type:a.type,\nkey:d,ref:k,props:e,_owner:h}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:r,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:q,_context:a};return a.Consumer=a};exports.createElement=J;exports.createFactory=function(a){var b=J.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:t,render:a}};exports.isValidElement=L;\nexports.lazy=function(a){return{$$typeof:v,_payload:{_status:-1,_result:a},_init:Q}};exports.memo=function(a,b){return{$$typeof:u,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return S().useCallback(a,b)};exports.useContext=function(a,b){return S().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return S().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return S().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return S().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return S().useMemo(a,b)};exports.useReducer=function(a,b,c){return S().useReducer(a,b,c)};exports.useRef=function(a){return S().useRef(a)};exports.useState=function(a){return S().useState(a)};exports.version=\"17.0.2\";\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n", "/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "//fgnass.github.com/spin.js#v1.2.5\n/**\n * Copyright (c) 2011 Felix Gnass [fgnass at neteye dot de]\n * Licensed under the MIT license\n */\n\nvar prefixes = ['webkit', 'Moz', 'ms', 'O']; /* Vendor prefixes */\nvar animations = {}; /* Animation rules keyed by their name */\nvar useCssAnimations;\n\n/**\n * Utility function to create elements. If no tag name is given,\n * a DIV is created. Optionally properties can be passed.\n */\nfunction createEl(tag, prop) {\n  var el = document.createElement(tag || 'div');\n  var n;\n\n  for(n in prop) {\n    el[n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Appends children and returns the parent.\n */\nfunction ins(parent /* child1, child2, ...*/) {\n  for (var i=1, n=arguments.length; i<n; i++) {\n    parent.appendChild(arguments[i]);\n  }\n  return parent;\n}\n\n/**\n * Insert a new stylesheet to hold the @keyframe or VML rules.\n */\nvar sheet = function() {\n  var el = createEl('style');\n  ins(document.getElementsByTagName('head')[0], el);\n  return el.sheet || el.styleSheet;\n}();\n\n/**\n * Creates an opacity keyframe animation rule and returns its name.\n * Since most mobile Webkits have timing issues with animation-delay,\n * we create separate rules for each line/segment.\n */\nfunction addAnimation(alpha, trail, i, lines) {\n  var name = ['opacity', trail, ~~(alpha*100), i, lines].join('-');\n  var start = 0.01 + i/lines*100;\n  var z = Math.max(1-(1-alpha)/trail*(100-start) , alpha);\n  var prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase();\n  var pre = prefix && '-'+prefix+'-' || '';\n\n  if (!animations[name]) {\n    sheet.insertRule(\n      '@' + pre + 'keyframes ' + name + '{' +\n      '0%{opacity:'+z+'}' +\n      start + '%{opacity:'+ alpha + '}' +\n      (start+0.01) + '%{opacity:1}' +\n      (start+trail)%100 + '%{opacity:'+ alpha + '}' +\n      '100%{opacity:'+ z + '}' +\n      '}', 0);\n    animations[name] = 1;\n  }\n  return name;\n}\n\n/**\n * Tries various vendor prefixes and returns the first supported property.\n **/\nfunction vendor(el, prop) {\n  var s = el.style;\n  var pp;\n  var i;\n\n  if(s[prop] !== undefined) return prop;\n  prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for(i=0; i<prefixes.length; i++) {\n    pp = prefixes[i]+prop;\n    if(s[pp] !== undefined) return pp;\n  }\n}\n\n/**\n * Sets multiple style properties at once.\n */\nfunction css(el, prop) {\n  for (var n in prop) {\n    el.style[vendor(el, n)||n] = prop[n];\n  }\n  return el;\n}\n\n/**\n * Fills in default values.\n */\nfunction merge(obj) {\n  for (var i=1; i < arguments.length; i++) {\n    var def = arguments[i];\n    for (var n in def) {\n      if (obj[n] === undefined) obj[n] = def[n];\n    }\n  }\n  return obj;\n}\n\n/**\n * Returns the absolute page-offset of the given element.\n */\nfunction pos(el) {\n  var o = {x:el.offsetLeft, y:el.offsetTop};\n  while((el = el.offsetParent)) {\n    o.x+=el.offsetLeft;\n    o.y+=el.offsetTop;\n  }\n  return o;\n}\n\nvar defaults = {\n  lines: 12,            // The number of lines to draw\n  length: 7,            // The length of each line\n  width: 5,             // The line thickness\n  radius: 10,           // The radius of the inner circle\n  rotate: 0,            // rotation offset\n  color: '#000',        // #rgb or #rrggbb\n  speed: 1,             // Rounds per second\n  trail: 100,           // Afterglow percentage\n  opacity: 1/4,         // Opacity of the lines\n  fps: 20,              // Frames per second when using setTimeout()\n  zIndex: 2e9,          // Use a high z-index by default\n  className: 'spinner', // CSS class to assign to the element\n  top: 'auto',          // center vertically\n  left: 'auto'          // center horizontally\n};\n\n/** The constructor */\nvar Spinner = function Spinner(o) {\n  if (!this.spin) return new Spinner(o);\n  this.opts = merge(o || {}, Spinner.defaults, defaults);\n};\n\nSpinner.defaults = {};\nmerge(Spinner.prototype, {\n  spin: function(target) {\n    this.stop();\n    var self = this;\n    var o = self.opts;\n    var el = self.el = css(createEl(0, {className: o.className}), {position: 'relative', zIndex: o.zIndex});\n    var mid = o.radius+o.length+o.width;\n    var ep; // element position\n    var tp; // target position\n\n    if (target) {\n      target.insertBefore(el, target.firstChild||null);\n      tp = pos(target);\n      ep = pos(el);\n      css(el, {\n        left: (o.left == 'auto' ? tp.x-ep.x + (target.offsetWidth >> 1) : o.left+mid) + 'px',\n        top: (o.top == 'auto' ? tp.y-ep.y + (target.offsetHeight >> 1) : o.top+mid)  + 'px'\n      });\n    }\n\n    el.setAttribute('aria-role', 'progressbar');\n    self.lines(el, self.opts);\n\n    if (!useCssAnimations) {\n      // No CSS animation support, use setTimeout() instead\n      var i = 0;\n      var fps = o.fps;\n      var f = fps/o.speed;\n      var ostep = (1-o.opacity)/(f*o.trail / 100);\n      var astep = f/o.lines;\n\n      !function anim() {\n        i++;\n        for (var s=o.lines; s; s--) {\n          var alpha = Math.max(1-(i+s*astep)%f * ostep, o.opacity);\n          self.opacity(el, o.lines-s, alpha, o);\n        }\n        self.timeout = self.el && setTimeout(anim, ~~(1000/fps));\n      }();\n    }\n    return self;\n  },\n  stop: function() {\n    var el = this.el;\n    if (el) {\n      clearTimeout(this.timeout);\n      if (el.parentNode) el.parentNode.removeChild(el);\n      this.el = undefined;\n    }\n    return this;\n  },\n  lines: function(el, o) {\n    var i = 0;\n    var seg;\n\n    function fill(color, shadow) {\n      return css(createEl(), {\n        position: 'absolute',\n        width: (o.length+o.width) + 'px',\n        height: o.width + 'px',\n        background: color,\n        boxShadow: shadow,\n        transformOrigin: 'left',\n        transform: 'rotate(' + ~~(360/o.lines*i+o.rotate) + 'deg) translate(' + o.radius+'px' +',0)',\n        borderRadius: (o.width>>1) + 'px'\n      });\n    }\n    for (; i < o.lines; i++) {\n      seg = css(createEl(), {\n        position: 'absolute',\n        top: 1+~(o.width/2) + 'px',\n        transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n        opacity: o.opacity,\n        animation: useCssAnimations && addAnimation(o.opacity, o.trail, i, o.lines) + ' ' + 1/o.speed + 's linear infinite'\n      });\n      if (o.shadow) ins(seg, css(fill('#000', '0 0 4px ' + '#000'), {top: 2+'px'}));\n      ins(el, ins(seg, fill(o.color, '0 0 1px rgba(0,0,0,.1)')));\n    }\n    return el;\n  },\n  opacity: function(el, i, val) {\n    if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////\n// VML rendering for IE\n/////////////////////////////////////////////////////////////////////////\n\n/**\n * Check and init VML support\n */\n!function() {\n\n  function vml(tag, attr) {\n    return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n  }\n\n  var s = css(createEl('group'), {behavior: 'url(#default#VML)'});\n\n  if (!vendor(s, 'transform') && s.adj) {\n\n    // VML support detected. Insert CSS rule ...\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function(el, o) {\n      var r = o.length+o.width;\n      var s = 2*r;\n\n      function grp() {\n        return css(vml('group', {coordsize: s +' '+s, coordorigin: -r +' '+-r}), {width: s, height: s});\n      }\n\n      var margin = -(o.width+o.length)*2+'px';\n      var g = css(grp(), {position: 'absolute', top: margin, left: margin});\n\n      var i;\n\n      function seg(i, dx, filter) {\n        ins(g,\n          ins(css(grp(), {rotation: 360 / o.lines * i + 'deg', left: ~~dx}),\n            ins(css(vml('roundrect', {arcsize: 1}), {\n                width: r,\n                height: o.width,\n                left: o.radius,\n                top: -o.width>>1,\n                filter: filter\n              }),\n              vml('fill', {color: o.color, opacity: o.opacity}),\n              vml('stroke', {opacity: 0}) // transparent stroke to fix color bleeding upon opacity change\n            )\n          )\n        );\n      }\n\n      if (o.shadow) {\n        for (i = 1; i <= o.lines; i++) {\n          seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n        }\n      }\n      for (i = 1; i <= o.lines; i++) seg(i);\n      return ins(el, g);\n    };\n    Spinner.prototype.opacity = function(el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n      if (c && i+o < c.childNodes.length) {\n        c = c.childNodes[i+o]; c = c && c.firstChild; c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n  else {\n    useCssAnimations = vendor(s, 'animation');\n  }\n}();\n\nmodule.exports = Spinner;\n", "/**\n * @license\n * File: common.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\nmodule.exports = {};\n\nif (window.ArrayBuffer) {\n    if (!ArrayBuffer.prototype.slice) {\n        //Monkey Patching for iOS and early Firefox\n        ArrayBuffer.prototype.slice = function(start, end) {\n            var that = new Uint8Array(this);\n            if (end === undefined) {\n                end = that.length;\n            }\n            var result = new ArrayBuffer(end - start);\n            var resultArray = new Uint8Array(result);\n            for (var i = 0; i < resultArray.length; i++) {\n                resultArray[i] = that[i + start];\n            }\n            return result;\n        };\n    }\n\n    if (!ArrayBuffer['isView']) {\n        ArrayBuffer.isView = function(a) {\n          return a !== null && typeof(a) === \"object\" && a['buffer'] instanceof ArrayBuffer;\n        };\n      }\n}\n\n// Shim for requestAnimationFrame compatibility\nwindow.requestAnimFrame = (function(callback) {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame ||\n        function(callback) {\n            return window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nwindow.cancelAnimFrame = (function(callback) {\n    return window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || window.oCancelAnimationFrame || window.msCanelAnimationFrame ||\n        function(timeoutID) {\n            window.clearTimeout(timeoutID);\n    };\n})();\n\n// Handle various ways to draw dashed lines\nmodule.exports.dashOn = function(ctx, on, off) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([on, off]);\n        return true;\n    } else if (ctx.mozDash !== undefined) { // Gecko 7.0+\n        ctx.mozDash = [on, off];\n        return true;\n    } else if (ctx.webkitLineDash && ctx.webkitLineDash.length === 0) {\n        ctx.webkitLineDash = [on, off];\n        return true;\n    }\n    return false;\n};\n\nmodule.exports.dashOff = function(ctx) {\n    if (ctx.setLineDash) {\n        ctx.setLineDash([]);\n    } else if (ctx.mozDash) { // Gecko 7.0+\n        ctx.mozDash = null;\n    } else if (ctx.webkitLineDash) {\n        ctx.webkitLineDash = [];\n    }\n};\n\n// Firefox behaves differntly for keypress events\nmodule.exports.getKeyCode = function(e) {\n    e = window.event || e;\n    e = e.charCode || e.keyCode;\n    return e;\n};\n\nmodule.exports.setKeypressHandler = function(handler) {\n    if (window.addEventListener) { window.addEventListener('keypress', handler, false); }\n    else if (window.attachEvent) {\n        window.attachEvent('onkeypress', handler);\n    }\n};\n\n// endsWith() is part of ECMAScript 6, include the Mozilla\n// Polyfill from https://developer.mozilla.org\nif (!String.prototype.endsWith) {\n    String.prototype.endsWith = function(search, this_len) {\n        if (this_len === undefined || this_len > this.length) {\n            this_len = this.length;\n        }\n        return this.substring(this_len - search.length, this_len) === search;\n    };\n}\n\nif (!Uint8Array.prototype.slice) {\n    Object.defineProperty(Uint8Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int8Array.prototype.slice) {\n    Object.defineProperty(Int8Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int16Array.prototype.slice) {\n    Object.defineProperty(Int16Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Int32Array.prototype.slice) {\n    Object.defineProperty(Int32Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Float32Array.prototype.slice) {\n    Object.defineProperty(Float32Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\nif (!Float64Array.prototype.slice) {\n    Object.defineProperty(Float64Array.prototype, 'slice', {\n        value: Array.prototype.slice\n    });\n}\n\n// Array.isArray\n// FF 4+\n// IE 9+\n// SF 5+\n// http://kangax.github.io/es5-compat-table/#Array.isArray\nif (!Array.isArray) {\n    Array.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === \"[object Array]\";\n    };\n}\n\nif (!window.Float64Array) {\n    //Monkey Patching for iOS\n    // This is essentially ReadOnly because\n    // if someone does x[i] = 5\n    // the value will be set in the array\n    // but not in the underlying buffer\n    window.Float64Array = (function() {\n        return window.Float64Array ||\n            function(buffer, byteOffset, length) {\n                if (!(buffer instanceof ArrayBuffer)) {\n                    throw \"Invalid type\";\n                }\n                var dv = new DataView(buffer);\n                var b = [];\n                var maxlength = (buffer.byteLength - byteOffset) / 8;\n                if (length === undefined) {\n                    b.length = maxlength;\n                } else {\n                    b.length = Math.min(length, maxlength);\n                }\n\n                for (var i = 0; i < b.length; i++) {\n                    b[i] = dv.getFloat64(i * 8 + byteOffset, true);\n                }\n                b.subarray = function(begin, end) {\n                    return b.slice(begin, end);\n                };\n                return b;\n        };\n    })();\n}\n\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/transfer\nif (!ArrayBuffer.transfer) {\n    ArrayBuffer.transfer = function(source, length) {\n        if (!(source instanceof ArrayBuffer)) {\n            throw new TypeError('Source must be an instance of ArrayBuffer');\n        }\n        if (length <= source.byteLength) {\n            return source.slice(0, length);\n        }\n        var sourceView = new Uint8Array(source),\n            destView = new Uint8Array(new ArrayBuffer(length));\n        destView.set(sourceView);\n        return destView.buffer;\n    };\n}\n\n// Shims\n(function() {\n    /* console shim*/\n    var f = function() {};\n    if (!window.console) {\n        window.console = {\n            log: f,\n            info: f,\n            warn: f,\n            debug: f,\n            error: f\n        };\n    }\n\n    // Firefox 4 has a glaring subarray bug\n    // http://ryanberdeen.com/2011/04/16/firefox-subarray-bug.html\n    if (new Int8Array([0, 1, 0]).subarray(1).subarray(1)[0]) {\n        var subarray = function(begin, end) {\n            if (arguments.length === 0) {\n                begin = 0;\n                end = this.length;\n            } else {\n                if (begin < 0) {\n                    // relative to end\n                    begin += this.length;\n                }\n                // clamp to 0, length\n                begin = Math.max(0, Math.min(this.length, begin));\n                if (arguments.length === 1) {\n                    // slice to end\n                    end = this.length;\n                } else {\n                    if (end < 0) {\n                        // relative to end\n                        end += this.length;\n                    }\n                    // clamp to begin, length\n                    end = Math.max(begin, Math.min(this.length, end));\n                }\n            }\n\n            var byteOffset = this.byteOffset + begin * this.BYTES_PER_ELEMENT;\n            return new this.constructor(this.buffer, byteOffset, end - begin);\n        };\n\n        var typedArrays = [Int8Array, Uint8Array, Int16Array, Uint16Array,\n            Int32Array, Uint32Array, Float32Array, Float64Array\n        ];\n        typedArrays.forEach(function(cls) {\n            cls.prototype.subarray = subarray;\n        });\n    }\n\n}());\n\n// https://developer.mozilla.org/en-US/docs/Web/Reference/Events/wheel?redirectlocale=en-US&redirectslug=DOM%2FMozilla_event_reference%2Fwheel#Listening_to_this_event_across_browser\n// creates a global \"addWheelListener\" method\n// example: addWheelListener( elem, function( e ) { console.log( e.deltaY ); e.preventDefault(); } );\n(function(window, document) {\n\n    var prefix = \"\",\n        _addEventListener, onwheel, support;\n\n    // detect event model\n    if (window.addEventListener) {\n        _addEventListener = \"addEventListener\";\n    } else {\n        _addEventListener = \"attachEvent\";\n        prefix = \"on\";\n    }\n\n    // detect available wheel event\n    support = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" : // Modern browsers support \"wheel\"\n    document.onmousewheel !== undefined ? \"mousewheel\" : // Webkit and IE support at least \"mousewheel\"\n    \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n\n    window.addWheelListener = function(elem, callback, useCapture) {\n        _addWheelListener(elem, support, callback, useCapture);\n\n        // handle MozMousePixelScroll in older Firefox\n        if (support === \"DOMMouseScroll\") {\n            _addWheelListener(elem, \"MozMousePixelScroll\", callback, useCapture);\n        }\n    };\n\n    /* jshint -W030 */\n    function _addWheelListener(elem, eventName, callback, useCapture) {\n        elem[_addEventListener](prefix + eventName, support === \"wheel\" ? callback : function(originalEvent) {\n            !originalEvent && (originalEvent = window.event);\n\n            // create a normalized event object\n            var event = {\n                // keep a ref to the original event object\n                originalEvent: originalEvent,\n                target: originalEvent.target || originalEvent.srcElement,\n                type: \"wheel\",\n                deltaMode: originalEvent.type === \"MozMousePixelScroll\" ? 0 : 1,\n                deltaX: 0,\n                delatZ: 0,\n                preventDefault: function() {\n                    originalEvent.preventDefault ?\n                        originalEvent.preventDefault() :\n                        originalEvent.returnValue = false;\n                }\n            };\n\n            // calculate deltaY (and deltaX) according to the event\n            if (support === \"mousewheel\") {\n                event.deltaY = -1 / 40 * originalEvent.wheelDelta;\n                // Webkit also support wheelDeltaX\n                originalEvent.wheelDeltaX && (event.deltaX = -1 / 40 * originalEvent.wheelDeltaX);\n            } else {\n                event.deltaY = originalEvent.detail;\n            }\n\n            // it's time to fire the callback\n            return callback(event);\n\n        }, useCapture || false);\n    }\n    /* jshint +W030 */\n\n})(window, document);\n//Add Proxy poly fill https://github.com/GoogleChrome/proxy-polyfill\nif(!window.Proxy){\n/* jshint ignore:start */\n(function(){function l(){function n(a){return a?\"object\"===typeof a||\"function\"===typeof a:!1}var p=null;var g=function(a,b){function f(){}if(!n(a)||!n(b))throw new TypeError(\"Cannot create proxy with a non-object as target or handler\");p=function(){f=function(a){throw new TypeError(\"Cannot perform '\"+a+\"' on a proxy that has been revoked\");}};var e=b;b={get:null,set:null,apply:null,construct:null};for(var k in e){if(!(k in b))throw new TypeError(\"Proxy polyfill does not support trap '\"+k+\"'\");b[k]=e[k]}\"function\"===\ntypeof e&&(b.apply=e.apply.bind(e));var c=this,g=!1,q=!1;\"function\"===typeof a?(c=function(){var h=this&&this.constructor===c,d=Array.prototype.slice.call(arguments);f(h?\"construct\":\"apply\");return h&&b.construct?b.construct.call(this,a,d):!h&&b.apply?b.apply(a,this,d):h?(d.unshift(a),new (a.bind.apply(a,d))):a.apply(this,d)},g=!0):a instanceof Array&&(c=[],q=!0);var r=b.get?function(a){f(\"get\");return b.get(this,a,c)}:function(a){f(\"get\");return this[a]},v=b.set?function(a,d){f(\"set\");b.set(this,\na,d,c)}:function(a,b){f(\"set\");this[a]=b},t={};Object.getOwnPropertyNames(a).forEach(function(b){if(!((g||q)&&b in c)){var d={enumerable:!!Object.getOwnPropertyDescriptor(a,b).enumerable,get:r.bind(a,b),set:v.bind(a,b)};Object.defineProperty(c,b,d);t[b]=!0}});e=!0;Object.setPrototypeOf?Object.setPrototypeOf(c,Object.getPrototypeOf(a)):c.__proto__?c.__proto__=a.__proto__:e=!1;if(b.get||!e)for(var m in a)t[m]||Object.defineProperty(c,m,{get:r.bind(a,m)});Object.seal(a);Object.seal(c);return c};g.revocable=\nfunction(a,b){return{proxy:new g(a,b),revoke:p}};return g};var u=\"undefined\"!==typeof process&&\"[object process]\"==={}.toString.call(process)||\"undefined\"!==typeof navigator&&\"ReactNative\"===navigator.product?global:self;u.Proxy||(u.Proxy=l(),u.Proxy.revocable=u.Proxy.revocable);})();\n/* jshint ignore:end */\n}\n\n//Updates destenation object with source values\nmodule.exports.update = function update(dst, src) {\n    for (var prop in src) {\n        var val = src[prop];\n        if (typeof val === \"object\") { // recursive\n            update(dst[prop], val);\n        } else {\n            dst[prop] = val;\n        }\n    }\n    return dst; // return dst to allow method chaining\n};\n\n// From: https://davidwalsh.name/javascript-debounce-function\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nmodule.exports.debounce = function debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) {\n                func.apply(context, args);\n            }\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) {\n            func.apply(context, args);\n        }\n\t};\n};\n\n// From https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n// consider using the uuid module instead\nmodule.exports.uuidv4 = function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n      return v.toString(16);\n    });\n};\n\n}());\n\n\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sigfile\"] = factory();\n\telse\n\t\troot[\"sigfile\"] = factory();\n})(window, function() {\nreturn ", " \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n", "/**\n * BitArray class implementing the JS `TypedArray` interface\n * for a binary array.\n */\nclass BitArray {\n  /**\n   * Constructor for `BitArray`\n   *\n   * This allows you to provide either an `ArrayBuffer` with pre-existing\n   * data or a requested bit-size of the BitArray.\n   *\n   * @example <caption>Setting up BitArray with requested number of bits</caption>\n   * const arr = new BitArray(32);\n   *\n   * @example <caption>Setting up BitArray from another ArrayBuffer</caption>\n   * const u8_arr = new Uint8Array([255, 230]);\n   * const arr = new BitArray(u8_arr.buffer);\n   *\n   * @memberOf BitArray\n   * @param {ArrayBuffer|number} buf - Either an existing buffer containing data\n   *                                   or a number indicating the size of the BitArray\n   * @returns {BitArray}\n   */\n  constructor(buf) {\n    if (!(buf instanceof ArrayBuffer) && typeof buf === 'number') {\n      this.buffer = new ArrayBuffer(buf / 8);\n      this.u8 = new Uint8Array(this.buffer);\n    } else {\n      this.buffer = buf;\n      this.u8 = new Uint8Array(buf);\n    }\n    return new Proxy(this, {\n      get(obj, prop) {\n        if (!obj[prop]) {\n          return obj.getBit(prop);\n        } else {\n          return obj[prop];\n        }\n      },\n      set(obj, prop, value) {\n        const propInt = parseInt(prop);\n        if (isNaN(propInt)) {\n          return false;\n        } else {\n          obj.setBit(prop, value);\n          return true;\n        }\n      },\n    });\n  }\n\n  /**\n   * Wrapper around `BitArray.setArray` to ensure further\n   * compliance to TypedArray interface.\n   *\n   * @param {ArrayLike|Array} array\n   * @see {@link setArray} for further information.\n   */\n  set(array) {\n    this.setArray(array);\n  }\n\n  /**\n   * Get the bit (0 or 1) at bit index `idx`\n   *\n   * @example <caption>Getting a bit at index 0 with getBit</caption>\n   * // returns 1\n   * const u8_arr = new Uint8Array([255, 0]);\n   * const arr = new BitArray(u8_arr.buffer);\n   * arr.getBit(0)\n   *\n   * @example <caption>Getting a bit at index 0 with []</caption>\n   * // returns 1\n   * const u8_arr = new Uint8Array([255, 0]);\n   * const arr = new BitArray(u8_arr.buffer);\n   * arr[0]\n   *\n   * @memberOf BitArray\n   * @param {number} idx - Bit index\n   * @returns {number} 0 or 1 depending on if bit at `idx` is set\n   */\n  getBit(idx) {\n    const v = this.u8[idx >> 3];\n    const off = idx & 0x7;\n    return (v >> (7 - off)) & 1;\n  }\n\n  /**\n   * Size of `BitArray`\n   *\n   * @example <caption>Getting the length of BitArray</caption>\n   * // returns 16\n   * const u8_arr = new Uint8Array([255, 0]);\n   * const arr = new BitArray(u8_arr.buffer);\n   * arr.length\n   *\n   * @memberOf BitArray\n   * @returns {number} The size of `BitArray` in number of bits\n   */\n  get length() {\n    return this.u8.byteLength * 8;\n  }\n\n  /**\n   * Set the bit at bit index `idx`\n   *\n   * Note: Non-zero `val` will set the bit to 1. 0 or undefined\n   * `val` will set the bit to 0.\n   *\n   * @example <caption>Set the bit at index 0 to 1</caption>\n   * const u8_arr = new Uint8Array([255, 0]);\n   * const arr = new BitArray(u8_arr.buffer);\n   * arr.setBit(0, 1);\n   *\n   * @memberOf BitArray\n   * @param {number} idx - Bit index to set bit\n   * @param {number?} val Value of bit to set (0 or 1)\n   */\n  setBit(idx, val) {\n    const off = idx & 0x7;\n    if (val) {\n      this.u8[idx >> 3] |= 0x80 >> off;\n    } else {\n      this.u8[idx >> 3] &= ~(0x80 >> off);\n    }\n  }\n\n  /**\n   * Set the BitArray to `array`\n   *\n   * @example <caption>Set the BitArray to another binary array</caption>\n   * const arr = new BitArray(4);\n   * arr.setArray([1, 0, 0, 0);\n   *\n   * @memberOf BitArray\n   * @param {ArrayLike|number[]|BitArray} array - An array of binary data\n   */\n  setArray(array) {\n    // Iterate over `array.length` in case `.forEach`\n    // hasn't been defined for `array`'s type\n    const len = array.length;\n    for (let i = 0; i < len; i++) {\n      this.setBit(i, array[i]);\n    }\n  }\n\n  /**\n   * Returns the binary array from [start, stop)\n   *\n   * Note: if `start` and `stop` aren't provided,\n   * this will return the entire array from [0, array.length].\n   *\n   * @example <caption>Get the subarray from 0 to 4</caption>\n   * // returns [1, 1, 1, 1]\n   * const u8_arr = new Uint8Array([255, 0]);\n   * const arr = new BitArray(u8_arr);\n   * arr.subarray(0, 4);\n   *\n   * @memberOf BitArray\n   * @param {number?} start - Start bit index\n   * @param {number?} stop - Stop bit index\n   * @returns {number[]} Binary array in [`start`, `stop`)\n   */\n  subarray(start, stop) {\n    let sub = [];\n    start = start || 0;\n    start = start < 0 ? 0 : start;\n    stop = stop || this.length;\n    stop = stop > this.length ? this.length : stop;\n    for (let i = start; i < stop; i++) {\n      sub.push(this.getBit(i));\n    }\n    return sub;\n  }\n}\n\nexport default BitArray;\n", "/**\n * @license apache-2.0\n * @file util.src\n * Copyright (c) 2012-2020, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigFile.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/**\n * @namespace util\n */\n\n/**\n * Returns the endianness of the browser\n *\n * @example\n * // returns true\n * const whichEndian = endianness();\n * whichEndian === \"LE\"\n *\n * @memberof util\n * @private\n * @returns {string} \"LE\" for Little Endian and \"BE\" for Big Endian\n * @throws {Error} Throws Error if endianness is unknown\n * @see {@link https://gist.github.com/TooTallNate/4750953}\n */\nfunction endianness() {\n  const b = new ArrayBuffer(4);\n  const a = new Uint32Array(b);\n  const c = new Uint8Array(b);\n  a[0] = 0xdeadbeef;\n  if (c[0] === 0xef) {\n    return 'LE';\n  } else if (c[0] === 0xde) {\n    return 'BE';\n  } else {\n    throw new Error('unknown endianness');\n  }\n}\n\n/**\n * JS implementation of Python's dict.update method.\n * This updates object `dst` with the properties in `src`.\n *\n * Note: This has been deprecated in v0.1.4 in favor\n * of the faster `Object.assign(target, source)`.\n *\n * @deprecated since v0.1.4\n *\n * @example <caption>Update object</caption>\n * // returns {a: 1, b: 2, c: 1, d: 3}\n * const d1 = {a: 1, b: 2};\n * const d2 = {c: 1, d: 3};\n * update(d1, d2) // d1 is now `{a: 1, b: 2, c: 1, d: 3}`\n *\n * @memberOf util\n * @param {object} dst - The object that will be updated\n * @param {object} src - The object whose properties will be added to `dst`\n * @returns {object} The updated `dst`. This is only returned for chaining.\n */\nfunction update(dst, src) {\n  for (let prop in src) {\n    if (Object.prototype.hasOwnProperty.call(src, prop)) {\n      const val = src[prop];\n      if (typeof val === 'object') {\n        // recursive\n        if (dst[prop] === undefined) {\n          dst[prop] = {};\n        }\n        update(dst[prop], val);\n      } else {\n        dst[prop] = val;\n      }\n    }\n  }\n  return dst; // return dst to allow method chaining\n}\n\n/**\n * Returns the 64-bit integer from the data buffer at\n * the requested offset.\n *\n * @memberOf util\n * @param {DataView} dataView - Data buffer\n * @param {number} index - The byte offset into the data buffer\n * @param {boolean} littleEndian - The endianness of the data\n * @returns {number} The 64-bit integer from the `dataView`\n */\nfunction getInt64(dataView, index, littleEndian) {\n  const MAX_INT = Math.pow(2, 53);\n  const [highIndex, lowIndex] = littleEndian ? [4, 0] : [0, 4];\n  const high = dataView.getInt32(index + highIndex, littleEndian);\n  const low = dataView.getInt32(index + lowIndex, littleEndian);\n  const rv = low + pow2(32) * high;\n  if (rv >= MAX_INT) {\n    console.warn('Int is bigger than JS can represent.');\n    return Infinity;\n  } else {\n    return rv;\n  }\n}\n\n/**\n * Determine whether `String.fromCharCode.apply` supports\n * typed arrays as input.\n *\n * @example\n * // returns true\n * applySupportsTypedArray()\n *\n * @memberOf util\n * @returns {boolean} Whether `String.fromCharCode.apply` supports typed arrays\n */\nfunction applySupportsTypedArray() {\n  try {\n    const uintbuf = new Uint8Array(new ArrayBuffer(4));\n    uintbuf[0] = 66;\n    uintbuf[1] = 76;\n    uintbuf[2] = 85;\n    uintbuf[3] = 69;\n    const test = String.fromCharCode.apply(null, uintbuf);\n    if (test !== 'BLUE') {\n      return false;\n    }\n  } catch (error) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Convert an ArrayBuffer to a string\n *\n * @memberOf util\n * @param   {ArrayBuffer | Array} buf - Data buffer\n * @param   {boolean} [apply=undefined] - whether or not apply supports typed arrays\n * @returns {string} The string representation of the data buffer\n */\nfunction ab2str(buf, apply) {\n  const uintbuf = new Uint8Array(buf);\n  // Set `_applySupportsTypedArray` as static variable\n  if (typeof ab2str._applySupportsTypedArray == 'undefined') {\n    // It has not... perform the initialization\n    if (apply !== undefined) {\n      ab2str._applySupportsTypedArray = apply;\n    } else {\n      ab2str._applySupportsTypedArray = applySupportsTypedArray();\n    }\n  }\n  // Firefox 3.6 nor iOS devices can use ArrayBuffers with .apply\n  if (ab2str._applySupportsTypedArray) {\n    return String.fromCharCode.apply(null, uintbuf);\n  } else {\n    return uintbuf.reduce((prev, curr) => {\n      return prev + String.fromCharCode(curr);\n    }, '');\n  }\n}\n\n/**\n * Convert a string to an ArrayBuffer\n *\n * @memberOf util\n * @param {string} str - The string being turning into an ArrayBuffer\n * @returns {ArrayBuffer} The ArrayBuffer representation of the string\n */\nfunction str2ab(str) {\n  const buf = new ArrayBuffer(str.length * 2); // 2 bytes for each char\n  const bufView = new Uint16Array(buf);\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufView[i] = str.charCodeAt(i);\n  }\n  return buf;\n}\n\n/**\n * Calculate $2^n$\n *\n * If 31 > n >= 0 then a left-shift is used, otherwise Math.pow is used.\n *\n * @example\n * const result = pow2(5); // == 32\n *\n * @memberOf util\n * @param {number} n - The exponent that we're raising 2 to -- i.e., 2^n\n * @returns {number} The result of 2^n\n */\nfunction pow2(n) {\n  return n >= 0 && n < 31 ? 1 << n : pow2[n] || (pow2[n] = Math.pow(2, n));\n}\n\n/**\n * Internal method to create a new anchor element and uses location\n * properties (inherent) to get the desired URL data. Some String\n * operations are used (to normalize results across browsers).\n *\n * @memberOf util\n * @param   {string} url - Properly formatted URL\n * @returns {object} Object containing URL pieces parsed out\n *\n * @see {@link http://james.padolsey.com/javascript/parsing-urls-with-the-dom/}\n */\nfunction parseURL(url) {\n  const a = document.createElement('a');\n  a.href = url;\n  return {\n    source: url,\n    protocol: a.protocol.replace(':', ''),\n    host: a.hostname,\n    port: a.port,\n    query: a.search,\n    params: (function () {\n      const ret = {},\n        seg = a.search.replace(/^\\?/, '').split('&'),\n        len = seg.length;\n      for (let i = 0; i < len; i++) {\n        if (!seg[i]) {\n          continue;\n        }\n        let s = seg[i].split('=');\n        ret[s[0]] = s[1];\n      }\n      return ret;\n    })(),\n    file: (a.pathname.match(/\\/([^/?#]+)$/i) || [null, ''])[1],\n    hash: a.hash.replace('#', ''),\n    path: a.pathname.replace(/^([^/])/, '/$1'),\n    relative: (a.href.match(/tps?:\\/\\/[^/]+(.+)/) || [null, ''])[1],\n    segments: a.pathname.replace(/^\\//, '').split('/'),\n  };\n}\n\n/**\n * @callback onComplete\n * @param {ArrayBuffer} x - Callback for when text from HTTP response\n *                          has been converted into an ArrayBuffer\n */\n\n/**\n * Internal method to convert text from an HTTP response\n * into an ArrayBuffer.\n *\n * @memberOf util\n * @param {string} text - Text from HTTP response being converted\n * @param {onComplete} oncomplete - Callback that will run after text is converted\n * @param {number} [blocksize=1024] How much data we're expecting\n */\nfunction text2buffer(text, oncomplete, blocksize) {\n  blocksize = blocksize || 1024;\n  let i = 0;\n  const arrayBuffer = new ArrayBuffer(text.length);\n  const bufView = new Uint8Array(arrayBuffer);\n  const worker = () => {\n    const end = i + blocksize;\n    for (; i < end; i++) {\n      bufView[i] = text.charCodeAt(i) & 0xff;\n    }\n    if (i >= text.length) {\n      oncomplete(arrayBuffer);\n    } else {\n      setTimeout(worker, 0);\n    }\n  };\n  setTimeout(worker, 0);\n}\n\nexport {\n  applySupportsTypedArray,\n  endianness,\n  update,\n  getInt64,\n  ab2str,\n  str2ab,\n  pow2,\n  parseURL,\n  text2buffer,\n};\n", "import { parseURL, text2buffer } from './util';\n\n/**\n * Abstract class that should be extended\n */\nclass BaseFileReader {\n  /**\n   * Constructs a file reader for specific file types\n   *\n   * @param {BlueFileHeader|MatFileHeader} header_class\n   * @param {object} options\n   * @returns {BaseFileReader}\n   */\n  constructor(header_class, options) {\n    this.header_class = header_class;\n    this.options = options;\n  }\n\n  /**\n   * Internal method that will read a file or stop at the header\n   *\n   * @private\n   * @memberof BaseFileReader\n   * @param {File} theFile - a File object for the Bluefile or Matfile\n   * @param {function} onload - callback when the header has been read\n   * @param {boolean} justHeader - Whether or not to only read the header\n   */\n  _read(theFile, onload, justHeader) {\n    const that = this;\n    const reader = new FileReader();\n\n    // Note: webkitSlice is Chrome specific and deprecated now.\n    // For some backwards-compatibility, we'll continue to support it.\n    // In a future version, this will just use `File.slice`.\n    const sliceMethod =\n      theFile.webkitSlice === undefined ? 'slice' : 'webkitSlice';\n    const blob = justHeader ? theFile[sliceMethod](0, 512) : theFile;\n\n    // Closure to capture the file information.\n    reader.onloadend = ((theFile) => {\n      return function (e) {\n        if (e.target.error) {\n          onload(null);\n          return;\n        }\n        const raw = reader.result;\n        const hdr = new that.header_class(raw, that.options);\n        hdr.file = theFile;\n        hdr.file_name = theFile.name;\n        onload(hdr);\n      };\n    })(theFile);\n    reader.readAsArrayBuffer(blob);\n  }\n\n  /**\n   * Read only the header from a local {Blue,Mat}file.\n   *\n   * @memberof BaseFileReader\n   * @param {File} theFile - a File object for the Bluefile or Matfile\n   * @param {function} onload - callback when the header has been read\n   */\n  readheader(theFile, onload) {\n    this._read(theFile, onload, true);\n  }\n\n  /**\n   * Read a local Bluefile or Matfile on disk.\n   *\n   * @memberof BaseFileReader\n   * @param {File} theFile - a File object for the Bluefile or Matfile\n   * @param {function} onload - callback when the file has been read\n   */\n  read(theFile, onload) {\n    this._read(theFile, onload, false);\n  }\n\n  /**\n   * Read a Bluefile or Matfile from a URL\n   *\n   * @memberof BaseFileReader\n   * @param {string} href - the URL for the Bluefile or Matfile\n   * @param {function} onload - callback when the header has been read\n   */\n  read_http(href, onload) {\n    const that = this;\n    const oReq = new XMLHttpRequest();\n    oReq.open('GET', href, true);\n    oReq.responseType = 'arraybuffer';\n    oReq.overrideMimeType('text/plain; charset=x-user-defined');\n    oReq.onload = function (_oEvent) {\n      if (oReq.readyState === 4) {\n        if (oReq.status === 200 || oReq.status === 0) {\n          // status = 0 is necessary for file URL\n          let arrayBuffer = null; // Note: not oReq.responseText\n          if (oReq.response) {\n            arrayBuffer = oReq.response;\n            const hdr = new that.header_class(arrayBuffer, that.options);\n            const fileUrl = parseURL(href);\n            hdr.file_name = fileUrl.file;\n            onload(hdr);\n          } else if (oReq.responseText) {\n            text2buffer(oReq.responseText, function (arrayBuffer) {\n              const hdr = new that.header_class(arrayBuffer, that.options);\n              const fileUrl = parseURL(href);\n              hdr.file_name = fileUrl.file;\n              onload(hdr);\n            });\n          }\n          return;\n        }\n      }\n      onload(null);\n    };\n    oReq.onerror = function (_oEvent) {\n      onload(null);\n    };\n    oReq.send(null);\n    return oReq;\n  }\n}\n\nexport { BaseFileReader };\n", "/**\n * @license apache-2.0\n * @file bluefile.src\n * Copyright (c) 2012-2020, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigFile.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport BitArray from './bitarray';\nimport { BaseFileReader } from './basefilereader';\nimport { endianness, ab2str, getInt64 } from './util';\n\n/**\n * Bluefiles are a binary format directly supported by SigPlot.  A Bluefile consists of a 512-byte header\n * followed by binary data.\n *\n * For more information on BLUEFILES, please visit http://nextmidas.techma.com/nm/htdocs/usersguide/BlueFiles.html\n *\n * | Offset  |  Name      | Size |  Type      | Description                                |\n * |:--------|:-----------|:-----|:-----------|:-------------------------------------------|\n * |  0      |  version   | 4    |  char[4]   | Header version                             |\n * |  4      |  head_rep  | 4    |  char[4]   | Header representation                      |\n * |  8      |  data_rep  | 4    |  char[4]   | Data representation                        |\n * | 12      |  detached  | 4    |  int_4     | Detached header                            |\n * | 16      |  protected | 4    |  int_4     | Protected from overwrite                   |\n * | 20      |  pipe      | 4    |  int_4     | Pipe mode (N/A)                            |\n * | 24      |  ext_start | 4    |  int_4     | Extended header start, in 512-byte blocks  |\n * | 28      |  ext_size  | 4    |  int_4     | Extended header size in bytes              |\n * | 32      |  data_start| 8    |  real_8    | Data start in bytes                        |\n * | 40      |  data_size | 8    |  real_8    | Data size in bytes                         |\n * | 48      |  type      | 4    |  int_4     | File type code                             |\n * | 52      |  format    | 2    |  char[2]   | Data format code                           |\n * | 54      |  flagmask  | 2    |  int_2     | 16-bit flagmask (1=flagbit)                |\n * | 56      |  timecode  | 8    |  real_8    | Time code field                            |\n * | 64      |  inlet     | 2    |  int_2     | Inlet owner                                |\n * | 66      |  outlets   | 2    |  int_2     | Number of outlets                          |\n * | 68      |  outmask   | 4    |  int_4     | Outlet async mask                          |\n * | 72      |  pipeloc   | 4    |  int_4     | Pipe location                              |\n * | 76      |  pipesize  | 4    |  int_4     | Pipe size in bytes                         |\n * | 80      |  in_byte   | 8    |  real_8    | Next input byte                            |\n * | 88      |  out_byte  | 8    |  real_8    | Next out byte (cumulative)                 |\n * | 96      |  outbytes  | 64   |  real_8[8] | Next out byte (each outlet)                |\n * | 160     |  keylength | 4    |  int_4     | Length of keyword string                   |\n * | 164     |  keywords  | 92   |  char[92]  | User defined keyword string                |\n * | 256     |  Adjunct   | 256  |  char[256] | Type-specific adjunct union (See below for 1000 and 2000 type bluefiles)|\n *\n *\n * Type-1000 Adjunct\n *\n * | Offset | Name | Size | Type | Description                      |\n * :--------|:-----|:-----|:-----|:---------------------------------|\n * |  0     |xstart| 8    |real_8| Abscissa value for first sample  |\n * |  8     |xdelta| 8    |real_8| Abscissa interval between samples|\n * | 16     |xunits| 4    | int_4| Units for abscissa values        |\n *\n * Type-2000 Adjunct\n *\n * | Offset | Name  | Size | Type | Description                          |\n * |:-------|:------|:-----|:-----|:-------------------------------------|\n * |  0     |xstart |  8   |real_8| Frame (column) starting value        |\n * |  8     |xdelta |  8   |real_8| Increment between samples in frame   |\n * | 16     |xunits |  4   |int_4 | Frame (column) units                 |\n * | 20     |subsize|  4   |int_4 | Number of data points per frame (row)|\n * | 24     |ystart |  8   |real_8| Abscissa (row) start                 |\n * | 32     |ydelta |  8   |real_8| Increment between frames             |\n * | 36     |yunits |  4   |int_4 | Abscissa (row) unit code             |\n */\nclass BlueHeader {\n  /**\n   * Static member that indicates the endianness of the system,\n   * BlueHeader.ARRAY_BUFFER_ENDIANNESS.\n   * @memberOf BlueHeader\n   * @type {string}\n   */\n  static ARRAY_BUFFER_ENDIANNESS = endianness();\n\n  /**\n   * Mapping from character to\n   * @memberOf BlueHeader\n   */\n  static _SPA = {\n    S: 1,\n    C: 2,\n    V: 3,\n    Q: 4,\n    M: 9,\n    X: 10,\n    T: 16,\n    U: 1,\n    '1': 1,\n    '2': 2,\n    '3': 3,\n    '4': 4,\n    '5': 5,\n    '6': 6,\n    '7': 7,\n    '8': 8,\n    '9': 9,\n  };\n\n  /**\n   * @memberOf bluefile\n   */\n  static _BPS = {\n    P: 0.125,\n    A: 1,\n    O: 1,\n    B: 1,\n    I: 2,\n    L: 4,\n    X: 8,\n    F: 4,\n    D: 8,\n  };\n\n  /**\n   * @memberOf bluefile\n   */\n  static _XM_TO_TYPEDARRAY = {\n    P: BitArray,\n    A: null,\n    O: Uint8Array,\n    B: Int8Array,\n    I: Int16Array,\n    L: Int32Array,\n    X: null,\n    F: Float32Array,\n    D: Float64Array,\n  };\n\n  /**\n   * @memberOf bluefile\n   */\n  static _XM_TO_DATAVIEW = {\n    P: null,\n    A: null,\n    O: 'getUint8',\n    B: 'getInt8',\n    I: 'getInt16',\n    L: 'getInt32',\n    X: getInt64,\n    F: 'getFloat32',\n    D: 'getFloat64',\n  };\n\n  /**\n   * Constructor for a BlueHeader that extracts parameters from the 512-byte\n   * Bluefile binary header.  If the data segment of the bluefile is also\n   * included in the provided buffer it will be accessible as well\n   * via the dview property.\n   *\n   * @memberof bluefile\n   * @param {(ArrayBuffer|array)} buf - An existing ArrayBuffer of Bluefile data.\n   * @param {object?} options - options that affect how the bluefile is read\n   * @param {string} [options.ext_header_type=\"dict\"] - if the BlueFile contains\n   *       extended header keywords, extract them either as a dictionary\n   *       (\"dict\", \"json\", {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of\n   *       key value pairs.  The extended header keywords\n   *       will be accessible on the hdr.ext_header property\n   *       after the file has been read.\n   *\n   * See http://nextmidas.techma.com/nm/nxm/sys/docs/MidasBlueFileFormat.pdf for\n   * more details on header properties.\n   *\n   * @property {ArrayBuffer} buf\n   * @property {object} options\n   * @property {String} version - the header version extracted from the file, always 'BLUE'\n   * @property {String} headrep - endianness of header 'IEEE' or 'EEEI'\n   * @property {String} datarep - endianness of data 'IEEE' or 'EEEI'\n   * @property {Number} ext_start - byte offset for extended header binary data\n   * @property {Number} ext_size - byte size for extended header data\n   * @property {Number} type - the BLUEFILE type (1000 = 1-D data, 2000 = 2-D data)\n   * @property {Number} class - the BLUEFILE class (i.e. type/1000)\n   * @property {String} format - the BLUEFILE format, the format is a two character diagraph, such as SF.\n   * @property {Number} timecode - absolute time reference for the file (in seconds since Jan 1st 1950)\n   * @property {Number} xstart - relative offset for the first sample on the x-axis\n   * @property {Number} xdelta - delta between points on the x-axis\n   * @property {Number} xunits - the unitcode for the x-axis (see m.UNITS)\n   * @property {Number} ystart - relative offset for the first sample on the y-axis\n   * @property {Number} ydelta - delta between points on the y-axis\n   * @property {Number} yunits - the unitcode for the y-axis (see m.UNITS)\n   * @property {Number} subsize - the number of columns for a 2-D data file\n   * @property {Number} data_start - byte offset for data\n   * @property {Number} data_size - byte size for data\n   * @property {Object} ext_header - extracted extended header keywords\n   * @property {Number} spa - scalars per atom\n   * @property {Number} bps - bytes per scalar\n   * @property {Number} bpa - bytes per atom\n   * @property {Number} ape - atoms per element\n   * @property {Number} bpe - bytes per element\n   * @property {Number} size - number of elements in dview\n   * @property {DataView} dview - a Data\n   * @see {@link http://nextmidas.techma.com/nm/nxm/sys/docs/MidasBlueFileFormat.pdf}\n   */\n  constructor(buf, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    this.options = Object.assign({ ext_header_type: 'dict' }, options);\n    this.buf = buf;\n    if (this.buf != null) {\n      // Parse the header and keywords\n      this.setHeader();\n      const ds = this.data_start;\n      const de = this.data_start + this.data_size;\n\n      // Parse the data\n      this.setData(this.buf, ds, de, this.littleEndianData);\n    }\n  }\n\n  /**\n   * Internal method to parse the 512 byte header\n   * and unpack the extended header keywords\n   *\n   * @memberOf BlueHeader\n   * @private\n   */\n  setHeader() {\n    const dvhdr = new DataView(this.buf);\n    this.version = ab2str(this.buf.slice(0, 4));\n    this.headrep = ab2str(this.buf.slice(4, 8));\n    this.datarep = ab2str(this.buf.slice(8, 12));\n    const littleEndianHdr = this.headrep === 'EEEI';\n    this.littleEndianData = this.datarep === 'EEEI';\n    this.ext_start = dvhdr.getInt32(24, littleEndianHdr);\n    this.ext_size = dvhdr.getInt32(28, littleEndianHdr);\n    this.type = dvhdr.getUint32(48, littleEndianHdr);\n    this['class'] = this.type / 1000;\n    this.format = ab2str(this.buf.slice(52, 54));\n    this.timecode = dvhdr.getFloat64(56, littleEndianHdr);\n    // the adjunct starts at offset 0x100\n    if (this['class'] === 1) {\n      this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n      this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n      this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n      this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n      this.subsize = 1;\n    } else if (this['class'] === 2) {\n      this.xstart = dvhdr.getFloat64(0x100, littleEndianHdr);\n      this.xdelta = dvhdr.getFloat64(0x100 + 8, littleEndianHdr);\n      this.xunits = dvhdr.getInt32(0x100 + 16, littleEndianHdr);\n      this.subsize = dvhdr.getInt32(0x100 + 20, littleEndianHdr);\n      this.ystart = dvhdr.getFloat64(0x100 + 24, littleEndianHdr);\n      this.ydelta = dvhdr.getFloat64(0x100 + 32, littleEndianHdr);\n      this.yunits = dvhdr.getInt32(0x100 + 40, littleEndianHdr);\n    }\n    this.data_start = dvhdr.getFloat64(32, littleEndianHdr);\n    this.data_size = dvhdr.getFloat64(40, littleEndianHdr);\n    if (this.ext_size) {\n      this.ext_header = this.unpack_keywords(\n        this.buf,\n        this.ext_size,\n        this.ext_start * 512,\n        littleEndianHdr\n      );\n    }\n  }\n\n  /**\n   * Internal method that sets the dview up based off the\n   * provided buffer and fields extracted from the header.\n   *\n   * @private\n   * @memberOf BlueHeader\n   * @param {(ArrayBuffer|array)} buf\n   * @param {number} offset\n   * @param {number} data_end\n   * @param {boolean?} littleEndian\n   */\n  setData(buf, offset, data_end, littleEndian) {\n    if (littleEndian === undefined) {\n      littleEndian = BlueHeader.ARRAY_BUFFER_ENDIANNESS === 'LE';\n    }\n\n    this.spa = BlueHeader._SPA[this.format[0]];\n    this.bps = BlueHeader._BPS[this.format[1]];\n    this.bpa = this.spa * this.bps;\n\n    // atoms per element (ape) differs between\n    // type 1000 and type 2000\n    if (this['class'] === 1) {\n      this.ape = 1;\n    } else if (this['class'] === 2) {\n      this.ape = this.subsize;\n    }\n\n    this.bpe = this.ape * this.bpa;\n\n    // TODO handle mismatch between host and data endianness using arrayBufferEndianness\n    const arrayBufferLittleEndian = BlueHeader.ARRAY_BUFFER_ENDIANNESS === 'LE';\n    const arrayBufferBigEndian = BlueHeader.ARRAY_BUFFER_ENDIANNESS === 'BE';\n    if (\n      (arrayBufferLittleEndian && !littleEndian) ||\n      (arrayBufferBigEndian && this.littleEndianData)\n    ) {\n      throw `Not supported ${BlueHeader.ARRAY_BUFFER_ENDIANNESS} ${littleEndian}`;\n    }\n    if (buf) {\n      if (offset && data_end) {\n        const length = (data_end - offset) / this.bps;\n        this.dview = this.createArray(buf, offset, length);\n      } else {\n        this.dview = this.createArray(buf);\n      }\n      this.size = this.dview.length / (this.spa * this.ape);\n    } else {\n      this.dview = this.createArray(null, null, this.size);\n    }\n  }\n\n  /**\n   * Internal method that unpacks the extended header keywords into\n   * either a object (i.e. dictionary) or a list of key-value pairs\n   * depending on this.options.ext_header_type.\n   *\n   * @author Sean Sullivan https://github.com/desean1625\n   * @private\n   * @memberOf BlueHeader\n   * @param {ArrayBuffer} buf - Buffer where the keywords are located\n   * @param {number} lbuf - Size of the extended header\n   * @param {number} offset - Offset from the extended header\n   * @param {boolean} littleEndian - Whether or not to parse as little endian\n   * @return {object|Array} Parsed keywords as an object from the header\n   */\n  unpack_keywords(buf, lbuf, offset, littleEndian) {\n    let lkey, lextra, ltag, format, tag, data, ldata, itag, idata;\n    const keywords = [];\n    const dic_index = {};\n    const dict_keywords = {};\n    let ii = 0;\n    buf = buf.slice(offset, buf.byteLength);\n    const dvhdr = new DataView(buf);\n    buf = ab2str(buf);\n    while (ii < lbuf) {\n      idata = ii + 8;\n      lkey = dvhdr.getUint32(ii, littleEndian);\n      lextra = dvhdr.getInt16(ii + 4, littleEndian);\n      ltag = dvhdr.getInt8(ii + 6);\n      format = buf.slice(ii + 7, ii + 8);\n      ldata = lkey - lextra;\n      itag = idata + ldata;\n      tag = buf.slice(itag, itag + ltag);\n      if (format === 'A') {\n        data = buf.slice(idata, idata + ldata);\n      } else if (BlueHeader._XM_TO_DATAVIEW[format]) {\n        let parseFunc = BlueHeader._XM_TO_DATAVIEW[format];\n        if (typeof parseFunc === 'string') {\n          data = dvhdr[parseFunc](idata, littleEndian);\n        } else {\n          data = parseFunc(dvhdr, idata, littleEndian);\n        }\n      } else {\n        // Should never get here.\n        throw `Unsupported keyword format ${format} for tag ${tag}`;\n      }\n\n      if (typeof dic_index[tag] === 'undefined') {\n        dic_index[tag] = 1;\n      } else {\n        dic_index[tag]++;\n\n        // Force to string just in case the tag is interpreted as a number\n        tag = '' + tag + dic_index[tag];\n      }\n      dict_keywords[tag] = data;\n      keywords.push({\n        tag: tag,\n        value: data,\n      });\n      ii += lkey;\n    }\n    const dictTypes = ['dict', 'json', {}, 'XMTable', 'JSON', 'DICT'];\n    const ext_header_type = this.options.ext_header_type;\n\n    // Added because {} === {} is `false` in JS\n    if (\n      typeof ext_header_type === 'object' &&\n      ext_header_type !== null &&\n      Object.keys(ext_header_type).length === 0 &&\n      ext_header_type.constructor === Object\n    ) {\n      return dict_keywords;\n    }\n    for (let k in dictTypes) {\n      if (dictTypes[k] === ext_header_type) {\n        return dict_keywords;\n      }\n    }\n    return keywords;\n  }\n\n  /**\n   * Internal method to create typed array for the data based on the\n   * format extracted from the header.\n   *\n   * @private\n   * @memberOf BlueHeader\n   * @param buf\n   * @param offset\n   * @param length\n   * @returns {array}\n   */\n  createArray(buf, offset, length) {\n    const TypedArray = BlueHeader._XM_TO_TYPEDARRAY[this.format[1]];\n    if (TypedArray === undefined) {\n      throw `unknown format ${this.format[1]}`;\n    }\n    // backwards compatibility with some implementations of typed array\n    // requires this\n    if (offset === undefined) {\n      offset = 0;\n    }\n    if (length === undefined) {\n      length = buf.length || buf.byteLength / BlueHeader._BPS[this.format[1]];\n    }\n    let result;\n    if (buf) {\n      if (Array.isArray(buf) && Array.isArray(buf[0])) {\n        // Flatten 2-D array into 1-D\n        buf = [].concat.apply([], buf);\n        length = buf.length * buf[0].length;\n        result = new TypedArray(buf, offset, length);\n      } else if (Array.isArray(buf) && ArrayBuffer.isView(buf[0])) {\n        // Flatten 2-D array of TypedArrays\n        length = buf.length * buf[0].length;\n        result = new TypedArray(length);\n        for (let ii = 0; ii < buf.length; ++ii) {\n          result.set(buf[ii], ii * buf[0].length);\n        }\n      } else {\n        // basic 1-D array\n        result = new TypedArray(buf, offset, length);\n      }\n    } else {\n      // no initial data\n      result = new TypedArray(length);\n    }\n    return result;\n  }\n}\n\n/**\n * @extends BaseFileReader\n */\nclass BlueFileReader extends BaseFileReader {\n  /**\n   * Bluefile Reader constructor.\n   *\n   * @memberof bluefile\n   * @param {object?} options - options that affect how the bluefile is read\n   * @param {string} options.ext_header_type=\"dict\"\n   *       if the BlueFile contains extended header keywords,\n   *       extract them either as a dictionary (\"dict\", \"json\",\n   *       {}, \"XMTable\", \"JSON\", \"DICT\") or as a list of\n   *       key value pairs.  The extended header keywords\n   *       will be accessible on the hdr.ext_header property\n   *       after the file has been read.\n   */\n  constructor(options) {\n    super(BlueHeader, options);\n  }\n}\n\nexport { BlueHeader, BlueFileReader };\n", "/**\n * @license\n * File: matfile.src\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { BaseFileReader } from './basefilereader';\nimport { endianness, ab2str, getInt64 } from './util';\n\n/**\n * MAT-files are a binary format directly supported by SigPlot.  A MAT-file consists of a 132-byte header\n * followed by binary data.\n * For more information on MAT-files, please visit https://www.mathworks.com/help/pdf_doc/matlab/matfile_format.pdf\n *\n * Offset   Name        Size    Type        Description\n * -----------------------------------------------------------------------------\n * 0        header     115   char[115]     Header\n * 116      subsys       7   char[7]\n * 124      version      2   int_2\n * 126      endianness   2   char[2]\n * 128      data_offset  4   int_4\n * 132      byte_offset  4   int_4\n */\nclass MatHeader {\n  /**\n   * @memberOf matfile\n   * @private\n   */\n  static ARRAY_BUFFER_ENDIANNESS = endianness(); // eslint-disable-line no-unused-vars\n\n  /**\n   * @memberOf matfile\n   * @private\n   */\n  static versionNames = { 256: 'MAT-file' };\n\n  /**\n   * @memberOf matfile\n   * @private\n   */\n  static _MAT_TO_TYPEDARRAY = {\n    miINT8: Int8Array,\n    miUINT8: Uint8Array,\n    miInt16: Int16Array,\n    miUINT16: Uint16Array,\n    miINT32: Int32Array,\n    miUINT32: Uint32Array,\n    miDOUBLE: Float64Array,\n  };\n\n  static _MAT_TO_DATAVIEW = {\n    miINT8: 'getInt8',\n    miUINT8: 'getUint8',\n    miINT16: 'getInt16',\n    miUINT16: 'getUint16',\n    miINT32: 'getInt32',\n    miUINT32: 'getUint32',\n    miSINGLE: 'getFloat32',\n    miDOUBLE: 'getFloat64',\n    miINT64: getInt64,\n    /* TODO: \"miUINT64\", \"miMATRIX\", \"miCOMPRESSED\"\n             \"miUTF8\", \"miUTF16\", \"miUTF32\" */\n  };\n\n  /**\n   * @memberOf matfile\n   * @private\n   */\n  static dataTypeNames = {\n    1: {\n      name: 'miINT8',\n      size: 1,\n    },\n    2: {\n      name: 'miUINT8',\n      size: 1,\n    },\n    3: {\n      name: 'miINT16',\n      size: 2,\n    },\n    4: {\n      name: 'miUINT16',\n      size: 2,\n    },\n    5: {\n      name: 'miINT32',\n      size: 4,\n    },\n    6: {\n      name: 'miUINT32',\n      size: 4,\n    },\n    7: {\n      name: 'miSINGLE',\n      size: 4,\n    },\n    // 8 is reserved\n    9: {\n      name: 'miDOUBLE',\n      size: 8,\n    },\n    // 10 and 11 are reserved\n    12: {\n      name: 'miINT64',\n      size: 8,\n    },\n    13: {\n      name: 'miUINT64',\n      size: 8,\n    },\n    14: {\n      name: 'miMATRIX',\n      size: null,\n    },\n    15: {\n      name: 'miCOMPRESSED',\n      size: null,\n    },\n    16: {\n      name: 'miUTF8',\n      size: null,\n    },\n    17: {\n      name: 'miUTF16',\n      size: null,\n    },\n    18: {\n      name: 'miUTF32',\n      size: null,\n    },\n  };\n\n  /**\n   * @memberOf matfile\n   * @private\n   */\n  static arrayClassNames = {\n    1: 'mxCELL_CLASS',\n    2: 'mxSTRUCT_CLASS',\n    3: 'mxOBJECT_CLASS',\n    4: 'mxCHAR_CLASS',\n    5: 'mxSPARSE_CLASS',\n    6: 'mxDOUBLE_CLASS',\n    7: 'mxSINGLE_CLASS',\n    8: 'mxINT8_CLASS',\n    9: 'mxUINT8_CLASS',\n    10: 'mxINT16_CLASS',\n    11: 'mxUINT16_CLASS',\n    12: 'mxINT32_CLASS',\n    13: 'mxUINT32_CLASS',\n    14: 'mxINT64_CLASS',\n    15: 'mxUINT64_CLASS',\n  };\n\n  /**\n   * Descriptive text field\n   *\n   * @memberOf matfile\n   * @private\n   */\n  static headerTextBegin = 1;\n  static headerTextEnd = 116;\n\n  /**\n   * Subsystem data offset field\n   *\n   * @memberOf matfile\n   * @private\n   */\n  static subsysOffsetBegin = 117;\n  static subsysOffsetEnd = 124;\n\n  /**\n   * Version field\n   */\n  static versionOffsetBegin = 125;\n  static versionOffsetEnd = 126;\n\n  // Two character endian indicator. If the value reads \"MI\" then native computer\n  // has written the file in Big Endian, so no byte translation must occur.\n  // If value reads \"IM\" then native computer has written the file in Little Endian\n  // so byte-wise translation must be used on all data elements larger than 1 byte.\n  static endianCharsBegin = 127;\n  static endianCharsEnd = 128;\n\n  /**\n   * Outermost data type and number of bytes. For data plottable in SigPlot this will\n   * most likely be a 1D array. The associated MATLAB type will most likely be \"miMATRIX\".\n   */\n\n  /**\n   * WARNING: type \"miCOMPRESSED\" is the default for MATLAB files above version 6. These\n   * compressed files are currently UNREADABLE by this program as the file must be\n   * decompressed before reading.\n   */\n  static firstDataTypeOffsetBegin = 129;\n  static firstDataTypeOffsetEnd = 132;\n\n  static numBytesOffsetBegin = 133;\n  static numBytesOffsetEnd = 136;\n\n  /**\n   * Create matfile header and attach data buffer\n   * @memberOf MatHeader\n   * @param {array} buf - Data bffer\n   */\n  constructor(buf) {\n    this.file = null;\n    this.file_name = null;\n    this.buf = buf;\n    if (this.buf != null) {\n      const dvhdr = new DataView(this.buf);\n      this.headerStr = ab2str(\n        this.buf.slice(MatHeader.headerTextBegin - 1, MatHeader.headerTextEnd)\n      );\n\n      // get endianness\n      this.datarep = ab2str(\n        this.buf.slice(MatHeader.endianCharsBegin - 1, MatHeader.endianCharsEnd)\n      );\n      const littleEndianHdr = this.datarep === 'IM';\n      const littleEndianData = this.datarep === 'IM';\n\n      this.headerList = this.headerStr.split(',').map(function (str) {\n        return str.trim();\n      });\n      this.matfile = this.headerList[0];\n      this.platform = this.headerList[1];\n      this.createdOn = this.headerList[2];\n      this.subsystemOffset = ab2str(\n        this.buf.slice(\n          MatHeader.subsysOffsetBegin - 1,\n          MatHeader.subsysOffsetEnd\n        )\n      );\n      this.version = dvhdr.getUint16(\n        MatHeader.versionOffsetBegin - 1,\n        littleEndianHdr\n      );\n      this.versionName = MatHeader.versionNames[this.version];\n\n      this.dataType = dvhdr.getUint32(\n        MatHeader.firstDataTypeOffsetBegin - 1,\n        littleEndianHdr\n      );\n      this.dataTypeName = MatHeader.dataTypeNames[this.dataType].name;\n      this.arraySize = dvhdr.getUint32(\n        MatHeader.numBytesOffsetBegin - 1,\n        littleEndianHdr\n      );\n\n      const beginArray = MatHeader.numBytesOffsetEnd + 1; // eslint-disable-line no-unused-vars\n\n      // Start reading the file linearly from beginning and inc index as you go...\n      let currIndex = MatHeader.numBytesOffsetEnd + 1;\n      const typeNum = dvhdr.getUint32(currIndex - 1, littleEndianHdr);\n      const typeName = MatHeader.dataTypeNames[typeNum].name;\n      const typeSize = MatHeader.dataTypeNames[typeNum].size;\n      currIndex += 4;\n\n      // bytes per ``typeName``\n      const _flagLength = this.getDataWithType(\n        dvhdr,\n        typeName,\n        currIndex - 1,\n        littleEndianData\n      );\n      currIndex += typeSize;\n\n      // Array flags\n      // If bit is set:\n      // - complex: the data element includes an imaginary part\n      // - global: \"MATLAB loads the data element as a global variable in the base workspace\"\n      // - logical: indicates the array is used for logical indexing.\n      const arrayFlag = this.getDataWithType(\n        dvhdr,\n        typeName,\n        currIndex - 1,\n        littleEndianData\n      );\n      currIndex += typeSize;\n\n      // TODO: use flags for future implementation\n      const _complexFlag = arrayFlag & 0x80;\n      const _globalFlag = arrayFlag & 0x40;\n      const _logicalFlag = arrayFlag & 0x20;\n\n      // Find array class\n      const arrayClassNum = arrayFlag & 0xf;\n      const _arrayClassName = MatHeader.arrayClassNames[arrayClassNum];\n\n      // TODO: sparse array data format implementation: which uses next 4 bytes\n      //       Skip to next type field (array dimensions)\n      currIndex += typeSize;\n\n      // Dimensions type:\n      const dimTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n      currIndex += 4;\n\n      const dimTypeName = MatHeader.dataTypeNames[dimTypeNum].name;\n      const dimTypeSize = MatHeader.dataTypeNames[dimTypeNum].size;\n\n      // Dimensions size:\n      const _arrayDimTotalSize = dvhdr.getUint32(\n        currIndex - 1,\n        littleEndianData\n      );\n      currIndex += 4;\n\n      // Get number of rows\n      const rows = this.getDataWithType(\n        dvhdr,\n        dimTypeName,\n        currIndex - 1,\n        littleEndianData\n      );\n      currIndex += dimTypeSize;\n\n      // TODO: support for >= 2D array types\n      if (rows > 1) {\n        console.warn('Only 1D arrays are currently supported.');\n      }\n\n      // Get number of columns\n      const _cols = this.getDataWithType(\n        dvhdr,\n        dimTypeName,\n        currIndex - 1,\n        littleEndianData\n      );\n      currIndex += typeSize;\n\n      // array name type\n      let arrayNameTypeNum = dvhdr.getUint32(currIndex - 1, littleEndianData);\n      currIndex += 4;\n\n      let nameSize = 0;\n      let small = false;\n      if (arrayNameTypeNum > 15) {\n        arrayNameTypeNum &= 0x00ff;\n        small = true;\n        nameSize = dvhdr.getUint16(currIndex - 5, littleEndianData);\n      }\n\n      const arrayNameTypeName = MatHeader.dataTypeNames[arrayNameTypeNum].name;\n      const _arrayNameTypeSize = MatHeader.dataTypeNames[arrayNameTypeNum].size;\n\n      if (!small) {\n        nameSize = this.getDataWithType(\n          dvhdr,\n          arrayNameTypeName,\n          currIndex - 1,\n          littleEndianData\n        );\n        currIndex += 4;\n      }\n\n      // Pad to end of 64 bit word if necessary\n      // If small, we will pad from the middle to the end of a 64 bit word;\n      // Otherwise, pat from start of a new word\n      const rndUp = small ? (4 - (nameSize % 4)) % 4 : (8 - (nameSize % 8)) % 8;\n\n      const jumpTo = nameSize + rndUp;\n      currIndex += jumpTo;\n\n      // set the data field in the header\n      this.setData(this.buf, dvhdr, currIndex, littleEndianData);\n    }\n  }\n\n  /**\n   * Get a JS array from MATLAB array\n   *\n   * @memberOf MatHeader\n   * @private\n   * @param {ArrayBuffer | Array} buf -\n   * @param {number} offset -\n   * @param {number} length -\n   * @param {string} type -\n   */\n  createArray(buf, offset, length, type) {\n    // TODO: big endian implemenation\n    const TypedArray = MatHeader._MAT_TO_TYPEDARRAY[type];\n    if (TypedArray === undefined) {\n      throw `unknown type ${type}`;\n    }\n\n    if (offset === undefined) {\n      offset = 0;\n    }\n\n    if (length === undefined) {\n      length = buf.length; // TODO: Add `|| buf.byteLength / BPS;`\n    }\n\n    return new TypedArray(buf, offset, length);\n  }\n\n  /**\n   *\n   * @memberOf MatHeader\n   * @param dv\n   * @param typeName\n   * @param offset\n   * @param littleEndian\n   * @returns {*}\n   */\n  getDataWithType(dv, typeName, offset, littleEndian) {\n    const typeFunc = MatHeader._MAT_TO_DATAVIEW[typeName];\n    if (typeFunc === undefined) {\n      throw `Type name ${typeName} is not supported`;\n    }\n    return dv[typeFunc](offset, littleEndian);\n  }\n\n  /**\n   *\n   * @memberOf MatHeader\n   * @param   buf\n   * @param   dvhdr\n   * @param   currIndex\n   * @param   littleEndian\n   */\n  setData(buf, dvhdr, currIndex, littleEndian) {\n    let arrayValSize;\n\n    // Array value(s) type:\n    let typeNum = dvhdr.getUint32(currIndex - 1, littleEndian);\n\n    // Check for MATLAB \"small element type\"\n    let small = false;\n    if (typeNum > 15) {\n      typeNum &= 0x00ff;\n      small = true;\n      arrayValSize = dvhdr.getUint16(currIndex + 1, 2, littleEndian);\n    } else {\n      currIndex += 4;\n    }\n\n    const typeName = MatHeader.dataTypeNames[typeNum].name;\n    const typeSize = MatHeader.dataTypeNames[typeNum].size;\n\n    if (!small) {\n      arrayValSize = dvhdr.getUint32(currIndex - 1, littleEndian);\n      small = false;\n    }\n\n    currIndex += 4;\n\n    // Get JS array from MATLAB array\n    this.dview = this.createArray(\n      buf,\n      currIndex - 1,\n      arrayValSize / typeSize,\n      typeName\n    );\n  }\n}\n\nclass MatFileReader extends BaseFileReader {\n  constructor(options) {\n    super(options, MatHeader);\n  }\n}\n\nexport { MatHeader, MatFileReader };\n", "/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", "/**\n * @license\n * File: m.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/* global module */\n/* global require */\n\n(function() {\n    'use strict';\n\n    var bluefile = require(\"sigfile\").bluefile;\n    var loglevel = require(\"loglevel\");\n\n    function m() {}\n\n    m.log = loglevel;\n\n    /**\n     *\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var PointArray = null;\n\n    /**\n     * True if we detected that we are on an iOS device\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var iOS = (navigator.userAgent.match(/(iPad|iPhone|iPod)/i) ? true : false);\n    if ((iOS) || // iOS doesn't support Float64\n        (typeof Float64Array === 'undefined') || // If it's undefined it's obviously not supported\n        (Float64Array.emulated) || // If it's emulated, don't waste time on extra precision\n        (!Float64Array.BYTES_PER_ELEMENT)) { // If bytes per element isn't defined, it's a buggy implementation (i.e. PhantomJS)\n        m.PointArray = Float32Array;\n    } else {\n        m.PointArray = Float64Array;\n    }\n\n\n    /** UNITS Structure:\n     *\t\t0: [\"None\", \"U\"],\n     *\t\t1: [\"Time\", \"sec\"],\n     *\t\t2: [\"Delay\", \"sec\"],\n     *\t\t3: [\"Frequency\", \"Hz\"],\n     *\t\t4: [\"Time code format\", \"\"],\n     *\t\t5: [\"Distance\", \"m\"],\n     *\t\t6: [\"Speed\", \"m/s\"],\n     *\t\t7: [\"Acceleration\", \"m/sec^2\"],\n     *\t\t8: [\"Jerk\", \"m/sec^3\"],\n     *\t\t9: [\"Doppler\", \"Hz\"],\n     *\t\t10: [\"Doppler rate\", \"Hz/sec\"],\n     *\t\t11: [\"Energy\", \"J\"],\n     *\t\t12: [\"Power\", \"W\"],\n     *\t\t13: [\"Mass\", \"g\"],\n     *\t\t14: [\"Volume\", \"l\"],\n     *\t\t15: [\"Angular power density\", \"W/ster\"],\n     *\t\t16: [\"Integrated power density\", \"W/rad\"],\n     *\t\t17: [\"Spatial power density\", \"W/m^2\"],\n     *\t\t18: [\"Integrated power density\", \"W/m\"],\n     *\t\t19: [\"Spectral power density\", \"W/MHz\"],\n     *\t\t20: [\"Amplitude\", \"U\"],\n     *\t\t21: [\"Real\", \"U\"],\n     *\t\t22: [\"Imaginary\", \"U\"],\n     *\t\t23: [\"Phase\", \"rad\"],\n     *\t\t24: [\"Phase\", \"deg\"],\n     *\t\t25: [\"Phase\", \"cycles\"],\n     *\t\t26: [\"10*Log\", \"U\"],\n     *\t\t27: [\"20*Log\", \"U\"],\n     *\t\t28: [\"Magnitude\", \"U\"],\n     *\t\t29: [\"Unknown\", \"U\"],\n     *\t\t30: [\"Unknown\", \"U\"],\n     *\t\t31: [\"General dimensionless\", \"\"],\n     *\t\t32: [\"Counts\", \"\"],\n     *\t\t33: [\"Angle\", \"rad\"],\n     *\t\t34: [\"Angle\", \"deg\"],\n     *\t\t35: [\"Relative power\", \"dB\"],\n     *\t\t36: [\"Relative power\", \"dBm\"],\n     *\t\t37: [\"Relative power\", \"dBW\"],\n     *\t\t38: [\"Solid angle\", \"ster\"],\n     *\t\t40: [\"Distance\", \"ft\"],\n     *\t\t41: [\"Distance\", \"nmi\"],\n     *\t\t42: [\"Speed\", \"ft/sec\"],\n     *\t\t43: [\"Speed\", \"nmi/sec\"],\n     *\t\t44: [\"Speed\", \"knots=nmi/hr\"],\n     *\t\t45: [\"Acceleration\", \"ft/sec^2\"],\n     *\t\t46: [\"Acceleration\", \"nmi/sec^2\"],\n     *\t\t47: [\"Acceleration\", \"knots/sec\"],\n     *\t\t48: [\"Acceleration\", \"G\"],\n     *\t\t49: [\"Jerk\", \"G/sec\"],\n     *\t\t50: [\"Rotation\", \"rps\"],\n     *\t\t51: [\"Rotation\", \"rpm\"],\n     *\t\t52: [\"Angular velocity\", \"rad/sec\"],\n     *\t\t53: [\"Angular velocity\", \"deg/sec\"],\n     *\t\t54: [\"Angular acceleration\", \"rad/sec^2\"],\n     *\t\t55: [\"Angular acceleration\", \"deg/sec^2\"],\n     *\t\t60: [\"Latitude\", \"deg\"],\n     *\t\t61: [\"Longitude\", \"deg\"],\n     *\t\t62: [\"Altitude\", \"ft\"],\n     *\t\t63: [\"Altitude\", \"m\"]\n     * @global\n     */\n    var UNITS = {\n        0: [\"None\", \"U\", true, true],\n        1: [\"Time\", \"sec\", true, true],\n        2: [\"Delay\", \"sec\", true, false],\n        3: [\"Frequency\", \"Hz\", true, true],\n        4: [\"Time code format\", \"\", true, false],\n        5: [\"Distance\", \"m\", true, true],\n        6: [\"Speed\", \"m/s\", true, true],\n        7: [\"Acceleration\", \"m/sec^2\", true, true],\n        8: [\"Jerk\", \"m/sec^3\", true, true],\n        9: [\"Doppler\", \"Hz\", true, false],\n        10: [\"Doppler rate\", \"Hz/sec\", true, true],\n        11: [\"Energy\", \"J\", true, true],\n        12: [\"Power\", \"W\", true, true],\n        13: [\"Mass\", \"g\", true, true],\n        14: [\"Volume\", \"l\", true, true],\n        15: [\"Angular power density\", \"W/ster\", true, true],\n        16: [\"Integrated power density\", \"W/rad\", true, true],\n        17: [\"Spatial power density\", \"W/m^2\", true, true],\n        18: [\"Integrated power density\", \"W/m\", false, true],\n        19: [\"Spectral power density\", \"W/MHz\", true, true],\n        20: [\"Amplitude\", \"U\", true, false],\n        21: [\"Real\", \"U\", true, false],\n        22: [\"Imaginary\", \"U\", true, false],\n        23: [\"Phase\", \"rad\", true, true],\n        24: [\"Phase\", \"deg\", false, true],\n        25: [\"Phase\", \"cycles\", false, true],\n        26: [\"10*Log\", \"U\", true, false],\n        27: [\"20*Log\", \"U\", true, false],\n        28: [\"Magnitude\", \"U\", true, false],\n        29: [\"Unknown\", \"U\", true, false],\n        30: [\"Unknown\", \"U\", false, false],\n        31: [\"General dimensionless\", \"\", true, true],\n        32: [\"Counts\", \"\", true, false],\n        33: [\"Angle\", \"rad\", true, false],\n        34: [\"Angle\", \"deg\", false, false],\n        35: [\"Relative power\", \"dB\", true, true],\n        36: [\"Relative power\", \"dBm\", false, true],\n        37: [\"Relative power\", \"dBW\", false, true],\n        38: [\"Solid angle\", \"ster\", true, true],\n        40: [\"Distance\", \"ft\", false, true],\n        41: [\"Distance\", \"nmi\", false, true],\n        42: [\"Speed\", \"ft/sec\", false, true],\n        43: [\"Speed\", \"nmi/sec\", false, true],\n        44: [\"Speed\", \"knots=nmi/hr\", false, true],\n        45: [\"Acceleration\", \"ft/sec^2\", false, true],\n        46: [\"Acceleration\", \"nmi/sec^2\", false, true],\n        47: [\"Acceleration\", \"knots/sec\", false, true],\n        48: [\"Acceleration\", \"G\", false, true],\n        49: [\"Jerk\", \"G/sec\", false, true],\n        50: [\"Rotation\", \"rps\", true, false],\n        51: [\"Rotation\", \"rpm\", false, false],\n        52: [\"Angular velocity\", \"rad/sec\", true, true],\n        53: [\"Angular velocity\", \"deg/sec\", false, true],\n        54: [\"Angular acceleration\", \"rad/sec^2\", true, true],\n        55: [\"Angular acceleration\", \"deg/sec^2\", false, true],\n        60: [\"Latitude\", \"deg\", true, false],\n        61: [\"Longitude\", \"deg\", true, false],\n        62: [\"Altitude\", \"ft\", true, false],\n        63: [\"Altitude\", \"m\", false, false]\n    };\n\n    m.UNITS = UNITS;\n\n    /** Common structure\n     * @private\n     */\n    m.Mc = {\n        // Colormaps are stored as 7 element tables which are then\n        //\tinterpolated to the number of colors actually used in a graphics routine\n        //\tcall to MX$COLORMAP.\n\n        // There are 4 colormap tables stored in the environment: A GREYSCALE,\n        // COLORRAMP, COLORWHEEL, COLORSPECTRUM, or SUNSET.  The specific values that\n        // are listed here are from xcolordef.prm (use the XCOLORMAP widget).\n        //\n        // The actual values are a result of tribal knowledge and years of experience\n        colormap: [{\n                name: \"Greyscale\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 60,\n                    red: 50,\n                    green: 50,\n                    blue: 50\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 0,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Ramp Colormap\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 0,\n                    blue: 15\n                }, {\n                    pos: 10,\n                    red: 0,\n                    green: 0,\n                    blue: 50\n                }, {\n                    pos: 31,\n                    red: 0,\n                    green: 65,\n                    blue: 75\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 85,\n                    blue: 0\n                }, {\n                    pos: 70,\n                    red: 75,\n                    green: 80,\n                    blue: 0\n                }, {\n                    pos: 83,\n                    red: 100,\n                    green: 60,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }]\n            }, {\n                name: \"Color Wheel\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 20,\n                    red: 0,\n                    green: 80,\n                    blue: 40\n                }, {\n                    pos: 30,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 10,\n                    green: 10,\n                    blue: 0\n                }, {\n                    pos: 65,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 88,\n                    red: 100,\n                    green: 40,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }]\n            }, {\n                name: \"Spectrum\",\n                colors: [{\n                    pos: 0,\n                    red: 0,\n                    green: 75,\n                    blue: 0\n                }, {\n                    pos: 22,\n                    red: 0,\n                    green: 90,\n                    blue: 90\n                }, {\n                    pos: 37,\n                    red: 0,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 49,\n                    red: 90,\n                    green: 0,\n                    blue: 85\n                }, {\n                    pos: 68,\n                    red: 90,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 80,\n                    red: 90,\n                    green: 90,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 95,\n                    green: 95,\n                    blue: 95\n                }]\n            }, {\n                name: \"calewhite\",\n                colors: [{\n                    pos: 0,\n                    red: 100,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 16.666,\n                    red: 0,\n                    green: 0,\n                    blue: 100\n                }, {\n                    pos: 33.333,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 50,\n                    red: 0,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 66.666,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 83.333,\n                    red: 100,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 0,\n                    blue: 100\n                }]\n            }, {\n                name: \"HotDesat\",\n                colors: [{\n                    pos: 0,\n                    red: 27.84,\n                    green: 27.84,\n                    blue: 85.88\n                }, {\n                    pos: 14.2857,\n                    red: 0,\n                    green: 0,\n                    blue: 35.69\n                }, {\n                    pos: 28.571,\n                    red: 0,\n                    green: 100,\n                    blue: 100\n                }, {\n                    pos: 42.857,\n                    red: 0,\n                    green: 49.8,\n                    blue: 0\n                }, {\n                    pos: 57.14286,\n                    red: 100,\n                    green: 100,\n                    blue: 0\n                }, {\n                    pos: 71.42857,\n                    red: 100,\n                    green: 37.65,\n                    blue: 0\n                }, {\n                    pos: 85.7143,\n                    red: 41.96,\n                    green: 0,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 87.84,\n                    green: 29.8,\n                    blue: 29.8\n                }]\n            }, {\n                name: \"Sunset\",\n                colors: [{\n                    pos: 0,\n                    red: 10,\n                    green: 0,\n                    blue: 23\n                }, {\n                    pos: 18,\n                    red: 34,\n                    green: 0,\n                    blue: 60\n                }, {\n                    pos: 36,\n                    red: 58,\n                    green: 20,\n                    blue: 47\n                }, {\n                    pos: 55,\n                    red: 74,\n                    green: 20,\n                    blue: 28\n                }, {\n                    pos: 72,\n                    red: 90,\n                    green: 43,\n                    blue: 0\n                }, {\n                    pos: 87,\n                    red: 100,\n                    green: 72,\n                    blue: 0\n                }, {\n                    pos: 100,\n                    red: 100,\n                    green: 100,\n                    blue: 76\n                }]\n            },\n            {\n                name: \"Hot\",\n                colors: [\"#000000\", \"#7f0000\", \"#b30000\", \"#d7301f\", \"#ef6548\", \"#fc8d59\", \"#fdbb84\", \"#fdd49e\", \"#fee8c8\", \"#fff7ec\", \"#ffffff\"]\n            }, {\n                name: \"Cold\",\n                colors: [\"#000000\", \"#023858\", \"#045a8d\", \"#0570b0\", \"#3690c0\", \"#74a9cf\", \"#a6bddb\", \"#d0d1e6\", \"#ece7f2\", \"#fff7fb\", \"#ffffff\"]\n            },\n            {\n                name: \"Purple\",\n                colors: [\"#230022\", \"#4d004b\", \"#810f7c\", \"#88419d\", \"#8c6bb1\", \"#8c96c6\", \"#9ebcda\", \"#bfd3e6\", \"#e0ecf4\", \"#f7fcfd\"]\n            }, {\n                name: \"BuGn\",\n                colors: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b']\n            }, {\n                name: \"YlOrBr\",\n                colors: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506']\n            }, {\n                name: \"YlGnBu\",\n                colors: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58']\n            }, {\n                name: \"YlOrRd\",\n                colors: [\"#000000\", \"#662506\", \"#993404\", \"#cc4c02\", \"#ec7014\", \"#fe9929\", \"#fec44f\", \"#fee391\", \"#fff7bc\", \"#ffffe5\", \"#ffffff\"]\n            }, {\n                name: \"GreyNRed\",\n                colors: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'].reverse()\n            }\n        ]\n    };\n\n    /** Pipe Size\n     * @private\n     */\n    m.PIPESIZE = 1024 * 1024;\n\n    /**\n     * Converts unit strings to number code\n     * @param\t{string}\tunitInput\tUser unit input\n     */\n    m.unit_lookup = function(unitInput) {\n        for (var i = 0; i < 64; i++) {\n            var u;\n            if (UNITS[i] === undefined) {\n                u = UNITS[0];\n            } else {\n                u = UNITS[i];\n            }\n            var first = u[0];\n            var second = u[1];\n            var comparer1 = u[0] + \" \" + u[1];\n            var comparer2 = u[0] + \"_\" + u[1];\n            if (unitInput === first) {\n                if (u[2]) {\n                    return i;\n                }\n            } else if (unitInput === second) {\n                if (u[3]) {\n                    return i;\n                }\n            } else if ((unitInput === comparer1) || (unitInput === comparer2)) {\n                return i;\n            }\n        }\n        return unitInput;\n    };\n\n    /**\n     * Creates new file with header initialized to type-1000 defaults\n     * and data appended. (tbd)\n     * @param\t{string}\tfilename\tName of File to Create\n     * @param  \t{array}\t\tdata\t\tInput data buffer\n     * @param  \t{array}\t  \toverrides\tList of fields/values to be overridden in the bluefile header\n     * @param   {function}\tcleanup\tFunction to be called when layer is deoverlayed\n     * @return \t{header} \thcb\t\tReturn <hcb> type-1000 bluefile header, filename=null\n     */\n    m.initialize = function(data, overrides, cleanup) {\n        var hcb = new bluefile.BlueHeader(null);\n\n        hcb.version = 'BLUE';\n        hcb.size = 0;\n        hcb.type = 1000;\n        hcb.format = 'SF';\n        hcb.timecode = 0.0;\n        hcb.xstart = 0.0;\n        hcb.xdelta = 1.0;\n        hcb.xunits = 0;\n        hcb.subsize = 1;\n        hcb.ystart = 0.0;\n        hcb.ydelta = 1.0;\n        hcb.yunits = 0;\n        hcb.enabled_streaming_pcut = false;\n\n        // if cleanup function provided, add it to the header\n        // otherwise, it'll be undefined\n        hcb.cleanup = cleanup;\n\n        if (!overrides) {\n            /* if no overrides provided...set it to empty*/\n            overrides = {};\n        }\n\n        for (var field in overrides) {\n            hcb[field] = overrides[field];\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        hcb[\"xunits\"] = m.unit_lookup(hcb[\"xunits\"]);\n        hcb[\"yunits\"] = m.unit_lookup(hcb[\"yunits\"]);\n\n\n        // Force type 2000 is subsize is specified\n        if (hcb[\"subsize\"] > 1) {\n            hcb.type = 2000;\n        } else if (Array.isArray(data) && (Array.isArray(data[0]) || ArrayBuffer.isView(data[0]))) {\n            //If this is a 2-D array automatically set subsize\n            hcb.type = 2000;\n            hcb.subsize = data[0].length;\n            hcb.size = data.length;\n        }\n        hcb[\"class\"] = hcb.type / 1000;\n        // If this is a type 2000 , subsize *must* be provided\n        if ((hcb[\"class\"] === 2) && (hcb[\"subsize\"] === undefined)) {\n            throw \"subsize must be provided with type 2000 files\";\n        }\n\n\n        if (!overrides.pipe) {\n            hcb.setData(data);\n        } else {\n            hcb.pipe = true;\n            hcb.in_byte = 0;\n            hcb.out_byte = 0;\n            // TODO round pipe size to nearest number of elements\n            var pipesize = overrides.pipesize || m.PIPESIZE;\n\n            hcb.buf = new ArrayBuffer(pipesize);\n            hcb.setData(hcb.buf);\n            hcb.data_free = hcb.dview.length;\n        }\n\n        return hcb;\n    };\n\n    /**\n     * Convert type-2000 header internals to force GRAB and FILAD routines to treat file as a 1000-type file.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     */\n    m.force1000 = function(hcb) {\n        if (hcb[\"class\"] === 2) {\n            if ((hcb.size) && (!hcb.pipe)) {\n                hcb.size = hcb.subsize * hcb.size;\n            } else {\n                // assume the size is 0\n                hcb.size = 0;\n            }\n            hcb.bpe = hcb.bpe / hcb.subsize;\n            hcb.ape = 1;\n        }\n    };\n\n    /**\n     * Get data from file at specified start location.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tbufview\t\tData buffer to receive data\n     * @param\t{number}\tstart\t\tStart location\n     * @param\t{number}\tnget\t\tNumber of requested data\n     * @return\t{number}\tngot\t\tNumber of received data\n     */\n    m.grab = function(hcb, bufview, start, nget) {\n        if (!hcb.dview) {\n            return 0;\n        }\n\n        // TODO reformat\n        if (hcb.format[0] === 'C') {\n            start = start * 2;\n        }\n\n        nget = hcb.ape * nget; // TODO - this is never used????\n\n        //var ngot = Math.min(bufview.length, (hcb.dview.length-start)); //mmm\n        var ngot = Math.min(bufview.length, (hcb.dview.length - start));\n        // iOS doesn't have .set on TypedArrays\n        if (bufview.set === undefined) {\n            for (var i = 0; i < ngot; i++) {\n                bufview[i] = hcb.dview[start + i];\n            }\n        } else {\n            bufview.set(hcb.dview.subarray(start, start + ngot));\n        }\n        if (hcb.format[0] === 'C') {\n            ngot = ngot / 2;\n        }\n        return ngot;\n    };\n\n    /**\n     * Append data buffer to file specified in the bluefile header control block.\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{array}\t\tdata\t\tData buffer\n     * @param   {boolean}       [sync=false]    dispatch onpipewrite syncronously\n     */\n    m.filad = function(hcb, data, sync) {\n        if (hcb.data_free < data.length) {\n            throw \"Pipe full\";\n        }\n        var sidx = hcb.in_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + data.length);\n        if (eidx > hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            var tail = data.length - head;\n            if (data.subarray) {\n                hcb.dview.set(data.subarray(0, head), sidx);\n                hcb.dview.set(data.subarray(head, data.length), 0);\n            } else {\n                hcb.dview.set(data.slice(0, head), sidx);\n                hcb.dview.set(data.slice(head, data.length), 0);\n            }\n            hcb.in_byte = (tail * hcb.dview.BYTES_PER_ELEMENT);\n        } else {\n            hcb.dview.set(data, sidx);\n            hcb.in_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        }\n        hcb.data_free -= data.length;\n        if (hcb.onwritelisteners) {\n            for (var i = 0; i < hcb.onwritelisteners.length; i++) {\n                if (!sync) {\n                    window.setTimeout(hcb.onwritelisteners[i], 0);\n                } else {\n                    hcb.onwritelisteners[i]();\n                }\n            }\n        }\n    };\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @return\t{number}\telements available\n     * @private\n     */\n    m.pavail = function(hcb) {\n        return hcb.dview.length - hcb.data_free;\n    };\n\n    /**\n     * Get data from file in dataflow fashion.\n     * @param\t{array}\t\thcb\tBluefile header control block\n     * @param \t{array}\t\tdview\tData buffer to receive data\n     * @param\t{number}\tnget\tInput variable name of parameter to receive data\n     * @param\t{number}\toffset\tOffset into file\n     * @return\t{number}\tngot\tNumber of data values gotten\n     */\n    // WARNING - nget is number of scalars...which differs from the normal API\n    m.grabx = function(hcb, dview, nget, offset) {\n        var navail = hcb.dview.length - hcb.data_free;\n        if (offset === undefined) {\n            offset = 0;\n        }\n        if (!nget) {\n            nget = Math.min(dview.length - offset, navail);\n        } else if (nget > dview.length - offset) {\n            throw \"m.grabx : nget larger then available buffer space\";\n        }\n        if (nget < 0) {\n            throw \"m.grabx : nget cannot be negative\";\n        }\n        if (nget > navail) {\n            return 0;\n        }\n\n        var sidx = hcb.out_byte / hcb.dview.BYTES_PER_ELEMENT;\n        var eidx = (sidx + nget);\n        if (eidx >= hcb.dview.length) {\n            var head = hcb.dview.length - sidx;\n            eidx = eidx - hcb.dview.length;\n            dview.set(hcb.dview.subarray(sidx, hcb.dview.length), offset);\n            dview.set(hcb.dview.subarray(0, eidx), offset + head);\n        } else {\n            dview.set(hcb.dview.subarray(sidx, eidx), offset);\n        }\n        hcb.out_byte = (eidx * hcb.dview.BYTES_PER_ELEMENT) % hcb.buf.byteLength;\n        hcb.data_free += nget;\n        var ngot = nget;\n        return ngot;\n    };\n\n\n    /**\n     * @param\t{header}\thcb\t\tBluefile header control block\n     * @param\t{number}\tonwrite\t\t-\n     * @private\n     */\n    m.addPipeWriteListener = function(hcb, onwrite) {\n        if (!hcb.onwritelisteners) {\n            hcb.onwritelisteners = [];\n        }\n        if (hcb.onwritelisteners.indexOf(onwrite) === -1) {\n            hcb.onwritelisteners.push(onwrite);\n        }\n    };\n\n    /**\n     * Returns ASCII description of units code\n     * @param \t{number}\tUNITS array index (see global UNITS)\n     * @return \t{string}\tASCII code pair\n     */\n    // ~= M$UNITS_NAME\n    m.units_name = function(units) {\n        var u = UNITS[units];\n        return u[0] + \" (\" + u[1] + \")\";\n    };\n\n    /**\n     * Extract filename from full path\n     * @param \t{string}\tpathfilename\tFull path, including filename\n     * @return\t{string}\tfilename\t    Trimmed filename\n     */\n    m.trim_name = function(pathfilename) {\n        var i = pathfilename.indexOf(']');\n        if (i === -1) {\n            i = pathfilename.indexOf('/');\n        }\n        if (i === -1) {\n            i = pathfilename.indexOf(':');\n        }\n        var j = pathfilename.substr(i + 1, pathfilename.length).indexOf('.');\n        if (j < 0) {\n            j = pathfilename.length - i;\n        }\n        var filename = pathfilename.substr(i + 1, i + j + 1);\n        return filename;\n    };\n\n    /**\n     * Takes an integer code for units and a multiplier and returns the string representation of the two.\n     * Example: l = m.label(1,1.0e3) ==> l =  Time (Ksec)\n     * @param \t{number}\tunits\tInteger code for Unit (see global UNITS)\n     * @param \t{number} \tmult\tUnits multiplier (i.e 1.0e3 ==> 'K')\n     * @return {string} representation of units and multiplier\n     */\n    // ~= M$LABEL\n    m.label = function(units, mult) {\n        var u = [\"Unknown\", \"U\"];\n\n        if (typeof units === \"string\") {\n            u = [units, null];\n        } else if (Array.isArray(units)) {\n            u = units;\n        } else {\n            u = UNITS[units];\n            if (u === undefined) {\n                u = [\"Unknown\", \"U\"];\n            }\n        }\n\n        var prefix = m.mult_prefix(mult);\n\n        if (u[1]) {\n            return u[0] + \" (\" + prefix + u[1] + \")\";\n        } else {\n            return u[0];\n        }\n    };\n\n    /**\n     * @method bound\n     * @param a\n     * @param b\n     * @param c\n     */\n    m.bound = function(a, b, c) {\n        return a < b ? b : (a > c ? c : a);\n    };\n\n    m.touch_distance = function(touchA, touchB) {\n        var xd = (touchA.pageX - touchB.pageX);\n        var yd = (touchA.pageY - touchB.pageY);\n        return Math.sqrt((xd * xd) + (yd * yd));\n    };\n\n    m.mult_prefix = function(mult) {\n        var prefix = \"?\";\n\n        /* jshint -W116 */\n        if (mult == 1) {\n            prefix = \"\";\n        } else if (mult == 10) {\n            prefix = 'da';\n        } else if (mult == 0.1) {\n            prefix = 'd';\n        } else if (mult == 100) {\n            prefix = 'h';\n        } else if (mult == 0.01) {\n            prefix = 'c';\n        } else if (mult == 1.0e3) {\n            prefix = 'K';\n        } else if (mult == 1.0e-3) {\n            prefix = 'm';\n        } else if (mult == 1.0e6) {\n            prefix = 'M';\n        } else if (mult == 1.0e-6) {\n            prefix = 'u';\n        } else if (mult == 1.0e9) {\n            prefix = 'G';\n        } else if (mult == 1.0e-9) {\n            prefix = 'n';\n        } else if (mult == 1.0e12) {\n            prefix = 'T';\n        } else if (mult == 1.0e-12) {\n            prefix = 'p';\n        }\n        /* jshint +W116 */\n\n        return prefix;\n    };\n\n    /**\n     * @private\n     */\n    var VECTOR = {\n        MV: 'F', // vector type\n        MS: 'F', // scalar type...not really necessary in javascript\n        nbpt: 4,\n        view: undefined\n    };\n\n\n    /**\n     * Sets data type for all subsequent calls to vector libraries.  Remains in effect until another call to this routine.\n     * @param ctype\n     */\n    // ~= VSTYPE - not really necessary\n    m.vstype = function(ctype) {\n        VECTOR.MS = ctype;\n        VECTOR.MV = ctype;\n        if (VECTOR.MV === 'D') {\n            VECTOR.nbpt = 8;\n        } else if ((VECTOR.MV === 'L') || (VECTOR.MV === 'F')) {\n            VECTOR.nbpt = 4;\n        } else if (VECTOR.MV === 'I') {\n            VECTOR.nbpt = 2;\n        } else if (VECTOR.MV === 'B') {\n            VECTOR.nbpt = 1;\n        } else {\n            alert(\"Unsupported vector type\");\n        }\n    };\n\n    m.log10 = function(v, lo_thresh) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        return Math.log(Math.max(v, lo_thresh)) / Math.log(10);\n    };\n\n    /**\n     * For each vector element in <src>, determine the max of <src> element and <lo_thresh>, returns the log(base10) of that value in <dst>\n     * @param\t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number} \tlo_thresh\tUser-set minimum log threshold (if not defined, set default=1.0e-20). Prevent computing log of 0 or negative values.\n     * @param \t{array}\t\tdst\t\tOuput vector.  If undefined, <src> elements will be overwritten.\n     */\n    // ~= M$VLOG10- not really necessary\n    m.vlog10 = function(src, lo_thresh, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.max(src[i], lo_thresh)) / Math.log(10);\n        }\n    };\n\n    /**\n     * Same as vlog10 but multiply each output value by a scale factor <dbscale>.\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.vlogscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        for (var i = 0; i < src.length; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = Math.log(Math.abs(Math.max(src[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Same as vlogscale but computes magnitude squared.\n     *\n     * @param \t{array}\t\tsrc\t\tInput vector.\n     * @param \t{number}\tlo_thresh\tUser-set minimum log threshold.\n     *                                              If undefined, defaults to 1.0e-20. Prevent computing log of 0 or negative values.\n     * @param \t{number}\tdbscale\t\tOutput scale factor. If undefined, defaults to 1.\n     * @param \t{array}\t\tdst\t\tOutput vector. If undefined, <src> elements will be overwritten.\n     * @private\n     */\n    m.cvmag2logscale = function(src, lo_thresh, dbscale, dst) {\n        if (lo_thresh === undefined) {\n            lo_thresh = 1.0e-20;\n        }\n        if (dbscale === undefined) {\n            dbscale = 1;\n        }\n        if (dst === undefined) {\n            dst = src;\n        }\n        var j = 0;\n        for (var i = 0; i < dst.length; i++) {\n            j = 2 * i + 1;\n            if (j >= src.length) {\n                break;\n            }\n            dst[i] = (src[j - 1] * src[j - 1]) + (src[j] * src[j]);\n            dst[i] = Math.log(Math.abs(Math.max(dst[i], lo_thresh))) / Math.log(10);\n            dst[i] = dst[i] * dbscale;\n        }\n    };\n\n    /**\n     * Multiply <count> elements of <src> by <mul>, store results in <dst>\n     * @param\t{array} \tsrc\t\tInput vector.\n     * @param\t{number}\tmul\t\tVector multiplier.\n     * @param\t{array}\t\tdst\t\tOutput vector. If not defined, <src> elements will be overwritten.\n     * @param\t{number}\tcount\t\tNumber of elements to apply multiplier, starting with first <src> element.\n     */\n    // ~= M$VSMUL\n    m.vsmul = function(src, mul, dst, count) {\n        if (dst === undefined) {\n            dst = src;\n        }\n        if (count === undefined) {\n            count = dst.length;\n        }\n        count = Math.min(dst.length, count);\n        count = Math.min(src.length, count);\n\n        for (var i = 0; i < count; i++) {\n            if (dst.length <= i) {\n                break;\n            }\n            dst[i] = src[i] * mul;\n        }\n    };\n\n    /**\n     * Finds max and min values in vector <vec> and returns values.\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param\t{number}\tsize\t\tNumber of elements to search to find max.min values.\n     * @return \t{array}\t\tmxmin\t\tIndex and value of min and max elements in <vec>.\n     */\n    // ~= M$VMXMN\n    m.vmxmn = function(vec, size) {\n        // Originally this code used an object to hold the values\n        // but Chrome 34.0.1847.131 seemed to have a bug where\n        // these values would somehow get messed up...oddly\n        // putting printouts or breakpoints prevented the\n        // problem from showing up.\n        var smax = vec[0];\n        var smin = vec[0];\n        var imax = 0;\n        var imin = 0;\n        size = Math.min(size, vec.length);\n        for (var i = 0; i < size; i++) {\n            if (vec[i] > smax) {\n                smax = vec[i];\n                imax = i;\n            }\n            if (vec[i] < smin) {\n                smin = vec[i];\n                imin = i;\n            }\n        }\n        return {\n            smax: smax,\n            smin: smin,\n            imax: imax,\n            imin: imin\n        };\n    };\n\n    /**\n     * Move <count> elements from <src> to <dest>.  Stride is the distance between each array element in either or both the input and output vectors.\n     * @param {array}\tsrc\t\tInput vector.\n     * @param {number}\tsstride\t\tInput stride.\n     * @param {array}\tdest\t\tOutput vector.\n     * @param {number}\tdstride\t\tOutput stride.\n     * @param {number}\tcount\t\tNumber of input vector elements to move, starting with 0th element of <vec>. Cannot exceed vector lengths,\n     *\t\t\t\t\ttaking into account the strides.\n     */\n    m.vmov = function(src, sstride, dest, dstride, count) {\n        if (count === undefined) {\n            count = src.length;\n        }\n        count = Math.min(src.length, count);\n        //count = Math.min(src.length, count, (count)*(dest.length)*(dstride)); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var s = i * sstride;\n            var d = i * dstride;\n            if (s >= src.length) {\n                break;\n            }\n            if (d >= dest.length) {\n                break;\n            }\n            dest[d] = src[s];\n        }\n    };\n\n    /**\n     * Initialize <count> consecutive elements of input vector <vec> with value <inpval>.\n     * @param\t{array}\t\tvec\t\tInput vector\n     * @param\t{number}\tinpval\t\tValue\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>.  If undefined, entire <vec> is written.\n     */\n    // ~= M$VFILL\n    // TODO - more optimal version?\n    m.vfill = function(vec, inpval, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        count = Math.min(vec.length, count);\n        for (var i = 0; i < count; i++) {\n            vec[i] = inpval;\n        }\n    };\n\n    /**\n     * Compute the absolute value of <count> elements in <vec> and write to output vector <dest>\n     * @param \t{array}\t\tvec\t\tInput vector.\n     * @param \t{array}\t\tdest\t\tOuput vector. If <dest> is undefined, overwrite input vector <vec>.\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <vec>. Cannot exceed vector lengths.\n     */\n    m.vabs = function(vec, dest, count) {\n        if (count === undefined) {\n            count = vec.length;\n        }\n        if (dest === undefined) {\n            dest = vec;\n        }\n        //count = Math.min(dest.length, count, vec.length); //mmm-TODO\n        for (var i = 0; i < count; i++) {\n            dest[i] = Math.abs(vec[i]);\n        }\n    };\n\n\n    /**\n     * Computes the magnitude of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG\n    m.cvmag = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        for (var i = 0; i < count; i++) {\n            var j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = Math.sqrt((cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]));\n        }\n    };\n\n    /**\n     * Computes the magnitude squared of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVMAG2\n    m.cvmag2 = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            dest[i] = (cxvec[j - 1] * cxvec[j - 1]) + (cxvec[j] * cxvec[j]);\n        }\n    };\n\n    /**\n     * Computes phase in radians of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHA\n    m.cvpha = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n        //count = Math.min(dest.length, count, cxvec.length); //mmm-TODO\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re);\n        }\n    };\n\n    /**\n     * Computes the phase in degrees of <count> complex vector <cxvec> elements. Store results in output vector <dest>.\n     * @param\t{array}\t\tcxvec\t\tInput vector\n     * @param \t{array}\t\tdest\t\tOutput vector\n     * @param \t{number}\tcount\t\tNumber of elements to write, starting with 0th element of <cxvec>. Cannot exceed vector lengths.  If undefined, defaults to output vector <dest> length.\n     */\n    // ~= M$CVPHAD\n    m.cvphad = function(cxvec, dest, count) {\n        if (count === undefined) {\n            count = dest.length;\n        }\n        count = Math.min(dest.length, count);\n\n        var j = 0;\n        var re = 0;\n        var im = 0;\n        for (var i = 0; i < count; i++) {\n            j = 2 * i + 1;\n            if (j >= cxvec.length) {\n                break;\n            }\n            re = cxvec[j - 1];\n            im = cxvec[j];\n            if ((re === 0.0) && (im === 0.0)) {\n                re = 1.0;\n            }\n            dest[i] = Math.atan2(im, re) * (180.0 / Math.PI);\n        }\n    };\n\n    /**\n     * @param n\n     * @private\n     */\n    // ~= INT(), DINT\n    m.trunc = function(n) {\n        return n - n % 1;\n    };\n\n    /**\n     * @param a1\n     * @param a2\n     * @private\n     */\n    // Transfer of sign function from Fortran\n    m.sign = function(a1, a2) {\n        if (a2 >= 0) {\n            return Math.abs(a1);\n        } else {\n            return -Math.abs(a1);\n        }\n    };\n\n    /**\n     * @method pad2\n     * @param number\n     * @private\n     */\n\n    function pad2(number) {\n        return (number < 10 ? '0' : '') + number;\n    }\n\n    /**\n     * Convert J1950 time or seconds-since-Epoch (midnight Dec-31-1949) to time-of-day. Fractional seconds accurate to milliseconds.\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    /* Output string can be in different forms as follows:\n     * -31536000 <  sec < 0                   -DDD::HH:MM:SS\n     *         0 <= sec < 86400                     HH:MM:SS\n     *         86400 <= sec < 31536000         DDD::HH:MM:SS\n     *         31536000 <=sec            YYYY:MM:DD:HH:MM:SS.<FFFFFF>\n     *                                    where FFFFFF is in microseconds\n     *\n     */\n\n    m.sec2tod = function(sec, trim_trailing_zeros) {\n        var tod = \"\";\n        var j1950 = Date.UTC(1950, 0, 1); //From 1950 to 1970\n        var j1950Date = new Date(j1950); //debug var\n        var d = new Date();\n        var midnightToday = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0, 0, 0);\n        var diffDaySecs = 86400; //    86400 secs = 24*60*60\n        var diffYearSecs = 31536000; // 31536000 secs = 365*24*60*60\n        var negDiffYearSecs = -1 * diffYearSecs; //-31536000 secs\n\n        if (sec >= 0) {\n            if (sec < diffDaySecs) {\n                // hh:mm:ss\n                var millisecs = midnightToday.getTime() + (sec * 1000);\n                var d = new Date(millisecs);\n                tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n            } else if (sec === 86400) {\n                tod = \"24:00:00\";\n            } else if (sec < diffYearSecs) {\n                // ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = [days > 0 ? Math.floor(days) : Math.ceil(days)];\n\n                // Break down integral seconds in the day into hours, minutes and seconds.\n                var seconds = Math.floor(sec % diffDaySecs);\n                var hours = Math.floor(seconds / 3600);\n                var minutes = Math.floor((seconds / 60) % 60);\n                seconds %= 60;\n\n                tod = days.toString() + \"::\" + pad2(hours) + \":\" + pad2(minutes) + \":\" + pad2(seconds);\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        } else {\n            if (sec > negDiffYearSecs) {\n                // -ddd:hh:mm:ss\n                var days = sec / diffDaySecs;\n                days = (days <= 0) ? Math.ceil(days) : Math.floor(days);\n\n                // Break down integral seconds in the day into hours, minutes and seconds.\n                var seconds = Math.floor(Math.abs(sec) % diffDaySecs);\n                var hours = Math.floor(seconds / 3600);\n                var minutes = Math.floor((seconds / 60) % 60);\n                seconds %= 60;\n\n                if (days === 0) {\n                    days = \"-0\";\n                } else {\n                    days = days.toString();\n                }\n                tod = days + \"::\" + pad2(hours) + \":\" + pad2(minutes) + \":\" + pad2(seconds);\n            } else {\n                // convert to j1950\n                var secMilli = Math.floor(sec * 1000) + j1950;\n                d = new Date(secMilli);\n                tod = d.getUTCFullYear() + \":\" + pad2(d.getUTCMonth() + 1) + \":\" + pad2(d.getUTCDate()) + \"::\" +\n                    pad2(d.getUTCHours()) + \":\" + pad2(d.getUTCMinutes()) + \":\" + pad2(d.getUTCSeconds());\n            }\n        }\n\n        // violate legacy behavior, include full precision always\n        // even if we are on a full second boundary, otherwise\n        // on rising/falling rasters it can look like the display\n        // is flickering\n        var fractional = (sec % 1);\n        if (fractional === 0.0) {\n            tod += \".000000\";\n        } else {\n            tod += \".\" + Math.abs(sec % 1).toPrecision(6).slice(2, 8);\n        }\n\n        if (trim_trailing_zeros) {\n            var dloc = tod.indexOf(\".\");\n            var zloc = -1;\n            // If there is a 'decimal point'\n            if (dloc !== -1) {\n                zloc = tod.substr(dloc, tod.length).indexOf(\"0\");\n            }\n            if (zloc !== -1) {\n                tod = tod.substr(0, dloc + zloc);\n            }\n        }\n        return tod;\n\n    };\n\n    /**\n     * The offset to convert midnight Jan 1st 1970 to\n     * midnight Jan 1st 1950.\n     *\n     * @private\n     */\n    var j1950offset = (20.0 * 365.0 + 5.0) * (24 * 3600);\n\n    /**\n     * 0.0 - 86400 == m.sec2tod\n     * >86400 then modulo 86400\n     *   if modulo <= 0 return m.sec2tod(modulo)+86400\n     *   if module <\n     */\n    m.sec2tspec = function(sec, mode, trim_trailing_zeros) {\n        mode = mode || \"\";\n        if (sec >= 0 && sec <= 86400) {\n            return m.sec2tod(sec, trim_trailing_zeros);\n        } else {\n            sec = sec % 86400;\n            if (mode !== \"delta\" && sec <= 0) {\n                return m.sec2tod(sec + 86400, trim_trailing_zeros);\n            } else if (mode === \"delta\" && sec <= 0) {\n                return \"-\" + m.sec2tod(-1 * sec, trim_trailing_zeros);\n            } else {\n                return m.sec2tod(sec, trim_trailing_zeros);\n            }\n        }\n    };\n\n    /**\n     * @param \t{number}\tsec\t\tNumber of seconds.\n     * @return\t{string}\ttod\t\tTime of day\n     */\n\n    m.sec2tod_j1970 = function(sec) {\n        var tod = \"\";\n        var d;\n        if ((sec >= 0) && (sec < 86400)) {\n            // hh:mm:ss\n            d = new Date(sec * 1000);\n            tod = pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n\n        } else if ((sec < 0) && (sec > -31536000)) {\n            // -ddd:hh:mm:ss\n            var days = -1 * (sec / (24 * 60 * 60));\n            d = new Date(sec * 1000);\n            tod = days.toString() + \"::\" + pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        } else {\n            // convert to j1950\n            d = new Date((sec - j1950offset) * 1000);\n            tod = d.getFullYear() + \":\" + pad2(d.getMonth()) + \":\" + pad2(d.getDate()) + \"::\" +\n                pad2(d.getHours()) + \":\" + pad2(d.getMinutes()) + \":\" + pad2(d.getSeconds());\n        }\n        if ((sec % 1) !== 0) {\n            tod += \".\" + (sec % 1).toPrecision(6).slice(2, 8);\n        }\n        return tod;\n    };\n\n    m.j1970toj1950 = function(t) {\n        if (t.getTime !== undefined) {\n            return ((t.getTime() / 1000) + j1950offset);\n        } else {\n            return (t + j1950offset);\n        }\n    };\n\n    m.j1950toj1970 = function(t) {\n        return (t - j1950offset);\n    };\n\n    /**\n     * @private\n     */\n    // Throttle calls to \"callback\" routine and ensure that it\n    // is not invoked any more often than \"delay\" milliseconds.\n    //\n    m.throttle = function(delay, callback) {\n        var previousCall = new Date().getTime();\n        return function() {\n            var time = new Date().getTime();\n\n            //\n            // if \"delay\" milliseconds have expired since\n            // the previous call then propagate this call to\n            // \"callback\"\n            //\n            if ((time - previousCall) >= delay) {\n                previousCall = time;\n                callback.apply(null, arguments);\n            }\n        };\n    };\n\n    m.pad = function(value, padamt) {\n        if (!padamt) {\n            return 0;\n        }\n        if (typeof padamt === 'string') {\n            if (padamt.endsWith(\"%\")) {\n                padamt = value * (parseFloat(padamt) / 100.0);\n            } else {\n                padamt = parseFloat(padamt);\n            }\n        }\n\n        return padamt;\n    };\n\n    // Node: Export function\n    module.exports = m;\n\n}());\n", "// TinyColor v1.4.2\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n", "/* global module */\n/* global require */\n (function() {\n     var tinycolor = require(\"tinycolor2\");\n     if (typeof Object.assign !== 'function') {\n         // Must be writable: true, enumerable: false, configurable: true\n         Object.defineProperty(Object, \"assign\", {\n             value: function assign(target, varArgs) { // .length of function is 2\n                 'use strict';\n                 if (target == null) { // TypeError if undefined or null\n                     throw new TypeError('Cannot convert undefined or null to object');\n                 }\n                 var to = Object(target);\n                 for (var index = 1; index < arguments.length; index++) {\n                     var nextSource = arguments[index];\n                     if (nextSource != null) { // Skip over if undefined or null\n                         for (var nextKey in nextSource) {\n                             // Avoid bugs when hasOwnProperty is shadowed\n                             if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                                 to[nextKey] = nextSource[nextKey];\n                             }\n                         }\n                     }\n                 }\n                 return to;\n             },\n             writable: true,\n             configurable: true\n         });\n     }\n     var ColorMap = window.ColorMap = function(colors, options) {\n         this.options = {\n             ncolors: 500,\n             alpha: 255\n         };\n         this.options = Object.assign(this.options, options);\n         this.map = [];\n         var _min = 0;\n         this._low = 0;\n         this._high = 1;\n         var ncolors = this.options.ncolors;\n         this._fscale = ncolors / (this._high - this._low);\n         var colorindex = 1;\n         var colorBlockIndex = 1;\n         colors = JSON.parse(JSON.stringify(colors)); //make a copy so we dont change the original colors\n         colors = this._parseColors(colors);\n         this.colors = colors;\n         var col1 = colors[0];\n         var col2 = colors[1];\n         // pos is the percentage of scale (0-100), so\n         // colorStop is how many percentage is allocated\n         // to this band\n         var colorStop = colors[1].pos - colors[0].pos;\n         // now many colors are allocated to this block\n         var colorsInBlock = ncolors * (colorStop / 100);\n         // the interpolation step per color number\n         var factorStep = 1 / colorsInBlock;\n         for (var n = 0; n < ncolors - 2; n++) {\n             if (colorBlockIndex > colorsInBlock) {\n                 col1 = colors[colorindex];\n                 col2 = colors[colorindex + 1];\n                 // if we are at the end of the color list\n                 if (col2 === undefined) {\n                     break;\n                 }\n                 if ((col1.pos >= 100) && (col2.pos >= 100)) {\n                    break;\n                }\n                 var colorStop = col2.pos - col1.pos;\n                 var colorsInBlock = ncolors * (colorStop / 100);\n                 var factorStep = 1 / colorsInBlock;\n                 var colorBlockIndex = 1;\n                 colorindex += 1;\n             }\n             this._addColor(this.interpolate(col1, col2, factorStep * colorBlockIndex));\n             colorBlockIndex += 1;\n         }\n         \n        this._addColor(colors[colorindex]);\n        this._addColor(colors[0], true);\n         \n     };\n     ColorMap.prototype = {\n         _addColor: function(color, front) {\n             color.hex = this._rgbToHex(color.red, color.green, color.blue);\n             color.color = (color.alpha << 24) | // alpha\n                 (color.blue << 16) | // blue\n                 (color.green << 8) | // green\n                 (color.red);\n             if (front) {\n                 this.map.unshift(color);\n             } else {\n                 this.map.push(color);\n             }\n         },\n         _parseColors: function(colors) {\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (typeof color === \"string\") {\n                     colors[i] = this._hexToRgb(color);\n                     color = tinycolor(color);\n                     color = color.toRgb();\n                     colors[i] = {red:color.r,green:color.g,blue:color.b,alpha:this.options.alpha};\n\n                 } else if (color.hasOwnProperty(\"color\")) {\n                     var newColor = tinycolor(color.color);\n                     newColor = newColor.toRgb();\n                     newColor = {red:newColor.r,green:newColor.g,blue:newColor.b,alpha:this.options.alpha};\n                     if (color.hasOwnProperty(\"pos\")) {\n                         newColor.pos = color.pos;\n                     }\n                     colors[i] = newColor;\n                 } else {\n                    if (color.red === undefined && color.green === undefined && color.blue === undefined) {\n                        //assume if it doesn't have rgb values it is a matplotlib style color map\n                        colors[i].red = Math.floor(Math.round(255 * color[0]));\n                        colors[i].green = Math.floor(Math.round(255 * color[1]));\n                        colors[i].blue = Math.floor(Math.round(255 * color[2]));\n                    } else {\n                        //assume if it has rgb values it is a percentage\n                        colors[i].red = Math.floor(Math.round(255 * (color.red / 100)));\n                        colors[i].green = Math.floor(Math.round(255 * (color.green / 100)));\n                        colors[i].blue = Math.floor(Math.round(255 * (color.blue / 100)));\n                    }\n                 }\n                 if (!colors[i].hasOwnProperty(\"alpha\")) {\n                     colors[i].alpha = this.options.alpha;\n                 }\n             }\n             return this._checkColorStops(colors);\n         },\n         _checkColorStops: function(colors) {\n             var lastStop = 0;\n             var colorsWithNoStops = 0;\n             for (var i = 0, c = colors.length; i < c; i++) {\n                 var color = colors[i];\n                 if (!color.hasOwnProperty(\"pos\")) {\n                     colorsWithNoStops += 1;\n                 } else {\n                     if (colorsWithNoStops) {\n                         var stopSize = (color.pos - lastStop) / colorsWithNoStops;\n                         var currentPos = color.pos;\n                         for (var z = 1; z <= colorsWithNoStops; z++) {\n                             colors[i - z].pos = currentPos - stopSize;\n                             currentPos -= stopSize;\n                         }\n                     }\n                     colorsWithNoStops = 0;\n                 }\n             }\n             if (colorsWithNoStops) {\n                 var currentPos = 100;\n                 colors[colors.length - 1].pos = currentPos;\n                 if (lastStop === 0) {\n                     colors[0].pos = 0;\n                     colorsWithNoStops -= 1;\n                 }\n                 var stopSize = (currentPos - lastStop) / colorsWithNoStops;\n                 var i = colors.length - 1;\n                 for (var z = 1; z < colorsWithNoStops; z++) {\n                     colors[i - z].pos = currentPos - stopSize;\n                     currentPos -= stopSize;\n                 }\n             }\n             return colors;\n         },\n         _componentToHex: function(c) {\n             var hex = c.toString(16);\n             return hex.length === 1 ? \"0\" + hex : hex;\n         },\n         _rgbToHex: function(r, g, b) {\n             return \"#\" + this._componentToHex(r) + this._componentToHex(g) + this._componentToHex(b);\n         },\n         _hexToRgb: function(hex) {\n             var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n             return result ? {\n                 red: parseInt(result[1], 16),\n                 green: parseInt(result[2], 16),\n                 blue: parseInt(result[3], 16)\n             } : null;\n         },\n         getColor: function(number) {\n             var colorindex = this.getColorIndex(number);\n             return this.map[colorindex];\n         },\n         getColorByIndex: function(colorindex) {\n            return this.map[colorindex];\n         },\n         getColorIndex: function(number) {\n            var n = (number - this._low) * this._fscale;\n            var colorindex = ~~n; //make int fastest method\n            if (colorindex > this.map.length - 1) {\n                colorindex = this.map.length - 1;\n            } else if (colorindex < 0) {\n                colorindex = 0;\n            }\n            return colorindex;\n         },\n         getNColors : function() {\n             return this.map.length;\n         },\n         setRange: function(low, high) {\n             // only recalculate if a value has changed\n             if ((this._low !== low) || (this._high !== high)) {\n                 this._low = low;\n                 this._high = high;\n                 this._fscale = this.map.length / Math.abs(this._high - this._low);\n             }\n         },\n         interpolate: function(col1, col2, factor) {\n             return {\n                 red: col1.red + factor * (col2.red - col1.red),\n                 green: col1.green + factor * (col2.green - col1.green),\n                 blue: col1.blue + factor * (col2.blue - col1.blue),\n                 alpha: col1.alpha + factor * (col2.alpha - col1.alpha)\n             };\n         }\n     };\n     module.exports = ColorMap;\n })();", "/**\n * @license\n * File: CanvasInput.js\n *  CanvasInput v1.0.10\n *  http://goldfirestudios.com/blog/108/CanvasInput-HTML5-Canvas-Text-Input\n *\n *  (c) 2013, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  (c) 2013, Axios, Inc.\n *  Modifications made by Axios, Inc.\n *  axiosengineering.com\n *\n *  MIT License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n    // create a buffer that stores all inputs so that tabbing\n    // between them is made possible.\n    var inputs = [];\n\n    // initialize the Canvas Input\n    var CanvasInput = window.CanvasInput = function(o) {\n        var self = this;\n\n        o = o ? o : {};\n\n        // setup the defaults\n        self._canvas = o.canvas || null;\n        self._ctx = self._canvas ? self._canvas.getContext('2d') : null;\n        self._x = o.x || 0;\n        self._y = o.y || 0;\n        self._extraX = o.extraX || 0;\n        self._extraY = o.extraY || 0;\n        self._fontSize = o.fontSize || 14;\n        self._fontFamily = o.fontFamily || 'Arial';\n        self._fontColor = o.fontColor || '#000';\n        self._placeHolderColor = o.placeHolderColor || '#bfbebd';\n        self._fontWeight = o.fontWeight || 'normal';\n        self._fontStyle = o.fontStyle || 'normal';\n        self._readonly = o.readonly || false;\n        self._maxlength = o.maxlength || null;\n        self._width = o.width || 150;\n        self._height = o.height || self._fontSize;\n        self._padding = o.padding >= 0 ? o.padding : 5;\n        self._borderWidth = o.borderWidth >= 0 ? o.borderWidth : 1;\n        self._borderColor = o.borderColor || '#959595';\n        self._borderRadius = o.borderRadius >= 0 ? o.borderRadius : 3;\n        self._backgroundImage = o.backgroundImage || '';\n        self._boxShadow = o.boxShadow || '1px 1px 0px rgba(255, 255, 255, 1)';\n        self._innerShadow = o.innerShadow || '0px 0px 4px rgba(0, 0, 0, 0.4)';\n        self._selectionColor = o.selectionColor || 'rgba(179, 212, 253, 0.8)';\n        self._placeHolder = o.placeHolder || '';\n        self._value = o.value || self._placeHolder;\n        self._onsubmit = o.onsubmit || function() {};\n        self._onkeydown = o.onkeydown || function() {};\n        self._onkeyup = o.onkeyup || function() {};\n        self._onfocus = o.onfocus || function() {};\n        self._onblur = o.onblur || function() {};\n        self._cursor = false;\n        self._cursorPos = 0;\n        self._hasFocus = false;\n        self._selection = [0, 0];\n        self._wasOver = false;\n        self._renderOnReturn = (o.renderOnReturn !== undefined ? o.renderOnReturn : true);\n        self._disableBlur = o.disableBlur || false;\n        self._tabToClear = o.tabToClear || false;\n\n        // parse box shadow\n        self.boxShadow(self._boxShadow, true);\n\n        // calculate the full width and height with padding, borders and shadows\n        self._calcWH();\n\n        // setup the off-DOM canvas\n        self._renderCanvas = document.createElement('canvas');\n        self._renderCanvas.setAttribute('width', self.outerW);\n        self._renderCanvas.setAttribute('height', self.outerH);\n        self._renderCtx = self._renderCanvas.getContext('2d');\n\n        // setup another off-DOM canvas for inner-shadows\n        self._shadowCanvas = document.createElement('canvas');\n        self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n        self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n        self._shadowCtx = self._shadowCanvas.getContext('2d');\n\n        // setup the background color\n        if (typeof o.backgroundGradient !== 'undefined') {\n            self._backgroundColor = self._renderCtx.createLinearGradient(\n                0,\n                0,\n                0,\n                self.outerH\n            );\n            self._backgroundColor.addColorStop(0, o.backgroundGradient[0]);\n            self._backgroundColor.addColorStop(1, o.backgroundGradient[1]);\n        } else {\n            self._backgroundColor = o.backgroundColor || '#fff';\n        }\n\n        // setup main canvas events\n        if (self._canvas) {\n            self.mousemoveCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousemove(e, self);\n            };\n            self._canvas.addEventListener('mousemove', self.mousemoveCanvasListener, false);\n\n            self.mousedownCanvasListener = function(e) {\n                e = e || window.event;\n                self.mousedown(e, self);\n            };\n            self._canvas.addEventListener('mousedown', self.mousedownCanvasListener, false);\n\n            self.mouseupCanvasListener = function(e) {\n                e = e || window.event;\n                self.mouseup(e, self);\n            };\n            self._canvas.addEventListener('mouseup', self.mouseupCanvasListener, false);\n        }\n\n        // setup a global mouseup to blur the input outside of the canvas\n        self.mouseupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus && !self._mouseDown) {\n                self.blur();\n            }\n        };\n        window.addEventListener('mouseup', self.mouseupWindowListener, true);\n\n        // setup the keydown listener\n        self.keydownWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self.keydown(e, self);\n            }\n        };\n        window.addEventListener('keydown', self.keydownWindowListener, false);\n\n        // setup the keyup listener\n        self.keyupWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                self._onkeyup(e, self);\n            }\n        };\n        window.addEventListener('keyup', self.keyupWindowListener, false);\n\n        // setup the 'paste' listener\n        self.pasteWindowListener = function(e) {\n            e = e || window.event;\n            if (self._hasFocus) {\n                var text = e.clipboardData.getData('text/plain'),\n                    startText = self._value.substr(0, self._cursorPos),\n                    endText = self._value.substr(self._cursorPos);\n                self._value = startText + text + endText;\n                self._cursorPos += text.length;\n\n                self.render();\n            }\n        };\n        window.addEventListener('paste', self.pasteWindowListener, false);\n\n        // add this to the buffer\n        inputs.push(self);\n        self._inputsIndex = inputs.length - 1;\n\n        // draw the text box\n        self.render();\n    };\n\n    // setup the prototype\n    CanvasInput.prototype = {\n        /**\n         * Get/set the main canvas.\n         * @param  {Object} data Canvas reference.\n         * @return {Mixed}      CanvasInput or current canvas.\n         */\n        canvas: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._canvas = data;\n                self._ctx = self._canvas.getContext('2d');\n\n                return self.render();\n            } else {\n                return self._canvas;\n            }\n        },\n\n        /**\n         * Get/set the x-position.\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        x: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._x = data;\n\n                return self.render();\n            } else {\n                return self._x;\n            }\n        },\n\n        /**\n         * Get/set the y-position.\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        y: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._y = data;\n\n                return self.render();\n            } else {\n                return self._y;\n            }\n        },\n\n        /**\n         * Get/set the extra x-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the x-coordinate.\n         * @return {Mixed}      CanvasInput or current x-value.\n         */\n        extraX: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraX = data;\n\n                return self.render();\n            } else {\n                return self._extraX;\n            }\n        },\n\n        /**\n         * Get/set the extra y-position (generally used when no canvas is specified).\n         * @param  {Number} data The pixel position along the y-coordinate.\n         * @return {Mixed}      CanvasInput or current y-value.\n         */\n        extraY: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._extraY = data;\n\n                return self.render();\n            } else {\n                return self._extraY;\n            }\n        },\n\n        /**\n         * Get/set the font size.\n         * @param  {Number} data Font size.\n         * @return {Mixed}      CanvasInput or current font size.\n         */\n        fontSize: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontSize = data;\n\n                return self.render();\n            } else {\n                return self._fontSize;\n            }\n        },\n\n        /**\n         * Get/set the font family.\n         * @param  {String} data Font family.\n         * @return {Mixed}      CanvasInput or current font family.\n         */\n        fontFamily: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontFamily = data;\n\n                return self.render();\n            } else {\n                return self._fontFamily;\n            }\n        },\n\n        /**\n         * Get/set the font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current font color.\n         */\n        fontColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontColor = data;\n\n                return self.render();\n            } else {\n                return self._fontColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder font color.\n         * @param  {String} data Font color.\n         * @return {Mixed}      CanvasInput or current place holder font color.\n         */\n        placeHolderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolderColor = data;\n\n                return self.render();\n            } else {\n                return self._placeHolderColor;\n            }\n        },\n\n        /**\n         * Get/set the font weight.\n         * @param  {String} data Font weight.\n         * @return {Mixed}      CanvasInput or current font weight.\n         */\n        fontWeight: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontWeight = data;\n\n                return self.render();\n            } else {\n                return self._fontWeight;\n            }\n        },\n\n        /**\n         * Get/set the font style.\n         * @param  {String} data Font style.\n         * @return {Mixed}      CanvasInput or current font style.\n         */\n        fontStyle: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._fontStyle = data;\n\n                return self.render();\n            } else {\n                return self._fontStyle;\n            }\n        },\n\n        /**\n         * Get/set the width of the text box.\n         * @param  {Number} data Width in pixels.\n         * @return {Mixed}      CanvasInput or current width.\n         */\n        width: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._width = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._width;\n            }\n        },\n\n        /**\n         * Get/set the height of the text box.\n         * @param  {Number} data Height in pixels.\n         * @return {Mixed}      CanvasInput or current height.\n         */\n        height: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._height = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._height;\n            }\n        },\n\n        /**\n         * Get/set the padding of the text box.\n         * @param  {Number} data Padding in pixels.\n         * @return {Mixed}      CanvasInput or current padding.\n         */\n        padding: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._padding = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._padding;\n            }\n        },\n\n        /**\n         * Get/set the border width.\n         * @param  {Number} data Border width.\n         * @return {Mixed}      CanvasInput or current border width.\n         */\n        borderWidth: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderWidth = data;\n                self._calcWH();\n                self._updateCanvasWH();\n\n                return self.render();\n            } else {\n                return self._borderWidth;\n            }\n        },\n\n        /**\n         * Get/set the border color.\n         * @param  {String} data Border color.\n         * @return {Mixed}      CanvasInput or current border color.\n         */\n        borderColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderColor = data;\n\n                return self.render();\n            } else {\n                return self._borderColor;\n            }\n        },\n\n        /**\n         * Get/set the border radius.\n         * @param  {Number} data Border radius.\n         * @return {Mixed}      CanvasInput or current border radius.\n         */\n        borderRadius: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._borderRadius = data;\n\n                return self.render();\n            } else {\n                return self._borderRadius;\n            }\n        },\n\n        /**\n         * Get/set the background color.\n         * @param  {Number} data Background color.\n         * @return {Mixed}      CanvasInput or current background color.\n         */\n        backgroundColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = data;\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the background gradient.\n         * @param  {Number} data Background gradient.\n         * @return {Mixed}      CanvasInput or current background gradient.\n         */\n        backgroundGradient: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._backgroundColor = self._renderCtx.createLinearGradient(\n                    0,\n                    0,\n                    0,\n                    self.outerH\n                );\n                self._backgroundColor.addColorStop(0, data[0]);\n                self._backgroundColor.addColorStop(1, data[1]);\n\n                return self.render();\n            } else {\n                return self._backgroundColor;\n            }\n        },\n\n        /**\n         * Get/set the box shadow.\n         * @param  {String} data     Box shadow in CSS format (1px 1px 1px rgba(0, 0, 0.5)).\n         * @param  {Boolean} doReturn (optional) True to prevent a premature render.\n         * @return {Mixed}          CanvasInput or current box shadow.\n         */\n        boxShadow: function(data, doReturn) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                // parse box shadow\n                var boxShadow = data.split('px ');\n                self._boxShadow = {\n                    x: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[0], 10),\n                    y: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[1], 10),\n                    blur: self._boxShadow === 'none' ? 0 : parseInt(boxShadow[2], 10),\n                    color: self._boxShadow === 'none' ? '' : boxShadow[3]\n                };\n\n                // take into account the shadow and its direction\n                if (self._boxShadow.x < 0) {\n                    self.shadowL = Math.abs(self._boxShadow.x) + self._boxShadow.blur;\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                } else {\n                    self.shadowL = Math.abs(self._boxShadow.blur - self._boxShadow.x);\n                    self.shadowR = self._boxShadow.blur + self._boxShadow.x;\n                }\n                if (self._boxShadow.y < 0) {\n                    self.shadowT = Math.abs(self._boxShadow.y) + self._boxShadow.blur;\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                } else {\n                    self.shadowT = Math.abs(self._boxShadow.blur - self._boxShadow.y);\n                    self.shadowB = self._boxShadow.blur + self._boxShadow.y;\n                }\n\n                self.shadowW = self.shadowL + self.shadowR;\n                self.shadowH = self.shadowT + self.shadowB;\n\n                self._calcWH();\n\n                if (!doReturn) {\n                    self._updateCanvasWH();\n\n                    return self.render();\n                }\n            } else {\n                return self._boxShadow;\n            }\n        },\n\n        /**\n         * Get/set the inner shadow.\n         * @param  {String} data In the format of a CSS box shadow (1px 1px 1px rgba(0, 0, 0.5)).\n         * @return {Mixed}          CanvasInput or current inner shadow.\n         */\n        innerShadow: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._innerShadow = data;\n\n                return self.render();\n            } else {\n                return self._innerShadow;\n            }\n        },\n\n        /**\n         * Get/set the text selection color.\n         * @param  {String} data Color.\n         * @return {Mixed}      CanvasInput or current selection color.\n         */\n        selectionColor: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._selectionColor = data;\n\n                return self.render();\n            } else {\n                return self._selectionColor;\n            }\n        },\n\n        /**\n         * Get/set the place holder text.\n         * @param  {String} data Place holder text.\n         * @return {Mixed}      CanvasInput or current place holder text.\n         */\n        placeHolder: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._placeHolder = data;\n\n                return self.render();\n            } else {\n                return self._placeHolder;\n            }\n        },\n\n        /**\n         * Get/set the current text box value.\n         * @param  {String} data Text value.\n         * @return {Mixed}      CanvasInput or current text value.\n         */\n        value: function(data) {\n            var self = this;\n\n            if (typeof data !== 'undefined') {\n                self._value = data;\n\n                return self.focus();\n            } else {\n                return self._value;\n            }\n        },\n\n        /**\n         * Set or fire the onsubmit event.\n         * @param  {Function} fn Custom callback.\n         */\n        onsubmit: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onsubmit = fn;\n\n                return self;\n            } else {\n                self._onsubmit();\n            }\n        },\n\n        /**\n         * Set or fire the onkeydown event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeydown: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeydown = fn;\n\n                return self;\n            } else {\n                self._onkeydown();\n            }\n        },\n\n        /**\n         * Set or fire the onkeyup event.\n         * @param  {Function} fn Custom callback.\n         */\n        onkeyup: function(fn) {\n            var self = this;\n\n            if (typeof fn !== 'undefined') {\n                self._onkeyup = fn;\n\n                return self;\n            } else {\n                self._onkeyup();\n            }\n        },\n\n        /**\n         * Place focus on the CanvasInput box, placing the cursor\n         * either at the end of the text or where the user clicked.\n         * @param  {Number} pos (optional) The position to place the cursor.\n         * @return {CanvasInput}\n         */\n        focus: function(pos) {\n            var self = this,\n                input;\n\n            // if this is readonly, don't allow it to get focus\n            if (self._readonly) {\n                return;\n            }\n\n            // only fire the focus event when going from unfocussed\n            if (!self._hasFocus) {\n                self._onfocus(self);\n            }\n\n            // remove selection\n            if (!self._selectionUpdated) {\n                self._selection = [0, 0];\n            } else {\n                delete self._selectionUpdated;\n            }\n\n            // update the cursor position\n            self._cursorPos = (typeof pos === 'number') ? pos : self._clipText().length;\n\n            // clear the place holder\n            if (self._placeHolder === self._value) {\n                self._value = '';\n            }\n\n            self._hasFocus = true;\n            self._cursor = true;\n\n            // setup cursor interval\n            if (self._cursorInterval) {\n                clearInterval(self._cursorInterval);\n            }\n            self._cursorInterval = setInterval(function() {\n                self._cursor = !self._cursor;\n                self.render();\n            }, 500);\n\n            // check if this is Chrome for Android (there is a bug with returning incorrect character key codes)\n            var nav = navigator.userAgent.toLowerCase(),\n                isChromeMobile = (nav.indexOf('chrome') >= 0 && nav.indexOf('mobile') >= 0 && nav.indexOf('android') >= 0);\n\n            // add support for mobile\n            var isMobile = (typeof window.orientation !== 'undefined');\n            if (isMobile && !isChromeMobile && document && document.createElement && (input = document.createElement('input'))) {\n                input.type = 'text';\n                input.style.opacity = 0;\n                input.style.position = 'absolute';\n                input.style.left = (self._x + self._extraX + (self._canvas ? self._canvas.offsetLeft : 0)) + 'px';\n                input.style.top = (self._y + self._extraY + (self._canvas ? self._canvas.offsetTop : 0)) + 'px';\n                input.style.width = self._width;\n                input.style.height = 0;\n                document.body.appendChild(input);\n                input.focus();\n                input.addEventListener('blur', function() {\n                    self.blur(self);\n                }, false);\n            } else if (isMobile) {\n                self.value(prompt(self._placeHolder) || '');\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Removes focus from the CanvasInput box.\n         * @param  {Object} _this Reference to this.\n         * @return {CanvasInput}\n         */\n        blur: function(_this) {\n            var self = _this || this;\n\n            if (!self._disableBlur) {\n                self._onblur(self);\n\n                if (self._cursorInterval) {\n                    clearInterval(self._cursorInterval);\n                }\n                self._hasFocus = false;\n                self._cursor = false;\n                self._selection = [0, 0];\n\n                // fill the place holder\n                if (self._value === '') {\n                    self._value = self._placeHolder;\n                }\n            }\n\n            return self.render();\n        },\n\n        /**\n         * Maintains continual focus on the CanvasInput by disabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        disableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = true;\n        },\n\n        /**\n         * Allows the CanvasInput to blur or focus by re-enabling blur.\n         * @param {Object} _this Reference to this.\n         */\n        enableBlur: function(_this) {\n            var self = _this || this;\n            self._disableBlur = false;\n        },\n\n        /**\n         * Fired with the keydown event to draw the typed characters.\n         * @param  {Event}       e    The keydown event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        keydown: function(e, self) {\n            var keyCode = e.which,\n                isShift = e.shiftKey,\n                key = null,\n                startText, endText;\n\n            // make sure the correct text field is being updated\n            if (!self._hasFocus) {\n                return;\n            }\n\n            // fire custom user event\n            self._onkeydown(e, self);\n\n            // add support for Ctrl/Cmd+A selection\n            if (keyCode === 65 && (e.ctrlKey || e.metaKey)) {\n                self._selection = [0, self._value.length];\n                e.preventDefault();\n                return self.render();\n            }\n\n            // block keys that shouldn't be processed\n            if (keyCode === 17 || e.metaKey || e.ctrlKey) {\n                return self;\n            }\n\n            // prevent the default action\n            e.preventDefault();\n\n            if (keyCode === 8) { // backspace\n                if (!self._clearSelection()) {\n                    if (self._cursorPos > 0) {\n                        startText = self._value.substr(0, self._cursorPos - 1);\n                        endText = self._value.substr(self._cursorPos, self._value.length);\n                        self._value = startText + endText;\n                        self._cursorPos--;\n                    }\n                }\n            } else if (keyCode === 37) { // left arrow key\n                if (self._cursorPos > 0) {\n                    self._cursorPos--;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 39) { // right arrow key\n                if (self._cursorPos < self._value.length) {\n                    self._cursorPos++;\n                    self._cursor = true;\n                    self._selection = [0, 0];\n                }\n            } else if (keyCode === 13) { // enter key\n                self._onsubmit(e, self);\n            } else if (keyCode === 9) { // tab key\n                if (self._tabToClear) {\n                    self._value = \"\";\n                    self._cursorPos = 0;\n                } else {\n                    var next = (inputs[self._inputsIndex + 1]) ? self._inputsIndex + 1 : 0;\n                    if (next !== self._inputsIndex) {\n                        self.blur();\n                        setTimeout(function() {\n                            inputs[next].focus();\n                        }, 10);\n                    }\n                }\n            } else if (key = self._mapCodeToKey(isShift, keyCode)) {\n                self._clearSelection();\n\n                // enforce the max length\n                if (self._maxlength && self._maxlength <= self._value.length) {\n                    return;\n                }\n\n                startText = (self._value) ? self._value.substr(0, self._cursorPos) : '';\n                endText = (self._value) ? self._value.substr(self._cursorPos) : '';\n                self._value = startText + key + endText;\n                self._cursorPos++;\n            }\n\n            if ((keyCode == 13 && self._renderOnReturn) || keyCode !== 13) {\n                return self.render();\n            } else {\n                return function() {};\n            }\n        },\n\n        /**\n         * Fired with the click event on the canvas, and puts focus on/off\n         * based on where the user clicks.\n         * @param  {Event}       e    The click event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        click: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            if (self._endSelection) {\n                delete self._endSelection;\n                delete self._selectionUpdated;\n                return;\n            }\n\n            if (self._canvas && self._overInput(x, y) || !self._canvas) {\n                if (self._mouseDown) {\n                    self._mouseDown = false;\n                    self.click(e, self);\n                    return self.focus(self._clickPos(x, y));\n                }\n            } else {\n                return self.blur();\n            }\n        },\n\n        /**\n         * Fired with the mousemove event to update the default cursor.\n         * @param  {Event}       e    The mousemove event.\n         * @param  {CanvasInput} self\n         * @return {CanvasInput}\n         */\n        mousemove: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            if (isOver && self._canvas) {\n                self._canvas.style.cursor = 'text';\n                self._wasOver = true;\n            } else if (self._wasOver && self._canvas) {\n                self._canvas.style.cursor = 'default';\n                self._wasOver = false;\n            }\n\n            if (self._hasFocus && self._selectionStart >= 0) {\n                var curPos = self._clickPos(x, y),\n                    start = Math.min(self._selectionStart, curPos),\n                    end = Math.max(self._selectionStart, curPos);\n\n                if (!isOver) {\n                    self._selectionUpdated = true;\n                    self._endSelection = true;\n                    delete self._selectionStart;\n                    self.render();\n                    return;\n                }\n\n                if (self._selection[0] !== start || self._selection[1] !== end) {\n                    self._selection = [start, end];\n                    self.render();\n                }\n            }\n        },\n\n        /**\n         * Fired with the mousedown event to start a selection drag.\n         * @param  {Event} e    The mousedown event.\n         * @param  {CanvasInput} self\n         */\n        mousedown: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y,\n                isOver = self._overInput(x, y);\n\n            // setup the 'click' event\n            self._mouseDown = isOver;\n\n            // start the selection drag if inside the input\n            if (self._hasFocus && isOver) {\n                self._selectionStart = self._clickPos(x, y);\n            }\n        },\n\n        /**\n         * Fired with the mouseup event to end a selection drag.\n         * @param  {Event} e    The mouseup event.\n         * @param  {CanvasInput} self\n         */\n        mouseup: function(e, self) {\n            var mouse = self._mousePos(e),\n                x = mouse.x,\n                y = mouse.y;\n\n            // update selection if a drag has happened\n            var isSelection = self._clickPos(x, y) !== self._selectionStart;\n            if (self._hasFocus && self._selectionStart >= 0 && self._overInput(x, y) && isSelection) {\n                self._selectionUpdated = true;\n                delete self._selectionStart;\n                self.render();\n            } else {\n                delete self._selectionStart;\n            }\n\n            self.click(e, self);\n        },\n\n        /**\n         * Helper method to get the off-DOM canvas.\n         * @return {Object} Reference to the canvas.\n         */\n        renderCanvas: function() {\n            return this._renderCanvas;\n        },\n\n        /**\n         * Helper method to remove all event listeners, stop the blinking cursor and\n         * reset the cursor style.\n         */\n        cleanup: function() {\n            this._canvas.removeEventListener(\"mouseup\", this.mouseupCanvasListener, false);\n            this._canvas.removeEventListener(\"mousedown\", this.mousedownCanvasListener, false);\n            this._canvas.removeEventListener(\"mousemove\", this.mousemoveCanvasListener, false);\n            window.removeEventListener(\"keydown\", this.keydownWindowListener, false);\n            window.removeEventListener(\"keyup\", this.keyupWindowListener, false);\n            window.removeEventListener(\"mouseup\", this.mouseupWindowListener, true);\n            window.removeEventListener(\"paste\", this.pasteWindowListener, false);\n            clearInterval(this._cursorInterval);\n\n            this._canvas.style.cursor = 'default';\n            for (var i = (inputs.length- 1); i >= 0 ; i--) {\n                if (inputs[i] === this) {\n                    inputs.splice(i, 1);\n                }\n            }\n        },\n\n        /**\n         * Clears and redraws the CanvasInput on an off-DOM canvas,\n         * and if a main canvas is provided, draws it all onto that.\n         * @return {CanvasInput}\n         */\n        render: function() {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // clear the canvas\n            ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n            // setup the box shadow\n            ctx.shadowOffsetX = self._boxShadow.x;\n            ctx.shadowOffsetY = self._boxShadow.y;\n            ctx.shadowBlur = self._boxShadow.blur;\n            ctx.shadowColor = self._boxShadow.color;\n\n            // draw the border\n            if (self._borderWidth > 0) {\n                ctx.fillStyle = self._borderColor;\n                self._roundedRect(ctx, self.shadowL, self.shadowT, w - sw, h - sh, br);\n                ctx.fill();\n\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n            }\n\n            // draw the text box background\n            self._drawTextBox(function() {\n                // make sure all shadows are reset\n                ctx.shadowOffsetX = 0;\n                ctx.shadowOffsetY = 0;\n                ctx.shadowBlur = 0;\n\n                // clip the text so that it fits within the box\n                var text = self._clipText();\n\n                // draw the selection\n                var paddingBorder = self._padding + self._borderWidth + self.shadowT;\n                if (self._selection[1] > 0) {\n                    var selectOffset = self._textWidth(text.substring(0, self._selection[0])),\n                        selectWidth = self._textWidth(text.substring(self._selection[0], self._selection[1]));\n\n                    ctx.fillStyle = self._selectionColor;\n                    ctx.fillRect(paddingBorder + selectOffset, paddingBorder, selectWidth, self._height);\n                }\n\n                // draw the cursor\n                ctx.fillStyle = (self._placeHolder === self._value && self._value !== '') ? self._placeHolderColor : self._fontColor;\n                if (self._cursor) {\n                    var cursorOffset = self._textWidth(text.substring(0, self._cursorPos));\n\n                    ctx.fillRect(paddingBorder + cursorOffset, paddingBorder, 1, self._height);\n                }\n\n                // draw the text\n                var textX = self._padding + self._borderWidth + self.shadowL,\n                    textY = Math.round(paddingBorder + self._height / 2);\n\n                ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n                ctx.textAlign = 'left';\n                ctx.textBaseline = 'middle';\n                ctx.fillText(text, textX, textY);\n\n                // parse inner shadow\n                var innerShadow = self._innerShadow.split('px '),\n                    isOffsetX = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[0], 10),\n                    isOffsetY = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[1], 10),\n                    isBlur = self._innerShadow === 'none' ? 0 : parseInt(innerShadow[2], 10),\n                    isColor = self._innerShadow === 'none' ? '' : innerShadow[3];\n\n                // draw the inner-shadow (damn you canvas, this should be easier than this...)\n                if (isBlur > 0) {\n                    var shadowCtx = self._shadowCtx,\n                        scw = shadowCtx.canvas.width,\n                        sch = shadowCtx.canvas.height;\n\n                    shadowCtx.clearRect(0, 0, scw, sch);\n                    shadowCtx.shadowBlur = isBlur;\n                    shadowCtx.shadowColor = isColor;\n\n                    // top shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, -100, 3 * w, 100);\n\n                    // right shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(scw, -1 * h, 100, 3 * h);\n\n                    // bottom shadow\n                    shadowCtx.shadowOffsetX = 0;\n                    shadowCtx.shadowOffsetY = isOffsetY;\n                    shadowCtx.fillRect(-1 * w, sch, 3 * w, 100);\n\n                    // left shadow\n                    shadowCtx.shadowOffsetX = isOffsetX;\n                    shadowCtx.shadowOffsetY = 0;\n                    shadowCtx.fillRect(-100, -1 * h, 100, 3 * h);\n\n                    // create a clipping mask on the main canvas\n                    self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                    ctx.clip();\n\n                    // draw the inner-shadow from the off-DOM canvas\n                    ctx.drawImage(self._shadowCanvas, 0, 0, scw, sch, bw + self.shadowL, bw + self.shadowT, scw, sch);\n                }\n\n                // draw to the visible canvas\n                if (self._ctx) {\n                    self._ctx.clearRect(self._x, self._y, ctx.canvas.width, ctx.canvas.height);\n                    self._ctx.drawImage(self._renderCanvas, self._x, self._y);\n                }\n\n                return self;\n\n            });\n        },\n\n        /**\n         * Draw the text box area with either an image or background color.\n         * @param  {Function} fn Callback.\n         */\n        _drawTextBox: function(fn) {\n            var self = this,\n                ctx = self._renderCtx,\n                w = self.outerW,\n                h = self.outerH,\n                br = self._borderRadius,\n                bw = self._borderWidth,\n                sw = self.shadowW,\n                sh = self.shadowH;\n\n            // only draw the background shape if no image is being used\n            if (self._backgroundImage === '') {\n                ctx.fillStyle = self._backgroundColor;\n                self._roundedRect(ctx, bw + self.shadowL, bw + self.shadowT, w - bw * 2 - sw, h - bw * 2 - sh, br);\n                ctx.fill();\n\n                fn();\n            } else {\n                var img = new Image();\n                img.src = self._backgroundImage;\n                img.onload = function() {\n                    ctx.drawImage(img, 0, 0, img.width, img.height, bw + self.shadowL, bw + self.shadowT, w, h);\n\n                    fn();\n                };\n            }\n        },\n\n        /**\n         * Deletes selected text in selection range and repositions cursor.\n         * @return {Boolean} true if text removed.\n         */\n        _clearSelection: function() {\n            var self = this;\n\n            if (self._selection[1] > 0) {\n                // clear the selected contents\n                var start = self._selection[0],\n                    end = self._selection[1];\n\n                self._value = self._value.substr(0, start) + self._value.substr(end);\n                self._cursorPos = start;\n                self._cursorPos = (self._cursorPos < 0) ? 0 : self._cursorPos;\n                self._selection = [0, 0];\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Clip the text string to only return what fits in the visible text box.\n         * @param  {String} value The text to clip.\n         * @return {String} The clipped text.\n         */\n        _clipText: function(value) {\n            var self = this;\n            value = (typeof value === 'undefined') ? self._value : value;\n\n            var textWidth = self._textWidth(value),\n                fillPer = textWidth / (self._width - self._padding),\n                text = fillPer > 1 ? value.substr(-1 * Math.floor(value.length / fillPer)) : value;\n\n            return text + '';\n        },\n\n        /**\n         * Gets the pixel with of passed text.\n         * @param  {String} text The text to measure.\n         * @return {Number}      The measured width.\n         */\n        _textWidth: function(text) {\n            var self = this,\n                ctx = self._renderCtx;\n\n            ctx.font = self._fontStyle + ' ' + self._fontWeight + ' ' + self._fontSize + 'px ' + self._fontFamily;\n            ctx.textAlign = 'left';\n\n            return ctx.measureText(text).width;\n        },\n\n        /**\n         * Recalculate the outer with and height of the text box.\n         */\n        _calcWH: function() {\n            var self = this;\n\n            // calculate the full width and height with padding, borders and shadows\n            self.outerW = self._width + self._padding * 2 + self._borderWidth * 2 + self.shadowW;\n            self.outerH = self._height + self._padding * 2 + self._borderWidth * 2 + self.shadowH;\n        },\n\n        /**\n         * Update the width and height of the off-DOM canvas when attributes are changed.\n         */\n        _updateCanvasWH: function() {\n            var self = this,\n                oldW = self._renderCanvas.width,\n                oldH = self._renderCanvas.height;\n\n            // update off-DOM canvas\n            self._renderCanvas.setAttribute('width', self.outerW);\n            self._renderCanvas.setAttribute('height', self.outerH);\n            self._shadowCanvas.setAttribute('width', self._width + self._padding * 2);\n            self._shadowCanvas.setAttribute('height', self._height + self._padding * 2);\n\n            // clear the main canvas\n            if (self._ctx) {\n                self._ctx.clearRect(self._x, self._y, oldW, oldH);\n            }\n        },\n\n        /**\n         * Creates the path for a rectangle with rounded corners.\n         * Must call ctx.fill() after calling this to draw the rectangle.\n         * @param  {Object} ctx Canvas context.\n         * @param  {Number} x   x-coordinate to draw from.\n         * @param  {Number} y   y-coordinate to draw from.\n         * @param  {Number} w   Width of rectangle.\n         * @param  {Number} h   Height of rectangle.\n         * @param  {Number} r   Border radius.\n         */\n        _roundedRect: function(ctx, x, y, w, h, r) {\n            if (w < 2 * r) r = w / 2;\n            if (h < 2 * r) r = h / 2;\n\n            ctx.beginPath();\n\n            ctx.moveTo(x + r, y);\n            ctx.lineTo(x + w - r, y);\n            ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n            ctx.lineTo(x + w, y + h - r);\n            ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n            ctx.lineTo(x + r, y + h);\n            ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n            ctx.lineTo(x, y + r);\n            ctx.quadraticCurveTo(x, y, x + r, y);\n\n            ctx.closePath();\n        },\n\n        /**\n         * Checks if a coordinate point is over the input box.\n         * @param  {Number} x x-coordinate position.\n         * @param  {Number} y y-coordinate position.\n         * @return {Boolean}   True if it is over the input box.\n         */\n        _overInput: function(x, y) {\n            var self = this,\n                xLeft = x >= self._x + self._extraX,\n                xRight = x <= self._x + self._extraX + self._width + self._padding * 2,\n                yTop = y >= self._y + self._extraY,\n                yBottom = y <= self._y + self._extraY + self._height + self._padding * 2;\n\n            return xLeft && xRight && yTop && yBottom;\n        },\n\n        /**\n         * Use the mouse's x & y coordinates to determine\n         * the position clicked in the text.\n         * @param  {Number} x X-coordinate.\n         * @param  {Number} y Y-coordinate.\n         * @return {Number}   Cursor position.\n         */\n        _clickPos: function(x, y) {\n            var self = this,\n                value = self._value;\n\n            // don't count placeholder text in this\n            if (self._value === self._placeHolder) {\n                value = '';\n            }\n\n            // determine where the click was made along the string\n            var text = self._clipText(value),\n                totalW = 0,\n                pos = text.length;\n\n            if (x - (self._x + self._extraX) < self._textWidth(text)) {\n                // loop through each character to identify the position\n                for (var i = 0; i < text.length; i++) {\n                    totalW += self._textWidth(text[i]);\n                    if (totalW >= x - (self._x + self._extraX)) {\n                        pos = i;\n                        break;\n                    }\n                }\n            }\n\n            return pos;\n        },\n\n        /**\n         * Calculate the mouse position based on the event callback and the elements on the page.\n         * @param  {Event} e\n         * @return {Object}   x & y values\n         */\n        _mousePos: function(e) {\n            var elm = e.target,\n                style = document.defaultView.getComputedStyle(elm, undefined),\n                paddingLeft = parseInt(style['paddingLeft'], 10) || 0,\n                paddingTop = parseInt(style['paddingLeft'], 10) || 0,\n                borderLeft = parseInt(style['borderLeftWidth'], 10) || 0,\n                borderTop = parseInt(style['borderLeftWidth'], 10) || 0,\n                htmlTop = document.body.parentNode.offsetTop || 0,\n                htmlLeft = document.body.parentNode.offsetLeft || 0,\n                offsetX = 0,\n                offsetY = 0,\n                x, y;\n\n            // calculate the total offset\n            if (typeof elm.offsetParent !== 'undefined') {\n                do {\n                    offsetX += elm.offsetLeft;\n                    offsetY += elm.offsetTop;\n                } while ((elm = elm.offsetParent));\n            }\n\n            // take into account borders and padding\n            offsetX += paddingLeft + borderLeft + htmlLeft;\n            offsetY += paddingTop + borderTop + htmlTop;\n\n            return {\n                x: e.pageX - offsetX,\n                y: e.pageY - offsetY\n            };\n        },\n\n        /**\n         * Translate a keycode into the correct keyboard character.\n         * @param  {Boolean} isShift True if the shift key is being pressed.\n         * @param  {Number}  keyCode The character code.\n         * @return {String}          The translated character.\n         */\n        _mapCodeToKey: function(isShift, keyCode) {\n            var self = this,\n                blockedKeys = [8, 9, 13, 16, 17, 18, 20, 27, 91, 92],\n                key = '';\n\n            // block keys that we don't want to type\n            for (var i = 0; i < blockedKeys.length; i++) {\n                if (keyCode === blockedKeys[i]) {\n                    return;\n                }\n            }\n\n            // make sure we are getting the correct input\n            if (typeof isShift !== 'boolean' || typeof keyCode !== 'number') {\n                return;\n            }\n\n            var charMap = {\n                32: ' ',\n                48: ')',\n                49: '!',\n                50: '@',\n                51: '#',\n                52: '$',\n                53: '%',\n                54: '^',\n                55: '&',\n                56: '*',\n                57: '(',\n                59: ':',\n                107: '+',\n                173: '_', // firefox uses 173 instead of 189\n                189: '_',\n                186: ':',\n                187: '+',\n                188: '<',\n                190: '>',\n                191: '?',\n                192: '~',\n                219: '{',\n                220: '|',\n                221: '}',\n                222: '\"'\n            };\n\n            // convert the code to a character\n            if (isShift) {\n                key = (keyCode >= 65 && keyCode <= 90) ? String.fromCharCode(keyCode) : charMap[keyCode];\n            } else {\n                if (keyCode >= 65 && keyCode <= 90) {\n                    key = String.fromCharCode(keyCode).toLowerCase();\n                } else {\n                    if (keyCode === 96) {\n                        key = '0';\n                    } else if (keyCode === 97) {\n                        key = '1';\n                    } else if (keyCode === 98) {\n                        key = '2';\n                    } else if (keyCode === 99) {\n                        key = '3';\n                    } else if (keyCode === 100) {\n                        key = '4';\n                    } else if (keyCode === 101) {\n                        key = '5';\n                    } else if (keyCode === 102) {\n                        key = '6';\n                    } else if (keyCode === 103) {\n                        key = '7';\n                    } else if (keyCode === 104) {\n                        key = '8';\n                    } else if (keyCode === 105) {\n                        key = '9';\n                    } else if (keyCode === 188) {\n                        key = ',';\n                    } else if (keyCode === 190) {\n                        key = '.';\n                    } else if (keyCode === 191) {\n                        key = '/';\n                    } else if (keyCode === 192) {\n                        key = '`';\n                    } else if (keyCode === 220) {\n                        key = '\\\\';\n                    } else if (keyCode === 187) {\n                        key = '=';\n                    } else if ((keyCode === 189)  || (keyCode === 173)) {\n                        // firefox maps the minus key to 173, rather\n                        // then trying to use browser detection we\n                        // simply accept 173 as well...which means that\n                        // for Chrome using the mute button would\n                        // cause minus sign to appear\n                        key = '-';\n                    } else if (keyCode === 222) {\n                        key = '\\'';\n                    } else if (keyCode === 186) {\n                        key = ';';\n                    } else if (keyCode === 219) {\n                        key = '[';\n                    } else if (keyCode === 221) {\n                        key = ']';\n                    } else {\n                        key = String.fromCharCode(keyCode);\n                    }\n                }\n            }\n\n            return key;\n        }\n    };\n\n    module.exports = CanvasInput;\n})();\n", "/* global module */\n/* global require */\n\n(function() {\n    var common = require(\"./common\");\n\n   var DomMenu = function(Mx, menu, options) {\n        this.options = {\n            itemClass: \"sigplot-menu-item\"\n        };\n        common.update(this.options, options);\n        this._Mx = Mx;\n        this._container = Mx.root;\n        this._menu = document.createElement(\"div\");\n        var style = \"z-index:2;float:left;position:relative;left:\" + Mx.xpos + \"px;top:\" + Mx.ypos + \"px;\";\n        this._menu.classList.add(\"sigplot-menu\");\n        var d = new Date();\n        this._menuId = \"menu-\" + d.getSeconds() + d.getMilliseconds();\n        this._menu.classList.add(this._menuId);\n        this._menu.style = style;\n        this._items = [];\n        this.setCSS();\n        this.createMenu(menu);\n    };\n    DomMenu.prototype = {\n        createMenu: function(menu) {\n            var self = this;\n            var Mx = this._Mx;\n            var originalFinalize = menu.finalize;\n            menu.finalize = function() {\n                self.remove();\n                originalFinalize();\n            };\n            this.finalize = menu.finalize;\n            var title = document.createElement(\"div\");\n            title.addEventListener(\"mousedown\", function(e) {\n                e.preventDefault();\n                self._movingOffsetX = e.offsetX;\n                self._movingOffsetY = e.offsetY;\n                self._moving = true;\n            });\n            title.addEventListener(\"mouseup\", function(e) {\n                e.preventDefault();\n                self._moving = false;\n            });\n            self._moveMenu = function(e) {\n                if (self._moving) {\n                    self._menu.style.position = 'fixed';\n                    self._menu.style.top = e.clientY - self._movingOffsetY + 'px';\n                    self._menu.style.left = e.clientX - self._movingOffsetX + 'px';\n                }\n            };\n            document.body.addEventListener(\"mousemove\", self._moveMenu);\n            title.classList.add(\"sigplot-menu-title\");\n            title.innerText = menu.title;\n            this._menu.append(title);\n            var list = document.createElement(\"ul\");\n            list.classList.add(\"sigplot-menu-list\");\n            menu.items.forEach(function(item) {\n                var li = self._createMenuItem(item, menu);\n                list.append(li);\n            });\n            this._menu.append(list);\n            this._container.append(this._menu);\n            this._menu.addEventListener(\"contextmenu\", function(e) {\n                e.preventDefault();\n                self.finalize();\n            });\n            Mx.menu = this;\n            Mx.widget = {\n                type: \"MENU\",\n                callback: function(event) {\n                    if (event.type === \"mousedown\") {\n                        if (event.which === 1 || event.which === 2 || event.which === 3) {\n                            if ((self._Mx.menu === self) && (!event.target.classList.contains(self.options.itemClass))) {\n                                self.finalize();\n                            }\n                            if (!self._Mx.menu) {\n                                self.finalize();\n                            }\n                        }\n                    }\n                    if (event.type === \"mouseup\") {\n                        self._moving = false;\n                    }\n                    if (event.type === \"keydown\") {\n                        self._handleKeyEvents(event);\n                    }\n                }\n            };\n        },\n        _handleKeyEvents: function(event) {\n            var self = this;\n            if (event.key === \"ArrowDown\") {\n                event.preventDefault();\n                if (!self._active) {\n                    self._setActive(self._items[0]);\n                } else {\n                    var target = self._items.indexOf(self._active) + 1;\n\n                    if (target > self._items.length - 1) {\n                        return; //Last item in the list keep it active\n                    }\n                    self._setActive(self._items[target]);\n                }\n            }\n            if (event.key === \"ArrowUp\") {\n                event.preventDefault();\n                if (!self._active) {\n                    self._setActive(self._items[0]);\n                } else {\n                    var target = self._items.indexOf(self._active) - 1;\n                    if (target < 0) {\n                        return; // First item in the list keep it active\n                    }\n                    self._setActive(self._items[target]);\n                }\n            }\n\n            if (event.key === \"Enter\") {\n                event.preventDefault();\n                if (!self._active) {\n                    self._setActive(self._items[0]);\n                }\n\n                var el = self._active;\n                if (el.onclick) {\n                    el.onclick();\n                } else if (el.click) {\n                    el.click();\n                }\n            }\n        },\n        _setActive: function(li) {\n            if (this._active) {\n                this._clearActive();\n            }\n            this._active = li;\n            li.classList.add('active');\n        },\n        _clearActive: function() {\n            this._active.classList.remove('active');\n            this._active = null;\n        },\n        _createMenuItem: function(item, menu) {\n            var self = this;\n            var Mx = this._Mx;\n            var li = document.createElement(\"li\");\n            li.className += \" \" + self.options.itemClass;\n            li.innerText = item.text;\n            if (item.style) {\n                li.className += \" \" + item.style;\n            }\n            if (item.hasOwnProperty(\"checked\")) {\n                li.className += \" sigplot-menu-checkbox\";\n                if (item.checked) {\n                    li.className += \" checked\";\n                }\n            }\n            li.addEventListener(\"click\", function() {\n                self.remove();\n                Mx.menu = undefined;\n                Mx.widget = null;\n                if (item.handler) {\n                    item.handler();\n                } else if (item.menu) {\n                    var newmenu = item.menu;\n                    if (typeof item.menu === 'function') {\n                        newmenu = item.menu();\n                    }\n                    newmenu.finalize = menu.finalize;\n                    new DomMenu(Mx, newmenu);\n                }\n\n                if ((!Mx.menu) && (menu.finalize)) {\n                    menu.finalize();\n                }\n            });\n            li.addEventListener(\"mouseenter\", function(e) {\n                self._setActive(e.target);\n            });\n            li.addEventListener(\"mouseleave\", function(e) {\n                self._clearActive();\n            });\n            self._items.push(li);\n            return li;\n        },\n        remove: function() {\n\n            var Mx = this._Mx;\n            Mx.menu = undefined;\n            Mx.widget = null;\n            this._menu.remove();\n            document.body.removeEventListener(\"mousemove\", this._moveMenu);\n        },\n        setCSS: function() {\n            var Mx = this._Mx;\n            var cssId = \"mx-menu-css\"; // id so we can always replace the css if we want to update this with mx.setTheme..\n            var style = document.createElement('style');\n            var textContent;\n            style.id = cssId;\n            //This really sucks...... and I hate it. -Sean\n            /* jshint ignore:start */\n            textContent = \"\" +\n                \".\" + this._menuId + \"{\\n\" +\n                \"background-color: \" + Mx.xwbg + \";\\n\" +\n                \"font: \" + Mx.font.font + \";\\n\" +\n                \"color:\" + Mx.xwfg + \"\\n\" +\n                \"}   \\n\" +\n                \".sigplot-menu-list {\\n\" +\n                \"    margin: 0px;\\n\" +\n                \"    list-style: none;\\n\" +\n                \"    padding: 0px;\\n\" +\n                \"}\\n\" +\n                \".\" + this._menuId + \">div {\\n\" +\n                \"    cursor: move;\\n\" +\n                \"    text-align: center;\\n\" +\n                \"    border-bottom: 2px solid \" + Mx.xwts + \";\\n\" +\n                \"}\\n\" +\n                \".\" + this._menuId + \">ul>li{\\n\" +\n                \"    border-top: 2px solid \" + Mx.bg + \";\\n\" +\n                \"    background-color: \" + Mx.xwlo + \";\\n\" +\n                \"    padding: 1px;\\n\" +\n                \"    padding-right: 5px;\\n\" +\n                \"    padding-left: 5px;\\n\" +\n                \"    cursor:default;\\n\" +\n                \"}\\n\" +\n                \".\" + this._menuId + \">ul>li.active{\\n\" +\n                \"    background-color: \" + Mx.hi + \";\\n\" +\n                \"}\\n\" +\n                \".\" + this._menuId + \" {\\n\" +\n                \"    position: relative;\\n\" +\n                \"    color: white;\\n\" +\n                \"    float: left;\\n\" +\n                \"    border-radius: 5px;\\n\" +\n                \"    padding: 3px;\\n\" +\n                \"    font: \" + Mx.font.font + \";\\n\" +\n                \"    color:\" + Mx.xwfg + \"\\n\" +\n                \"}\\n\" +\n                \".\" + this._menuId + \">ul>li.separator {\\n\" +\n                \"    background-color: \" + Mx.xwbs + \";\\n\" +\n                \"}\\n\" +\n                \".sigplot-menu-checkbox:before{\\n\" +\n                \"    margin-right: 3px; \\n\" +\n                \"}\\n\" +\n                \".sigplot-menu-checkbox.checked:before {\\n\" +\n                \"    content: '\\\\25b8';\\n\" +\n                \"    width: 2px;\\n\" +\n                \"    height: 3px;\\n\" +\n                \"}\\n\" +\n                \".sigplot-menu-checkbox.checkbox:before {\\n\" +\n                \"    content: '\\\\25A1';\\n\" +\n                \"    width: 2px;\\n\" +\n                \"    height: 3px;\\n\" +\n                \"}\\n\" +\n                \".sigplot-menu-checkbox.checkbox.checked:before {\\n\" +\n                \"    content: '\\\\25A3';\\n\" +\n                \"    width: 2px;\\n\" +\n                \"    height: 3px;\\n\" +\n                \"}\\n\";\n\n            /* jshint ignore:end */\n            if (!this._container.getElementsByTagName(\"style\").length) {\n                var style = document.createElement('style');\n                style.textContent = textContent;\n                this._container.appendChild(style);\n            } else {\n                var style = this._container.getElementsByTagName(\"style\")[0];\n                style.textContent = textContent;\n            }\n        }\n    };\n\n        module.exports = DomMenu;\n\n}());\n\n", "/**\n * @license\n * File: mx.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true*/\n\n//Uses Immediately-invoked Function Expressions (IIFE)s for namespaces\n//See http://addyosmani.com/blog/essential-js-namespacing/ for details.\n\n/**\n * This namespace includes generic graphical routines and functions\n * the manipulate a canvas.\n *\n * @namespace\n */\n\n/* global module */\n/* global require */\n/* global requestAnimFrame */\n/* global cancelAnimFrame */\n\n(function() {\n\n    var tinycolor = require(\"tinycolor2\");\n    var ColorMap = require(\"./ColorMap\");\n    var common = require(\"./common\");\n    var CanvasInput = require(\"./CanvasInput\");\n    var m = require(\"./m\");\n\n    function mx() {}\n\n    mx.DomMenu = require(\"./mx.dommenu\");\n    mx.XW_INIT = -3;\n    mx.XW_DRAW = 1;\n    mx.XW_EVENT = 2;\n    mx.XW_UPDATE = 3;\n    mx.XW_COMMAND = 5;\n    mx.SB_EXPAND = 1;\n    mx.SB_SHRINK = 2;\n    mx.SB_FULL = 3;\n    mx.SB_STEPINC = 4;\n    mx.SB_STEPDEC = 5;\n    mx.SB_PAGEINC = 6;\n    mx.SB_PAGEDEC = 7;\n    mx.SB_DRAG = 8;\n    mx.SB_WHEELUP = 9;\n    mx.SB_WHEELDOWN = 10;\n\n    // Grayscale colors:\n    // \"15%,15%,10%\" - very dark gray\n    // \"25%,25%,20%\" - dark gray\n    // \"35%,35%,30%\" - medium gray\n    // \"40%,40%,35%\" - light medium gray\n    // \"60%,60%,55%\" - light gray\n    // \"70%,70%,65%\" - very light gray\n    // \"80%,80%,75%\" - very very light gray\n\n    mx.L_ArrowLeft = 1001;\n    mx.L_ArrowRight = 1002;\n    mx.L_ArrowUp = 1003;\n    mx.L_ArrowDown = 1004;\n    mx.L_dashed = 801;\n    mx.GBorder = 3; // TODO Is this a good original value to use...?\n    mx.L_RModeOff = 900;\n    mx.L_RModeOn = 901;\n    mx.L_PixelSymbol = 1;\n    mx.L_CircleSymbol = 2;\n    mx.L_SquareSymbol = 3;\n    mx.L_PlusSymbol = 4;\n    mx.L_XSymbol = 5;\n    mx.L_TriangleSymbol = 6;\n    mx.L_ITriangleSymbol = 7;\n    mx.L_HLineSymbol = 8;\n    mx.L_VLineSymbol = 9;\n\n    /**\n     * Set to True for a retro look that would make hipsters proud\n     */\n    mx.LEGACY_RENDER = false;\n\n    /**\n     * Set to True to enable legacy behaviors for people with strong muscle memory\n     */\n    mx.LEGACY_BEHAVIOR = false;\n\n    /**\n     * The zoom stack structure object\n     * @private\n     */\n    mx.STKSTRUCT = function() {\n        this.xmin = 0.0; // real world val at x1(origin=1,4) or x2(origin=2,4)\n        this.xmax = 0.0; // real world val at x2(origin=1,4) or x1(origin=2,4)\n        this.ymin = 0.0; // real world val at y2(origin=1,2) or y1(origin=3,4)\n        this.ymax = 0.0; // real world val at y1(origin=1,2) or y2(origin=3,4)\n        this.xscl = 0.0; // ratio of X real world units to pixel units\n        this.yscl = 0.0; // ratio of Y real world units to pixel units\n        this.x1 = 0; // left edge relative to window (pixels)\n        this.y1 = 0; // top edge relative to window (pixels)\n        this.x2 = 0; // right edge relative to window (pixels)\n        this.y2 = 0; // bottom edge relative to window (pixels)\n    };\n\n    /**\n     * The scrollbar structure object used to hold state about scrolling\n     * @private\n     */\n    mx.SCROLLBAR = function() {\n        this.flag = null; // int_4 // flag field for MX$SCROLLBAR routine\n        this.action = null; // int_4 // returned action performed (XW_EVENT)\n        this.smin = null;\n        this.srange = null; // real_8 // real_8 // min and range values of scroll\n        // bar\n        this.tmin = null;\n        this.trange = null; // real_8 // real_8 // min and range values of trough\n        this.step = null; // real_8 // ratios of smin to move for step\n        this.page = null; // real_8 // ratios of smin to move for page\n        this.scale = null; // real_8 // ratio to scale by for expand/shrink\n        this.dragoutline = null; // bool_4 // FALSE = smooth scroll, TRUE = drag &\n        // drop\n        this.initial_pause = null; // real_4\n        this.repeat_pause = null; // real_4\n\n        this.x = null;\n        this.y = null;\n        this.w = null;\n        this.h = null; // int_2 // These fields are private and are to be\n        this.s1 = null;\n        this.sw = null;\n        this.swmin = null;\n        this.soff = null; // int_2 // set through other interfaces\n        this.a1 = null;\n        this.a2 = null;\n        this.arrow = null; // int_2\n        this.mxevent = null; // bool_1\n        this.origin = null; // int_1\n        this.repeat_count = null; // int_4\n    };\n\n    /**\n     * @method WARPBOX\n     * @private\n     */\n    function WARPBOX() {\n        this.xo = 0;\n        this.yo = 0;\n        this.xl = 0;\n        this.yl = 0;\n        this.xmin = 0;\n        this.xmax = 0;\n        this.ymin = 0;\n        this.ymax = 0;\n        this.func = undefined;\n        this.mode = undefined;\n    }\n\n    /**\n     * Defines 2 canvas layers, canvas and wid_canvas\n     * @method MX\n     * @param element\n     * @private\n     */\n    function MX(element) { // this is where the canvases are setup/defined\n        this.root = element;\n\n        // Create a div to hold all the various canvas layers\n        this.parent = document.createElement('div');\n        this.parent.style.position = \"relative\";\n        //this.parent.style.height = \"100%\"; //element.clientHeight;\n        //this.parent.style.width = \"100%\"; //element.clientHeight;\n        //this.parent.clientWidth = element.clientWidth;\n        this.parent.width = element.clientWidth;\n        this.parent.height = element.clientHeight;\n        element.appendChild(this.parent);\n\n        // Create the canvas that will hold the plot\n        this.canvas = document.createElement('canvas');\n        this.canvas.style.position = \"absolute\";\n        this.canvas.style.top = \"0px\";\n        this.canvas.style.left = \"0px\";\n        this.canvas.width = element.clientWidth;\n        this.canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.canvas);\n        this.active_canvas = this.canvas;\n\n        // This canvas holds all widgets and reacts to mouse events\n        this.wid_canvas = document.createElement('canvas');\n        this.wid_canvas.style.position = \"absolute\";\n        this.wid_canvas.style.top = \"0px\";\n        this.wid_canvas.style.left = \"0px\";\n        this.wid_canvas.style.zIndex = 1;\n        this.wid_canvas.width = element.clientWidth;\n        this.wid_canvas.height = element.clientHeight;\n\n        this.parent.appendChild(this.wid_canvas);\n\n        //if ((this.canvas.height <= 0) || (this.canvas.width <= 0)) {\n        //\tthrow \"Plot could not be instantiated correctly; did you specify a size for your placeholder?\";\n        //}\n\n        this.font = undefined; // the full calculated font string\n        this.font_family = \"Courier New, monospace\"; // default font family\n        this.font_width = 8;\n        this.font_scaled = false;\n        this.text_w = 0; // text width\n        this.text_h = 0; // text height\n        this.level = 0; // current zoom level\n        this.width = this.parent.width; // width of window\n        this.height = this.parent.height; // height of window\n        this.xpos = 0; // x-pixel loc of mouse during event\n        this.ypos = 0; // y-pixel loc of mouse during event\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.origin = 1;\n        this.stk = [new mx.STKSTRUCT()]; // zoom stack\n        this.mouseOver = false;\n\n        mx.setbgfg(this, \"black\", \"white\");\n\n        // Custom stuff for the Javascript implementation\n        this.event_cb = undefined;\n        this.warpbox = undefined;\n\n        // draw_mode flags;\n        this.rmode = false;\n        this.linewidth = 1;\n        this.style = undefined;\n        this.xi = false;\n\n        // Button Eventing variables\n        this.button_release = 0;\n        this.button_press = 0;\n        this.state_mask = 0;\n\n        // Specifies display field\n        this.l = 0;\n        this.r = this.width;\n        this.t = 0;\n        this.b = this.height;\n\n        // Scrollbar state\n        this.scrollbar_x = new mx.SCROLLBAR();\n        this.scrollbar_y = new mx.SCROLLBAR();\n\n        // Prompt mode state variable\n        this.prompt = undefined;\n\n        // Colormap\n        this.pixel = undefined;\n\n        // Render Canvas\n        this._renderCanvas = document.createElement(\"canvas\");\n        // Syncronous render should only be used for testing\n        this._syncRender = false;\n    }\n\n    /* This is used as a helper function for defining highlight ranges/\n     */\n\n    function in_fill_range(ele, range_begin, range_end) {\n        var left = false;\n        var right = false;\n\n        if (ele >= range_begin) {\n            left = true;\n        }\n\n\n        if (ele <= range_end) {\n            right = true;\n        }\n\n        if (left === true && right === true) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Create Canvas and it's Mx structure and functions\n     * @param {element}\telement \tReference to a DOM window element\n     */\n    /* Step #5*/\n    mx.open = function(element) {\n        var Mx = new MX(element); /* Step #6*/\n\n        Mx.wid_canvas.oncontextmenu = function(event) {\n            event.preventDefault();\n            return false;\n        };\n\n        this._ctx = Mx.active_canvas.getContext(\"2d\");\n\n        Mx.onmousemove = (function(Mx) {\n            return function(e) {\n                var rect = e.target.getBoundingClientRect();\n                // Screen x/y of mouse\n                Mx.x = e.x || e.clientX;\n                Mx.y = e.y || e.clientY;\n                // Plot relative x/y of mouse\n                Mx.xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                Mx.ypos = (e.offsetY === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                //\t\t\t\tMx.xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                //\t\t\t\tMx.ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n\n                if (Mx.warpbox) {\n                    if ((e.ctrlKey || e.metaKey) && (Mx.warpbox.alt_style !== undefined)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                    } else {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                    }\n                    mx.redraw_warpbox(Mx);\n                }\n\n                mx.widget_callback(Mx, e);\n            };\n        })(Mx);\n\n        Mx.onmouseup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    mx.onWidgetLayer(Mx, function() {\n                        mx.erase_window(Mx);\n                    });\n\n                    var old_warpbox = Mx.warpbox;\n                    Mx.warpbox = undefined;\n\n                    if (event.which === 1 || event.which === 3) {\n                        if (old_warpbox.func) {\n                            var xo = old_warpbox.xo;\n                            var yo = old_warpbox.yo;\n                            var xl = old_warpbox.xl;\n                            var yl = old_warpbox.yl;\n\n                            if (old_warpbox.mode === \"vertical\") {\n                                xo = Mx.l;\n                                xl = Mx.r;\n                            } else if (old_warpbox.mode === \"horizontal\") {\n                                yo = Mx.t;\n                                yl = Mx.b;\n                            } // else \"box\"\n                            old_warpbox.func(event, xo, yo, xl, yl,\n                                old_warpbox.style.return_value,\n                                old_warpbox.mode);\n                        }\n                    }\n\n                }\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onmousedown = (function(Mx) {\n            return function(event) {\n                event.preventDefault();\n                mx.widget_callback(Mx, event);\n                return false;\n            };\n        })(Mx);\n\n        Mx.onmouseover = (function(Mx) {\n            return function(event) {\n                Mx.mouseOver = true;\n                return false;\n            };\n        })(Mx);\n\n        Mx.onmouseleave = (function(Mx) {\n            return function(event) {\n                Mx.mouseOver = false;\n                return false;\n            };\n        })(Mx);\n\n        Mx.onkeydown = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.alt_style)) {\n                        Mx.warpbox.style = Mx.warpbox.alt_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n\n                mx.widget_callback(Mx, event);\n            };\n        })(Mx);\n\n        Mx.onkeyup = (function(Mx) {\n            return function(event) {\n                if (Mx.warpbox) {\n                    var keyCode = common.getKeyCode(event);\n                    if (((keyCode === 17) || // Ctrl\n                            (keyCode === 224) || // Mac Command Firefox\n                            (keyCode === 91) || // Safari/Chrome Left-command\n                            (keyCode === 93)) && // Safari/Chrome Right-command\n                        (Mx.warpbox.style !== Mx.warpbox.def_style)) {\n                        Mx.warpbox.style = Mx.warpbox.def_style;\n                        mx.redraw_warpbox(Mx);\n                    }\n                }\n            };\n        })(Mx);\n\n        Mx.ontouchend = (function(Mx) {\n            return function(event) {\n                Mx.onmouseup({\n                    which: 1\n                });\n            };\n        })(Mx);\n\n        Mx.ontouchmove = (function(Mx) {\n            return function(event) {\n                // Compute the total offset - consider caching offset and only calculating on resize\n                var element = Mx.canvas;\n                var offsetX = 0;\n                var offsetY = 0;\n                if (element.offsetParent !== undefined) {\n                    do {\n                        offsetX += element.offsetLeft;\n                        offsetY += element.offsetTop;\n                    } while ((element = element.offsetParent));\n                }\n\n                Mx.xpos = event.targetTouches[0].pageX - offsetX;\n                Mx.ypos = event.targetTouches[0].pageY - offsetY;\n                mx.redraw_warpbox(Mx);\n            };\n        })(Mx);\n\n        mx.enableListeners(Mx);\n\n        return Mx;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.enableListeners = function(Mx) {\n        mx.addEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.addEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        mx.addEventListener(Mx, \"mouseover\", Mx.onmouseover, false);\n        mx.addEventListener(Mx, \"mouseleave\", Mx.onmouseleave, false);\n        window.addEventListener(\"keydown\", Mx.onkeydown, false);\n        window.addEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.disableListeners = function(Mx) {\n        mx.removeEventListener(Mx, \"mousemove\", Mx.onmousemove, false);\n        window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        mx.removeEventListener(Mx, \"mousedown\", Mx.onmousedown, false);\n        mx.removeEventListener(Mx, \"mouseover\", Mx.onmouseover, false);\n        mx.removeEventListener(Mx, \"mouseleave\", Mx.onmouseleave, false);\n        window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n        window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n        //mx.addEventListener(Mx, \"touchend\", Mx.ontouchend);\n        //mx.addEventListener(Mx, 'touchmove', Mx.ontouchmove, false);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.addEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.addEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @param callback\n     * @param useCapture\n     * @private\n     */\n    mx.removeEventListener = function(Mx, event, callback, useCapture) {\n        return Mx.wid_canvas.removeEventListener(event, callback, useCapture);\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    mx.dispatchEvent = function(Mx, event) {\n        return Mx.wid_canvas.dispatchEvent(event);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onWidgetLayer = function(Mx, func) {\n        mx.onCanvas(Mx, Mx.wid_canvas, func);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.onCanvas = function(Mx, canvas, func) {\n        var current_active = Mx.active_canvas;\n        Mx.active_canvas = canvas;\n        try {\n            if (func) {\n                return func();\n            }\n        } finally {\n            Mx.active_canvas = current_active;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.withWidgetLayer = function(Mx, func) {\n        var f = function() {\n            mx.onWidgetLayer(Mx, func);\n        };\n        return f;\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @private\n     */\n    mx.render = function(Mx, func) {\n        if (!func) {\n            return;\n        }\n\n        var active_canvas = Mx.active_canvas;\n\n        if (Mx._syncRender === false) {\n            if (!active_canvas._animationFrameHandle) {\n                active_canvas._animationFrameHandle = requestAnimFrame(function() {\n                    active_canvas._animationFrameHandle = undefined;\n                    func();\n                });\n            }\n        } else {\n            func();\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param value\n     * @private\n     */\n    mx.fullscreen = function(Mx, value) {\n        if (value === undefined) {\n            value = !Mx.fullscreen;\n        }\n        if (value) {\n            Mx.fullscreen = {\n                position: Mx.root.style.position,\n                height: Mx.root.style.height,\n                width: Mx.root.style.width,\n                left: Mx.root.style.left,\n                top: Mx.root.style.top,\n                zIndex: Mx.root.style.zIndex\n            };\n            Mx.root.style.position = \"fixed\";\n            Mx.root.style.height = \"100%\";\n            Mx.root.style.width = \"100%\";\n            Mx.root.style.left = \"0px\";\n            Mx.root.style.top = \"0px\";\n            Mx.root.style.zIndex = 16777271; // http://www.puidokas.com/max-z-index/\n        } else {\n            Mx.root.style.position = Mx.fullscreen.position;\n            Mx.root.style.height = Mx.fullscreen.height;\n            Mx.root.style.width = Mx.fullscreen.width;\n            Mx.root.style.left = Mx.fullscreen.left;\n            Mx.root.style.top = Mx.fullscreen.top;\n            Mx.root.style.zIndex = Mx.fullscreen.zIndex;\n            Mx.fullscreen = undefined;\n        }\n        mx.checkresize(Mx);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.checkresize = function(Mx) {\n        var canvas = Mx.canvas;\n        if ((canvas.height !== Mx.root.clientHeight) || (canvas.width !== Mx.root.clientWidth)) {\n\n            Mx.height = Mx.root.clientHeight;\n            Mx.width = Mx.root.clientWidth;\n\n            Mx.canvas.height = Mx.height;\n            Mx.canvas.width = Mx.width;\n            Mx.wid_canvas.height = Mx.height;\n            Mx.wid_canvas.width = Mx.width;\n\n            return true;\n        }\n        return false;\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.invertbgfg = function(Mx) {\n        mx.setbgfg(Mx, Mx.fg, Mx.bg, !Mx.xi);\n    };\n\n    /**\n     * @param color1\n     * @param color2\n     * @param color3\n     * @private\n     */\n    mx.mixcolor = function(color1, color2, perc1to2) {\n        var c1 = tinycolor(color1).toRgb();\n        var c2 = tinycolor(color2).toRgb();\n        var mix = 1.0 - perc1to2;\n        c2.r = c1.r * mix + c2.r * perc1to2;\n        c2.g = c1.g * mix + c2.g * perc1to2;\n        c2.b = c1.b * mix + c2.b * perc1to2;\n        return tinycolor(c2).toHexString(true);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fillStyle\n     * @private\n     */\n    mx.linear_gradient = function(Mx, x, y, w, h, fillStyle) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        var step_size = 1.0 / fillStyle.length;\n        var lingrad = ctx.createLinearGradient(x, y, w, h);\n        for (var i = 0; i < fillStyle.length - 1; i++) {\n            lingrad.addColorStop(step_size * (i), fillStyle[i]);\n        }\n        lingrad.addColorStop(1, fillStyle[fillStyle.length - 1]);\n        return lingrad;\n    };\n\n    /**\n     * Set's the background and foreground\n     * xwfg : usually used for text on a widget\n     * xwbg : background for a widget\n     * @param Mx\n     * @param bg\n     * @param fg\n     * @param xi\n     * @private\n     */\n    mx.setbgfg = function(Mx, bg, fg, xi) {\n        Mx.bg = tinycolor(bg).toHexString();\n        Mx.fg = tinycolor(fg).toHexString();\n        Mx.xi = tinycolor(xi).toHexString();\n\n        if ((tinycolor.equals(Mx.bg, \"black\")) && (tinycolor.equals(Mx.fg, \"white\"))) { ///mmm\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n            Mx.hi = Mx.xwts; //  Highlight color\n        } else if ((tinycolor.equals(Mx.bg, \"white\")) && (tinycolor.equals(Mx.fg, \"black\"))) {\n            Mx.xwfg = Mx.fg; // X-Widget Foreground color\n            Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n            Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n            Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n            Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n            Mx.xwlo = \"rgb(70%,70%,65%)\";\n            Mx.hi = Mx.xwbs; //  Highlight color\n        } else {\n            var clr = tinycolor(Mx.bg).toRgb();\n            var hsp = Math.sqrt( // HSP equation from http://alienryderflex.com/hsp.html\n                0.299 * (clr.r * clr.r) +\n                0.587 * (clr.g * clr.g) +\n                0.114 * (clr.b * clr.b)\n            );\n            if (hsp > 127.5) { // light\n                Mx.xwfg = \"black\";\n                Mx.xwbg = \"rgb(60%,60%,55%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(80%,80%,75%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(40%,40%,35%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(70%,70%,65%)\";\n                Mx.hi = Mx.xwts;\n            } else { // dark\n                Mx.xwfg = \"white\";\n                Mx.xwbg = \"rgb(35%,35%,30%)\"; // X-Widget Background color\n                Mx.xwts = \"rgb(60%,60%,55%)\"; // X-Widget top shadow color\n                Mx.xwbs = \"rgb(25%,25%,20%)\"; // X-Widget bottom shadow color\n                Mx.xwms = mx.mixcolor(Mx.xwts, Mx.xwbs, 0.5); // mid shadow\n                Mx.xwlo = \"rgb(15%,15%,10%)\"; // X-Widget top shadow color\n                Mx.hi = Mx.xwbs;\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param theme\n     * @private\n     */\n    mx.settheme = function(Mx, theme) {\n        Mx.bg = theme.bg;\n        Mx.fg = theme.fg;\n        Mx.xi = theme.xi;\n        Mx.xwfg = theme.xwfg;\n        Mx.xwbg = theme.xwbg;\n        Mx.xwts = theme.xwts;\n        Mx.xwbs = theme.xwbs;\n        Mx.xwlo = theme.xwlo;\n        Mx.hi = theme.hi;\n    };\n\n    /**\n     * Close graphics windows.\n     * @param Mx\n     */\n    mx.close = function(Mx) {\n        var canvas = Mx.wid_canvas;\n        canvas.removeEventListener(\"mousemove\", Mx.onmousemove, false);\n        //canvas.removeEventListener(\"touchmove\", Mx.ontouchmove);\n        canvas.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n        //canvas.addEventListener(\"touchend\", Mx.onmouseup);\n\n        if (Mx.parent && Mx.parent.parentNode) {\n            Mx.parent.parentNode.removeChild(Mx.parent);\n        }\n    };\n\n    /**\n     * Draws and implements a scrollbar\n     * @param Mx\n     * @param sb\n     * @param xs\n     * @param xe\n     * @param ys\n     * @param ye\n     * @param out\n     * @param qs\n     * @param qe\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= MX$SCROLLBAR\n    //\n    mx.scrollbar = function(Mx, sb, xs, xe, ys, ye, out, qs, qe, mouseEvent, scrollbarState) {\n        // Param types:\n        // mx.SCROLLBAR* sb,\n        // int xs, int xe, int ys, int ye,\n        // real* ps, real* pe, real qs, real qe\n\n        var mode; // an int\n        var action; // an int\n        var origin; // an int\n        var stat = 0; // an int\n\n        var step; // a real_8\n        var page; // a real_8\n        var scale; // a real_8\n        var sblocal = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        mode = (sb.flag !== undefined ? sb.flag : sb); // REFACTOR - if user sends in a number instead of a scrollbar\n        action = Math.abs(mode);\n\n        if (ye - ys > xe - xs) {\n            if (Mx.origin < 3) {\n                origin = 2; /* inverted Y scrollbar */\n            } else {\n                origin = 4; /* normal Y scrollbar */\n            }\n        } else {\n            if (Mx.origin & 2) {\n                origin = 3; /* inverted X scrollbar */\n            } else {\n                origin = 1; /* normal X scrollbar */\n            }\n        }\n\n        if (action < 10) {\n            sb = sblocal; /* use local SB structure */\n        }\n        if (action < 10 || sb.action === 0) {\n            /* re-init the SB structure */\n            mx.scroll(Mx, sb, mx.XW_INIT, undefined, scrollbarState);\n            sb.flag = mode;\n            /* Turn off repeated event handling in mx_scroll */\n            sb.initial_pause = -1.0;\n            mx.scroll_loc(sb, xs, ys, xe - xs + 1, ye - ys + 1, origin, scrollbarState);\n        }\n        sb.srange = out.pe - out.ps;\n\n        switch (action) {\n            case 0:\n                step = page = scale = 1.0;\n                break;\n            case 1:\n            case 11:\n                step = page = 0.9 * sb.srange;\n                scale = 2.0;\n                break;\n            case 2:\n            case 12:\n                step = 0.1 * sb.srange;\n                page = 9 * step;\n                scale = 2.0;\n                break;\n            case 3:\n            case 13:\n                step = 1.0;\n                page = sb.srange - 1.0;\n                scale = 1.0;\n                break;\n            default:\n                return 0;\n        }\n        mx.scroll_vals(sb, out.ps, sb.srange, qs, qe - qs, step, page, scale, scrollbarState);\n\n        if (mode === 0) {\n            mx.scroll(Mx, sb, mx.XW_DRAW, undefined, undefined); // No need for a mouse event\n        } else {\n            if (mx.scroll(Mx, sb, mx.XW_EVENT, mouseEvent, scrollbarState)) {\n                if (out.ps !== sb.smin) {\n                    out.ps = sb.smin;\n                    stat += 1;\n                }\n                if (out.pe !== sb.smin + sb.srange) {\n                    out.pe = sb.smin + sb.srange;\n                    stat += 2;\n                }\n            }\n        }\n        return stat;\n    };\n\n    /**\n     * Instantiate scrollbar on graphics window\n     * @param Mx\n     * @param sv\n     * @param op\n     * @param mouseEvent\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll\n    //\n    mx.scroll = function(Mx, sv, op, mouseEvent, scrollbarState) {\n        var btn; // an int\n        var smin; // a real_8\n        var srange; // a real_8\n        var s; // an int_4\n\n        if (sv === undefined) {\n            return false; /* an mx.SCROLLBAR */\n        }\n\n        switch (op) {\n            case mx.XW_INIT:\n                mx.scroll_loc(sv, 0, 0, Mx.width, 20, 1, scrollbarState);\n                mx.scroll_vals(sv, 0.0, 10.0, 0.0, 100.0, 1.0, 10.0, 1.0, scrollbarState);\n                sv.flag = 0;\n                sv.action = 0;\n                sv.initial_pause = 0.25;\n                sv.repeat_pause = 0.05;\n                sv.mxevent = true;\n                sv.repeat_count = 0;\n                break;\n            case mx.XW_EVENT:\n                /*  Determine which button, if any, was pressed/released\n                 */\n                btn = 0;\n                if (sv.mxevent) { // TODO make sure mxevent is set properly when an event goes off - how is this supposed to be set?\n                    btn = (Mx.button_release) ? -Mx.button_release : Mx.button_press;\n                } else if (mouseEvent.type === \"mousedown\" || mouseEvent.type === \"mouseup\") {\n                    // TODO Does this case ever happen?\n                    switch (mouseEvent.which) {\n                        case 1:\n                            btn = 1;\n                            break;\n                        case 2:\n                            btn = 2;\n                            break;\n                        case 3:\n                            btn = 3;\n                            break;\n                            /* Add these cases for the mouse wheel */\n                        case 4:\n                            btn = 4;\n                            break;\n                        case 5:\n                            btn = 5;\n                            break;\n                    }\n                    if (mouseEvent.type === \"mouseup\") {\n                        btn = -btn;\n                    }\n                } else if (mouseEvent.type === \"mousewheel\" || mouseEvent.type === \"DOM-MouseScroll\") {\n                    // TODO Does this case ever happen?\n                    if (mouseEvent.wheelDelta && mouseEvent.wheelDelta > 0) {\n                        btn = 4; // TODO is 4 right for negative scroll (aka a scroll forwards away from the user)\n                        // TODO Do we need to worry about a release here?\n                    } else if (mouseEvent.wheelDelta && mouseEvent.wheelDelta < 0) {\n                        btn = 5; // TODO is 5 right for negative scroll (aka a scroll backward towards the user)\n                        // TODO Do we need to worry about a release here?\n                    }\n                }\n\n                if (sv.action === 0) {\n                    /*  First-time action -- only interested in button presses\n                     *  1 or 2 within our bounds\n                     */\n                    /* If scroll wheel, pretend we're on vertical scroll bar */\n                    if (btn === 4 || btn === 5) {\n                        Mx.xpos = sv.x;\n                    }\n\n\n                    /* Button !=1,2,4,5 OR NOT on scroll bar */\n                    if ((btn !== 1 && btn !== 2 && btn !== 4 && btn !== 5) ||\n                        Mx.xpos < sv.x || Mx.ypos < sv.y ||\n                        Mx.xpos > sv.x + sv.w || Mx.ypos > sv.y + sv.h) {\n                        return false;\n                    }\n                } else if (btn < 0) {\n                    /* Any button release within a repeated action will make us exit */\n                    sv.action = sv.repeat_count = 0; // TODO Update scrollbarState's action?\n                    return true;\n                }\n\n                /*  Compute s, the offset in pixels from the 'origin' of\n                 *  the scrollbar's on-screen region.\n                 */\n                if (sv.origin & 1) {\n                    s = Mx.xpos - sv.x;\n                    if (sv.origin & 2) {\n                        s = sv.w - s;\n                    }\n                } else {\n                    s = Mx.ypos - sv.y;\n                    if (sv.origin <= 2) {\n                        s = sv.h - s;\n                    }\n                }\n\n                /*  Determine action */\n                if (sv.action === 0) {\n                    /* First-time action */\n\n                    sv.repeat_count = 0; // TODO Is repeat count necessary any more?\n\n                    var scrollReal2PixOut = mx.scroll_real2pix(sv);\n                    // UPDATE SCROLLBAR STATE as well\n                    sv.s1 = scrollbarState.s1 = scrollReal2PixOut.s1;\n                    sv.sw = scrollbarState.sw = scrollReal2PixOut.sw;\n                    sv.soff = scrollbarState.soff = s - sv.s1;\n                    if (sv.trange === 0.0) {\n                        // UPDATE SCROLLBAR STATE as well\n                        sv.smin = scrollbarState.smin = sv.tmin;\n                        sv.srange = scrollbarState.srange = 0.0;\n                    } else switch (btn) {\n                        case 1:\n                            if (s > sv.a1 && s < sv.a2) {\n                                /* on scroll trough */\n                                sv.action = (sv.soff > 0) ? mx.SB_PAGEINC : mx.SB_PAGEDEC;\n                            } else {\n                                /* on arrows */\n                                sv.action = (sv.soff > 0) ? mx.SB_STEPINC : mx.SB_STEPDEC;\n                            }\n                            break;\n                        case 4:\n                            sv.action = mx.SB_WHEELUP;\n                            break;\n                        case 5:\n                            sv.action = mx.SB_WHEELDOWN;\n                            break;\n                    }\n                } else {\n                    /* We're repeating sv.action */\n                    switch (sv.action) {\n                        case mx.SB_WHEELUP:\n                        case mx.SB_WHEELDOWN:\n                        case mx.SB_EXPAND:\n                            /* we don't want to repeat these */\n                        case mx.SB_SHRINK:\n                        case mx.SB_FULL:\n                            sv.action = sv.repeat_count = 0;\n                    }\n                }\n                /* FALL THROUGH!!! */\n                /* jshint -W086 */\n                case mx.XW_COMMAND:\n                    /* jshint +W086 */\n\n                    smin = sv.smin;\n                    srange = sv.srange;\n\n                    switch (sv.action) {\n                        case mx.SB_STEPINC:\n                            smin += sv.step;\n                            break;\n                        case mx.SB_STEPDEC:\n                            smin -= sv.step;\n                            break;\n                        case mx.SB_PAGEINC:\n                            smin += sv.page;\n                            break;\n                        case mx.SB_PAGEDEC:\n                            smin -= sv.page;\n                            break;\n                        case mx.SB_FULL:\n                            smin = sv.tmin;\n                            srange = sv.trange;\n                            break;\n                        case mx.SB_EXPAND:\n                            srange = srange * sv.scale;\n                            if (smin <= 0 && smin + sv.srange >= 0) {\n                                smin *= sv.scale;\n                            } else {\n                                smin -= (srange - sv.srange) / 2.0;\n                            }\n                            break;\n                        case mx.SB_SHRINK:\n                            srange = srange / sv.scale;\n                            if (smin < 0 && smin + sv.srange >= 0) {\n                                smin += srange / sv.scale; /* Plot crosses axis */\n                            } else if (smin === 0 && smin + sv.srange >= 0) {\n                                smin = srange / sv.scale; /* Plot touches axis */\n                            } else {\n                                smin += (sv.srange - srange) / 2.0; /* Plot is completely contained on positive side of axis */\n                            }\n                            break;\n                            /* The mouse wheel needs to scroll 1 page at a time, if you want an\n\t\t           application to scroll differently, change sv.page with\n\t\t           mx_scroll_vals in the application code */\n                        case mx.SB_WHEELUP:\n                            smin -= sv.page;\n                            break;\n                        case mx.SB_WHEELDOWN:\n                            smin += sv.page;\n                            break;\n                    }\n\n                    if (sv.trange > 0) {\n                        smin = Math.max(sv.tmin, Math.min(smin, sv.tmin + sv.trange - srange));\n                        srange = Math.min(srange, sv.trange);\n                    } else {\n                        smin = Math.min(sv.tmin, Math.max(smin, sv.tmin + sv.trange - srange));\n                        srange = Math.max(srange, sv.trange);\n                    }\n\n                    if (sv.smin === smin && sv.srange === srange) {\n                        if (sv.action !== mx.SB_DRAG) {\n                            sv.action = sv.repeat_count = 0;\n                        }\n                    } else {\n                        // UPDATE SCROLLBAR STATE as well\n                        sv.smin = scrollbarState.smin = smin;\n                        sv.srange = scrollbarState.srange = srange;\n                        sv.repeat_count++;\n                    }\n\n                    if (op === mx.XW_COMMAND) {\n                        mx.scroll(Mx, sv, mx.XW_UPDATE, undefined);\n                        sv.action = 0;\n                    }\n\n                    break;\n                case mx.XW_DRAW:\n                case mx.XW_UPDATE:\n                    mx.redrawScrollbar(sv, Mx, op);\n\n        } /* switch */\n        return true;\n    };\n\n    /**\n     * Specify location and orientation of a scrollbar\n     * @param sv\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param origin\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_loc\n    //\n    mx.scroll_loc = function(sv, x, y, w, h, origin, scrollbarState) {\n        // UPDATE local scrollbar and SCROLLBAR STATE\n        if (sv === undefined) {\n            return; /* mx.SCROLLBAR */\n        }\n        sv.x = scrollbarState.x = x; // int\n        sv.y = scrollbarState.y = y; // int\n        sv.w = scrollbarState.w = w; // int\n        sv.h = scrollbarState.h = h; // int\n        sv.origin = scrollbarState.origin = Math.max(1, Math.min(4, origin)); // int\n\n        if (sv.origin & 1) {\n            sv.a2 = scrollbarState.a2 = sv.w;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.w - m.trunc(2 * mx.GBorder)) / 3), sv.h + mx.GBorder);\n        } else {\n            sv.a2 = scrollbarState.a2 = sv.h;\n            sv.arrow = scrollbarState.arrow = Math.min(m.trunc((sv.h - m.trunc(2 * mx.GBorder)) / 3), sv.w + mx.GBorder);\n        }\n        sv.a1 = scrollbarState.a1 = sv.arrow + mx.GBorder;\n        sv.a2 -= sv.arrow + mx.GBorder;\n        scrollbarState.a2 -= sv.arrow + mx.GBorder;\n        sv.swmin = scrollbarState.swmin = Math.min(10, sv.a2 - sv.a1);\n        sv.s1 = scrollbarState.s1 = 0;\n        sv.sw = scrollbarState.sw = 0;\n        sv.action = scrollbarState.action = 0;\n    };\n\n    /**\n     * Set coordinates in scrollbar structure\n     * @param sv\n     * @param smin\n     * @param srange\n     * @param tmin\n     * @param trange\n     * @param step\n     * @param page\n     * @param scale\n     * @param scrollbarState\n     */\n    //\n    // ~= mx_scroll_vals\n    //\n    mx.scroll_vals = function(sv, smin, srange, tmin, trange, step, page, scale, scrollbarState) {\n        // UPDATE SCROLLBAR STATE as well\n        if (sv === undefined) {\n            return; /* an mx.SCROLLBAR */\n        }\n        sv.smin = scrollbarState.smin = smin;\n        sv.srange = scrollbarState.srange = srange;\n        sv.tmin = scrollbarState.tmin = tmin;\n        sv.trange = scrollbarState.trange = trange;\n        sv.step = scrollbarState.step = step;\n        sv.page = scrollbarState.page = page;\n        sv.scale = scrollbarState.scale = Math.max(scale, 1.0);\n    };\n\n    /**\n     * Draw single symbol centered at pixel (x,y)\n     * @param Mx\n     * @param ic\n     * @param x\n     * @param y\n     * @param symbol\n     * @param rr\n     */\n    //\n    // ~= MX$DRAW_SYMBOL\n    //\n    mx.draw_symbol = function(Mx, ic, x, y, symbol, rr, n) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var r = 0; // int\n        var d = 0; // int\n        var d2 = 0; // int\n        var rmode = false; // bool\n        var fill = false; // bool\n        var tri = []; // XPoint array of size 4\n        for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n            tri[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var c = ''; // char\n\n        fill = rr < 0;\n        r = Math.abs(rr);\n        d = r * 2;\n\n        // Set the foreground color\n        ctx.fillStyle = ic;\n        ctx.strokeStyle = ic;\n\n        if (typeof symbol === \"function\") {\n            symbol(ctx, n, x, y);\n        } else {\n            switch (symbol) {\n                case mx.L_CircleSymbol:\n                    ctx.beginPath();\n                    if (fill) {\n                        ctx.arc(x, y, r, 0, 360); // draw arc\n                        ctx.fill(); // fill in the area of the arc\n                    } else {\n                        ctx.arc(x, y, r, 0, 360);\n                        ctx.stroke(); // just draw the arc's outline\n                    }\n                    break;\n                case mx.L_SquareSymbol:\n                    if (fill) {\n                        fill_rectangle(ctx, x - r, y - r, d, d);\n                    } else {\n                        draw_rectangle(ctx, x - r, y - r, d, d);\n                    }\n                    break;\n                case mx.L_PixelSymbol:\n                    d = 1; // d = 2*GMaxLines; // TODO Do we care about a maximum number of lines?\n                    // No native way to draw just a pixel - so use a circle instead\n                    ctx.beginPath();\n                    ctx.arc(x, y, 1, 0, 2 * Math.PI, true);\n                    ctx.fill();\n                    break;\n                case mx.L_ITriangleSymbol:\n                    r = -r; // TODO Refactor without switch fall-through?\n                    /* jshint -W086 */\n                case mx.L_TriangleSymbol:\n                    /* jshint +W086 */\n                    d = m.trunc(r * 1.5);\n                    d2 = m.trunc(r * 0.80);\n\n                    // Coordinates of just the triangle itself\n                    tri[1].x = -d2;\n                    tri[1].y = d;\n                    tri[2].x = d2 * 2;\n                    tri[2].y = 0;\n                    tri[3].x = -d2;\n                    tri[3].y = -d;\n\n                    var tempTri = []; // XPoint array of size 4\n                    for (var cnt = 0; cnt < 4; cnt++) { // initializing 4 points in the array\n                        tempTri[cnt] = {\n                            x: 0,\n                            y: 0\n                        };\n                    }\n\n                    if (fill) {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        fill_poly(ctx, tempTri);\n                    } else {\n                        tempTri[0].x = x;\n                        tempTri[0].y = y - r;\n\n                        // Replacement for CoordModePrevious offset (updating coordinates to be relative to origin, instead of previous pt)\n                        tempTri[1].x = tempTri[0].x + tri[1].x;\n                        tempTri[1].y = tempTri[0].y + tri[1].y;\n                        tempTri[2].x = tempTri[1].x + tri[2].x;\n                        tempTri[2].y = tempTri[1].y + tri[2].y;\n                        tempTri[3].x = tempTri[2].x + tri[3].x;\n                        tempTri[3].y = tempTri[2].y + tri[3].y;\n\n                        draw_poly(ctx, tempTri);\n                    }\n                    break;\n                case mx.L_PlusSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_HLineSymbol:\n                    draw_line(ctx, x + r, y, x - r, y);\n                    break;\n                case mx.L_VLineSymbol:\n                    draw_line(ctx, x, y + r, x, y - r);\n                    break;\n                case mx.L_XSymbol:\n                    draw_line(ctx, x - r, y - r, x + r, y + r);\n                    draw_line(ctx, x + r, y - r, x - r, y + r);\n                    break;\n                default:\n                    c = symbol;\n                    r = m.trunc(Mx.text_w / 2); //tbd\n                    if (fill && !rmode) {\n                        ctx.fillText(c.substring(0, 2), x - r, y + r); // TODO Does this cover it? Do we need to also fill in a rectangle behind\n                    }\n                    break;\n            } // end switch (symbol)\n        }\n    };\n\n    /**\n     * Plot symbols at centers defined by an array of pixels\n     * @param Mx\n     * @param ic\n     * @param pixx\n     * @param pixy\n     * @param npix\n     * @param symbol\n     * @param rr\n     * @private\n     */\n    //\n    // ~= MX$DRAW_SYMBOLS\n    //\n    mx.draw_symbols = function(Mx, ic, pixx, pixy, npix, symbol, rr, istart) {\n        for (var i = 0; i < npix; i++) {\n            mx.draw_symbol(Mx, ic, pixx[i], pixy[i], symbol, rr, i + istart);\n        }\n    };\n\n    /* http://geomalgorithms.com/a01-_area.html\n     *   > 0 left\n     *   = 0 on\n     *   < 0 right\n     */\n    /**\n     * Test if a point is Left|On|Right of an infinite 2D line.\n     * @method isLeft\n     * @param p_x Point's x-coordinate\n     * @param p_y Point's y-coordinate\n     * @param e_x1 Lines's x1-coordinate\n     * @param e_y1 Lines's y1-coordinate\n     * @param e_x2 Lines's x2-coordinate\n     * @param e_y2 Lines's y2-coordinate\n     * @private\n     */\n    function isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        return ((e_x1 - p_x) * (e_y2 - p_y) - (e_x2 - p_x) * (e_y1 - p_y));\n    }\n\n    /**\n     * @method update_winding_number\n     * @param wn\n     * @param p_x\n     * @param p_y\n     * @param e_x1\n     * @param e_y1\n     * @param e_x2\n     * @param e_y2\n     * @private\n     */\n    function update_winding_number(wn, p_x, p_y, e_x1, e_y1, e_x2, e_y2) {\n        if (e_y1 <= p_y) { // start y <= P.y\n            if (e_y2 > p_y) { // an upward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) > 0) {\n                    wn += 1;\n                }\n            }\n        } else { // start y > P.y (no test needed)\n            if (e_y2 <= p_y) { // a downward crossing\n                if (isLeft(p_x, p_y, e_x1, e_y1, e_x2, e_y2) < 0) {\n                    wn -= 1;\n                }\n            }\n        }\n        return wn;\n    }\n\n    /**\n     * Converts array of (x,y) coordinates to pixel coordinates, plots lines or dots\n     * @param Mx\n     * @param color\n     * @param xpoint\n     * @param ypoint\n     * @param npts\n     * @param skip\n     * @param line\n     * @param symb\n     * @param rad\n     * @param options\n     */\n    //\n    // ~= MX$TRACE\n    //\n    mx.trace = function(Mx, color, xpoint, ypoint, npts, istart, skip, line, symb, rad, options) {\n        if ((xpoint === undefined) || (ypoint === undefined)) {\n            throw \"mx.trace requires xpoint and ypoint\";\n        }\n\n        if (skip === undefined) {\n            skip = 1;\n        }\n\n        if (line === undefined) {\n            line = 1;\n        }\n\n        if (symb === undefined) {\n            symb = 0;\n        }\n\n        if (rad === undefined) {\n            rad = 0;\n        }\n\n        if (options === undefined) {\n            options = {};\n        }\n\n        if (npts <= 0) {\n            m.log.warn(\"No points to draw\");\n            return;\n        }\n\n        if ((line === 0) && (symb === 0)) {\n            m.log.warn(\"No line or symbol to draw\");\n            return;\n        }\n\n        var style;\n        if (options.dashed) {\n            style = {\n                mode: \"dashed\",\n                on: 4,\n                off: 4\n            };\n        }\n\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            // the min and max are the same\n            return;\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        if (!options.noclip) {\n            mx.clip(Mx, left, top, stk4.x2 - left + 1, stk4.y2 - top + 1);\n        }\n\n        var dx = Math.abs(stk4.xmax - stk4.xmin);\n        var dy = Math.abs(stk4.ymax - stk4.ymin);\n        var xmin = Math.min(stk4.xmin, stk4.xmax);\n        var ymin = Math.min(stk4.ymin, stk4.ymax);\n        var xmax = xmin + dx;\n        var ymax = ymin + dy;\n        if (options.pixels) {\n            xscl = 1.0;\n            xxmin = 0;\n            yscl = 1.0;\n            yymin = 0;\n            xmin = 0;\n            ymin = 0;\n            xmax = Math.round(Mx.r - Mx.l);\n            ymax = Math.round(Mx.b - Mx.t);\n\n        }\n        //dx = dx * 0.5;\n        //if ((line == -1) || (line == 1)) {\n        //\tdy = dy * 10.0;\n        //} else {\n        //\tdy = dy * 0.5;\n        //}\n        //xmin = xmin - dx;\n        //ymin = ymin - dy;\n        //xmax = xmax + dx;\n        //ymax = ymax + dy;\n        // These buffers need to be able to hold 2 times the number of points.\n        // if all points are on screen, then we will will need 'n' points\n        // if all points are off the screen, then we will need (2*n)-2\n        var bufsize = 4 * Math.ceil(2 * xpoint.length);\n        var pixx = new Int32Array(new ArrayBuffer(bufsize));\n        var pixy = new Int32Array(new ArrayBuffer(bufsize));\n\n        var ib = 0;\n        if ((line === 0) && (symb !== 0)) {\n            // We are drawing symbols only\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if (lvisible) {\n                    pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[0] = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                }\n            }\n        }\n        if (options.vertsym === true) {\n            // we are drawing verticle lines on each symbol\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((x >= xmin) && (x <= xmax)) {\n                    var i = Math.round((x - xxmin) * xscl) + left;\n                    mx.draw_line(Mx, color, i, 0, i, Mx.height);\n                    if ((y >= ymin) && (y <= ymax)) {\n                        pixx[0] = i;\n                        pixy[0] = Math.round((y - yymin) * yscl) + top;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        }\n        if (options.horzsym === true) {\n            // we are drawing horizontal lines on each symbol\n            for (var n = (skip - 1); n < npts; n += skip) {\n                var x = xpoint[n];\n                var y = ypoint[n];\n                if ((y >= ymin) && (y <= ymax)) {\n                    var i = Math.round((y - yymin) * yscl) + top;\n                    mx.draw_line(Mx, color, 0, i, Mx.width, i);\n                    if ((x >= xmin) && (x <= xmax)) {\n                        pixx[0] = Math.round((x - xxmin) * xscl) + left;\n                        pixy[0] = i;\n                        mx.draw_symbol(Mx, color, pixx[0], pixy[0], symb, rad, istart + n);\n                    }\n                }\n            }\n        } else if (line !== 0) {\n            var colors;\n            if ((options) && (options.highlight)) {\n                colors = [];\n                for (var sn = 0; sn < options.highlight.length; sn++) {\n                    if (options.highlight[sn].xstart >= xmax) {\n                        continue;\n                    }\n                    if (options.highlight[sn].xend <= xmin) {\n                        continue;\n                    }\n\n                    var xs = Math.max(options.highlight[sn].xstart, xmin);\n                    var xe = Math.min(options.highlight[sn].xend, xmax);\n\n                    if (xs < xe) {\n                        var rxs = Math.round((xs - xxmin) * xscl) + left;\n                        var rxe = Math.round((xe - xxmin) * xscl) + left;\n\n                        for (var cn = colors.length - 1; cn >= 0; cn--) {\n                            // This highlight overlaps the entire range of a previous\n                            // highlight...we can thus remove the color\n                            if ((rxs <= colors[cn].start) && (rxe >= colors[cn].end)) {\n                                colors.splice(cn, 1);\n                                continue;\n                            }\n                            // This highlight splits a previous highlight...we need\n                            // to create a new color range\n                            else if ((rxs >= colors[cn].start) && (rxe <= colors[cn].end)) {\n                                colors.push({\n                                    start: rxe,\n                                    end: colors[cn].end,\n                                    color: colors[cn].color\n                                });\n                                colors[cn].end = rxs;\n\n                            }\n                            // This highlight overlaps partially\n                            else if ((rxs <= colors[cn].start) && (rxe >= colors[cn].start)) {\n                                colors[cn].start = rxe;\n                            } else if ((rxs <= colors[cn].end) && (rxe >= colors[cn].end)) {\n                                colors[cn].end = rxs;\n                            }\n\n                            // See if this colors is still valid\n                            if (colors[cn].end <= colors[cn].start) {\n                                colors.splice(cn, 1);\n                            }\n                        }\n\n                        colors.push({\n                            start: rxs,\n                            end: rxe,\n                            color: options.highlight[sn].color\n                        });\n                    }\n                }\n\n                // The first color is the start of the plot\n                // in the base-line color\n                colors.push({\n                    start: left,\n                    color: color\n                });\n\n                colors.sort(function(a, b) {\n                    return a.start - b.start;\n                });\n\n            } else {\n                colors = color;\n            }\n\n            var wn = 0; // the winding number counter http://geomalgorithms.com/a03-_inclusion.html\n            var mid_x = (Mx.stk[Mx.level].xmax + Mx.stk[Mx.level].xmin) / 2.0;\n            var mid_y = (Mx.stk[Mx.level].ymax + Mx.stk[Mx.level].ymin) / 2.0;\n\n            var x = xpoint[0];\n            var y = ypoint[0];\n\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin, x, y);\n\n            var lvisible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n            // The first point is visible\n            if (lvisible) {\n                pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                ib += 1;\n                if (symb !== 0) {\n                    mx.draw_symbols(Mx, color, pixx, pixy, 1, symb, rad, istart);\n                }\n            } else {\n                ib = 0;\n            }\n\n            var ie = 0;\n            var visible = false;\n            for (var n = skip; n <= (skip * (npts - 1)); n += skip) {\n\n                var lx = x;\n                var ly = y;\n                x = xpoint[n];\n                y = ypoint[n];\n\n                wn = update_winding_number(wn, mid_x, mid_y, lx, ly, x, y);\n\n                visible = ((x >= xmin) && (x <= xmax) && (y >= ymin) && (y <= ymax));\n                if ((lvisible) && (visible)) {\n                    // both the left point and right point are visible, so we can draw the trace\n                    pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                    pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                    ib += 1;\n                } else {\n                    // clipping necessary, either the left or right point are not visible\n                    lvisible = visible;\n                    // calculate the difference between the last point and this point\n                    dx = lx - x;\n                    dy = ly - y;\n                    if ((dx !== 0.0) || (dy !== 0.0)) {\n                        var o = {\n                            tL: 1.0,\n                            tE: 0.0\n                        };\n                        // Between the last point and the current point,\n                        // determine the ratio of the x and y porionts\n                        // that intersects the border.  If clipt returns\n                        // false then no portion of the line between the two\n                        // points is visible\n                        if (clipt(dx, xmin - x, o)) {\n                            if (clipt(-dx, x - xmax, o)) {\n                                if (clipt(dy, ymin - y, o)) {\n                                    if (clipt(-dy, y - ymax, o)) {\n                                        // If this point is starting the on-screen portion, start the line\n                                        if (o.tL < 1) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tL * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tL * dy) * yscl) + top;\n                                            ib += 1;\n                                        }\n\n                                        // If this point is ending the on-screen portion draw the line\n                                        if (o.tE > 0) {\n                                            pixx[ib] = Math.round((x - xxmin + o.tE * dx) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin + o.tE * dy) * yscl) + top;\n                                            ib += 1;\n                                            mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n\n                                            if (symb !== 0 && (ib - ie) > 2) {\n                                                mx.draw_symbols(Mx,\n                                                    color,\n                                                    pixx.subarray(ie + 1, ib - 1),\n                                                    pixy.subarray(ie + 1, ib - 1), (ib - ie - 2),\n                                                    symb,\n                                                    rad,\n                                                    istart + n - (ib - ie - 2));\n                                            }\n                                            ie = ib;\n                                        } else {\n                                            // otherwise add it to the line to be drawn\n                                            pixx[ib] = Math.round((x - xxmin) * xscl) + left;\n                                            pixy[ib] = Math.round((y - yymin) * yscl) + top;\n                                            ib += 1;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            wn = update_winding_number(wn, mid_x, mid_y, x, y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin);\n            wn = update_winding_number(wn, mid_x, mid_y, Mx.stk[Mx.level].xmax, Mx.stk[Mx.level].ymin, Mx.stk[Mx.level].xmin, Mx.stk[Mx.level].ymin);\n            if ((ib - ie) > 0) {\n                mx.draw_lines(Mx, colors, pixx.subarray(ie, ib), pixy.subarray(ie, ib), (ib - ie), line, style);\n                if (visible) {\n                    ie = ie + 1;\n                }\n                if (symb !== 0 && (ib - ie) > 1) {\n                    mx.draw_symbols(Mx,\n                        color,\n                        pixx.subarray(ie, ib),\n                        pixy.subarray(ie, ib),\n                        ib - ie,\n                        symb,\n                        rad,\n                        n - ib + istart);\n                }\n            }\n\n            if (options.fillStyle && !Mx.fillMin && !Mx.fillMax) {\n                if ((ib > 1) || (wn !== 0)) {\n                    // if we have at least one point\n                    // or the entire plot area is in the fill zone\n                    mx.fill_trace(Mx, options.fillStyle, pixx, pixy, ib);\n                }\n            }\n\n            if (options.highlight) {\n                for (var i = 0; i < options.highlight.length; i++) {\n                    var highlight = options.highlight[i];\n                    if (!highlight.fill) {\n                        continue;\n                    }\n\n                    var x_start = highlight.xstart;\n                    var x_end = highlight.xend;\n\n                    console.log(\"x start \", x_start);\n                    console.log(\"x end \", x_end);\n\n                    if (x_start >= Mx.stk[Mx.level].xmax) {\n                        continue;\n                    }\n                    if (x_end <= Mx.stk[Mx.level].xmin) {\n                        continue;\n                    }\n\n                    if ((ib > 1) || (wn !== 0)) {\n\n                        var xstart_pixel_value = mx.real_to_pixel(Mx, x_start, 0);\n                        var xend_pixel_value = mx.real_to_pixel(Mx, x_end, 0);\n\n                        var pi_start = xstart_pixel_value.x;\n                        var pi_end = xend_pixel_value.x;\n                        //console.log('start: ', pi_start, 'end: ', pi_end);\n                        var pixx_new = [];\n                        var pixy_new = [];\n                        for (var q = 0; q < ib; q++) {\n                            var this_point = pixx[q];\n                            var this_point_y = pixy[q];\n                            //console.log(this_point);\n                            if (in_fill_range(this_point, pi_start, pi_end) === true) {\n                                //console.log('in range: ', this_point);\n                                pixx_new.push(this_point);\n                                pixy_new.push(this_point_y);\n\n                            }\n                        }\n\n                        if ((pixx_new.length > 0) || (wn !== 0)) {\n                            pi_start = Math.max(pi_start, pixx_new[0]);\n                            pi_end = Math.min(pi_end, pixx_new[pixx_new.length - 1]);\n                            mx.fill_trace(Mx, highlight.fill, pixx_new, pixy_new, pixx_new.length, pi_start, pi_end);\n                        }\n                    }\n\n                }\n            }\n\n\n        }\n\n        if (!options.noclip) {\n            mx.clip(Mx, 0, 0, 0, 0);\n        }\n    };\n\n    /**\n     * Set dashed or solid lines mode.\n     * @param Mx\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_MODE\n    //\n    mx.draw_mode = function(Mx, linewidth, style) {\n        Mx.linewidth = (linewidth === undefined) ? 1 : linewidth;\n        Mx.style = style;\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_line = function(Mx, color, x1, y1, x2, y2, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n        // Look up the color in Mx.pixels\n        if (typeof color === \"number\") {\n            if (!Mx.pixel) {\n                m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n                color = Mx.fg;\n            } else {\n                if (isNaN(color)) {\n                    color = 0;\n                }\n                var cidx = Math.max(0, Math.min(Mx.pixel.map.length, color));\n                color = Mx.pixel.getColor(color);\n                color = to_rgb(\n                    color.red,\n                    color.green,\n                    color.blue);\n            }\n        }\n        draw_line(ctx, x1, y1, x2, y2, style, color, linewidth);\n    };\n\n    /**\n     * @param Mx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     */\n    //\n    // ~= MX$RUBBERLINE\n    //\n    mx.rubberline = function(Mx, x1, y1, x2, y2) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        draw_line(ctx, x1, y1, x2, y2, {\n            mode: \"xor\"\n        }, \"white\", 1);\n    };\n\n    /**\n     * @param Mx\n     * @param fillStyle\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @private\n     */\n    mx.fill_trace = function(Mx, fillStyle, pixx, pixy, npts, l, r) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (Array.isArray(fillStyle)) {\n            ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, Mx.b - Mx.t, fillStyle);\n        } else {\n            ctx.fillStyle = fillStyle;\n        }\n\n        if (npts < 1) {\n            ctx.fillRect(Mx.l, Mx.t, (Mx.r - Mx.l), (Mx.b - Mx.t));\n            return;\n        }\n\n        if (l === undefined) {\n            l = Mx.l;\n        }\n        if (r === undefined) {\n            r = Mx.r;\n        }\n\n        if (fillStyle) {\n            var x = pixx[0];\n            var y = pixy[0];\n\n            ctx.beginPath();\n            if (y === Mx.t) {\n                ctx.lineTo(l, Mx.t);\n            } else {\n                ctx.lineTo(l, Mx.b);\n            }\n\n\n            ctx.lineTo(x, y);\n\n\n\n            for (var i = 1; i < npts; i++) {\n                x = pixx[i];\n                y = pixy[i];\n                ctx.lineTo(x, y);\n            }\n\n            if (y === Mx.t) {\n                ctx.lineTo(r, Mx.t);\n            }\n            ctx.lineTo(r, Mx.b);\n            if (pixy[0] === Mx.t) {\n                ctx.lineTo(l, Mx.b);\n            }\n\n            ctx.closePath();\n            ctx.fill(\"evenodd\");\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param colors\n     * @param pixx\n     * @param pixy\n     * @param npts\n     * @param linewidth\n     * @param style\n     */\n    //\n    // ~= MX$DRAW_LINES\n    //\n    mx.draw_lines = function(Mx, colors, pixx, pixy, npts, linewidth, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (npts < 1) {\n            return;\n        }\n\n        var x = pixx[0];\n        var y = pixy[0];\n\n        if (linewidth === undefined) {\n            linewidth = Mx.linewidth;\n        }\n        if (style === undefined) {\n            style = Mx.style;\n        }\n\n        if ((style) && (style.mode === \"dashed\")) {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (!dash_supported) {\n                m.log.warn(\"WARNING: Dashed lines aren't supported on your browser\");\n            }\n        }\n\n        ctx.lineWidth = linewidth;\n        var current_color = 0;\n\n        if (typeof colors === \"string\") {\n            colors = [{\n                start: 0,\n                color: colors\n            }];\n        } else if (!(colors instanceof Array)) {\n            if (colors.start === undefined) {\n                colors.start = 0;\n            }\n            colors = [colors];\n        }\n\n        var n;\n        for (n = (colors.length - 1); n >= 0; n--) {\n            if ((colors[n].end != null) && (colors[n].end < x)) {\n                colors.splice(n, 1);\n            }\n        }\n\n        // Find the first valid color (expects colors to be sorted)\n        for (n = 0; n < colors.length; n++) {\n            if (colors[n].start < x) {\n                current_color = n;\n            }\n        }\n\n        ctx.strokeStyle = colors[current_color].color;\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < npts; i++) {\n            if ((x === pixx[i]) && (y === pixy[i])) {\n                continue;\n            }\n            x = pixx[i];\n            y = pixy[i];\n\n            var newcolor = false;\n            if ((current_color > 0) && (colors[current_color].end != null) && (colors[current_color].end < x)) {\n                newcolor = true;\n                while ((colors[current_color].end != null) && (colors[current_color].end < x)) {\n                    colors.splice(current_color, 1);\n                    current_color -= 1;\n                    if (current_color === 0) {\n                        break;\n                    }\n                }\n            }\n\n            if (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                newcolor = true;\n                while (((current_color + 1) < colors.length) && (colors[current_color + 1].start <= x)) {\n                    current_color++;\n                }\n            }\n\n            ctx.lineTo(x, y);\n            if (newcolor) {\n                ctx.stroke();\n                ctx.strokeStyle = colors[current_color].color;\n                ctx.beginPath();\n                ctx.lineTo(x, y);\n            }\n        }\n        ctx.stroke();\n        common.dashOff(ctx);\n        ctx.beginPath();\n    };\n\n    /**\n     * @param Mx\n     * @param left\n     * @param top\n     * @param width\n     * @param height\n     */\n    //\n    // ~= MX$CLIP\n    //\n    mx.clip = function(Mx, left, top, width, height) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if ((left === 0) && (top === 0) && (width === 0) && (height === 0)) {\n            ctx.restore();\n            return;\n        }\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(left, top, width, height);\n        ctx.clip();\n    };\n\n    /**\n     * @param Mx\n     */\n    //\n    // ~= MX$CLEAR_WINDOW\n    //\n    mx.clear_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.erase_window = function(Mx) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        ctx.clearRect(0, 0, Mx.width, Mx.height);\n    };\n\n    /**\n     * @param Mx\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$RUBBERBOX\n    // Unlike MX$RUBBERBOX, this is a non-blocking call.  As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    // When CTRL is pressed, alt_style is used\n    //\n    mx.rubberbox = function(Mx, func, mode, def_style, alt_style) {\n        mx.warpbox(Mx, Mx.xpos, Mx.ypos, Mx.xpos, Mx.ypos, 0, Mx.width, 0, Mx.height, func, mode, def_style, alt_style);\n    };\n\n    /**\n     * @param Mx\n     * @param xo\n     * @param yo\n     * @param xl\n     * @param yl\n     * @param xmin\n     * @param xmax\n     * @param ymin\n     * @param ymax\n     * @param func\n     * @param mode\n     * @param def_style\n     * @param alt_style\n     */\n    //\n    // ~= MX$WARPBOX\n    // Unlike MX$WARPBOX, this is a non-blocking call.   As such the 'func' is a callback for then the rubberbox is finished.\n    //\n    mx.warpbox = function(Mx, xo, yo, xl, yl, xmin, xmax, ymin, ymax, func, mode, def_style, alt_style) {\n        if (!def_style) {\n            def_style = {};\n        }\n\n        Mx.warpbox = new WARPBOX();\n        Mx.warpbox.xo = xo;\n        Mx.warpbox.yo = yo;\n        Mx.warpbox.xl = xl;\n        Mx.warpbox.yl = yl;\n        Mx.warpbox.xmin = xmin;\n        Mx.warpbox.xmax = xmax;\n        Mx.warpbox.ymin = ymin;\n        Mx.warpbox.ymax = ymax;\n        Mx.warpbox.func = func;\n        Mx.warpbox.mode = mode;\n\n        Mx.warpbox.style = def_style;\n        Mx.warpbox.def_style = def_style;\n        Mx.warpbox.alt_style = alt_style;\n    };\n\n    /**\n     * @param inorigin\n     * @param outorigin\n     * @param instk\n     */\n    //\n    // ~= M$ORIGIN\n    //\n    mx.origin = function(inorigin, outorigin, instk) {\n        inorigin = Math.max(1, inorigin);\n        outorigin = Math.max(1, outorigin);\n\n        var outstk = new mx.STKSTRUCT();\n\n        outstk.xmin = instk.xmin;\n        outstk.xmax = instk.xmax;\n        outstk.ymin = instk.ymin;\n        outstk.ymax = instk.ymax;\n        outstk.xscl = instk.xscl;\n        outstk.yscl = instk.yscl;\n        outstk.x1 = instk.x1;\n        outstk.y1 = instk.y1;\n        outstk.x2 = instk.x2;\n        outstk.y2 = instk.y2;\n\n        if (inorigin !== outorigin) {\n            var diff = Math.abs(outorigin - inorigin); // used to simplify boolean logic\n            var sum = outorigin + inorigin;\n            if (diff === 2 || sum !== 5) { // (1<->3) (2<->4) (1<->2) (3<->4)\n                outstk.xmin = instk.xmax;\n                outstk.xmax = instk.xmin;\n                outstk.xscl = -instk.xscl;\n            }\n            if (diff === 2 || sum === 5) { // (1<->3) (2<->4) (1<->4) (2<->3)\n                outstk.ymin = instk.ymax;\n                outstk.ymax = instk.ymin;\n                outstk.yscl = -instk.yscl;\n            }\n        }\n        return outstk;\n    };\n\n    /**\n     * @param end1\n     * @param end2\n     */\n    //\n    // ~= MX$MULT\n    //\n    mx.mult = function(end1, end2) {\n        var absmax = Math.max(Math.abs(end1), Math.abs(end2));\n        if (absmax === 0) {\n            return 1.0;\n        }\n        var kengr = 0.1447648 * Math.log(absmax);\n        kengr = kengr | kengr; // Math.floor always rounds down, so -3.3 becomes -4 use this bitwise hack instead\n        if (absmax < 1.0) {\n            kengr = kengr - 1;\n        }\n        if (kengr < 0) {\n            return 1.0 / Math.pow(10, (-3 * kengr));\n        } else {\n            return Math.pow(10, (3 * kengr));\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param event\n     * @private\n     */\n    //\n    // event may be undefined or null\n    mx.widget_callback = function(Mx, event) {\n        if (Mx.prompt) {\n            if (event.which === 3) {\n                Mx.prompt.input.onsubmit();\n            }\n        }\n\n        if (Mx.widget) {\n            if (event.type === \"mouseup\" && Mx.mouseUpLatch) {\n                Mx.mouseUpLatch = undefined;\n            } else {\n                Mx.widget.callback(event);\n            }\n        }\n\n    };\n\n    /**\n     * @param Mx\n     * @param promptText\n     * @param isValid\n     * @param onSuccess\n     * @param refresh\n     * @param inputValue\n     * @param xpos\n     * @param ypos\n     * @param errorTimeout\n     */\n    //\n    // ~= MX$DPROMPT - only higher-level\n    mx.prompt = function(Mx, promptText, isValid, onSuccess, refresh, inputValue, xpos, ypos, errorTimeout) {\n        if (inputValue !== undefined) {\n            var inputValid = isValid(inputValue);\n\n            if (!inputValid.valid) {\n                throw \"Prompt default input value not valid due to '\" + inputValid.reason + \"'\";\n            }\n        }\n\n        // TODO Validation - make sure promptText is not too long and isn't multi-line...\n        mx.onWidgetLayer(Mx, function() {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            var maxNumChars = 30;\n\n            // Construct the input box\n            var pxIndex = ctx.font.indexOf('px');\n            var fontIndex = pxIndex + 3;\n            var fontSize = ctx.font.substr(0, pxIndex);\n            var fontFamily = ctx.font.substr(fontIndex, ctx.font.length).toString();\n\n            /* TODO Note: There is a scrolling bug - you can scroll to the right, but not the left of the value\n\t\t\tAnd... when truncating the width of an input field - it shows the value as though truncated\n\t\t\tfrom the right (say if its cut off by 1 and that one happened to be a negative sign, the value\n\t\t\twould look like a positive) .\n\t\t\t */\n            var canvasInput = new CanvasInput({\n                height: Mx.text_h,\n                fontFamily: fontFamily,\n                /* jshint -W053 */\n                fontSize: new Number(fontSize),\n                /* jshint +W053 */\n                backgroundColor: Mx.bg,\n                fontColor: Mx.fg,\n                borderWidth: 0,\n                borderRadius: 0,\n                padding: 0,\n                boxShadow: \"none\",\n                innerShadow: \"none\",\n                width: Mx.text_w * maxNumChars,\n                value: (inputValue !== undefined ? inputValue.toString() : \"\"),\n                disableBlur: true,\n                renderOnReturn: false,\n                tabToClear: true\n            });\n\n            var subHandlerCreator = function(messageX, messageY) {\n                return function() {\n                    var newValue = this.value();\n\n                    var inputValid = isValid(newValue);\n\n                    if (!inputValid.valid) {\n                        mx.message(Mx, \"Value: '\" + newValue + \"' isn't valid due to '\" + inputValid.reason + \"' - RETRY\", undefined, messageX, messageY);\n\n                        // Clear error message\n                        setTimeout(function() {\n                            mx.onWidgetLayer(Mx, function() {\n                                mx.erase_window(Mx);\n                            });\n                            Mx.widget = null;\n                            //refresh();\n                        }, errorTimeout != null ? errorTimeout : 4000);\n                    } else {\n                        Mx.prompt = undefined; // clear state variable\n\n                        // Kill CanvasInput\n                        this.cleanup();\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n\n                        onSuccess(newValue);\n                    }\n                };\n            };\n\n            // Create redraw method\n            var redrawPromptCreator = function(Mx, input, promptText) {\n                return function(xpos, ypos) {\n                    mx.onWidgetLayer(Mx, function() {\n                        var GBorder = 3;\n\n                        // Calculate the position variables\n\n                        var xssPrompt = (promptText.length + 2) * Mx.text_w;\n                        var xss = xssPrompt + (maxNumChars + 1) * Mx.text_w;\n                        var yss = 2 * Mx.text_h;\n\n                        var xs = xss + 2 * GBorder;\n                        var ys = yss + 2 * GBorder;\n                        if (!xpos) {\n                            xpos = Mx.xpos;\n                        }\n                        if (!ypos) {\n                            ypos = Mx.ypos;\n                        }\n                        var xc = Math.max(0, Math.min(xpos, Mx.width - xs));\n                        var yc = Math.max(0, Math.min(ypos, Mx.height - ys));\n                        var xcc = xc + GBorder;\n                        var ycc = yc + GBorder;\n\n                        var yPos = ycc + Mx.text_h * 1.5;\n                        var inputXPos = xcc + Mx.text_w;\n\n                        // Draw the box and label text\n                        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n                        mx.text(Mx, inputXPos, yPos, promptText);\n\n                        var inputYPos = yPos - Mx.text_h * 1.15;\n\n                        // Redraw the input at the new location\n                        input.x(xcc + Mx.text_w + xssPrompt - Mx.text_w);\n                        input.y(inputYPos);\n\n                        input.onsubmit(subHandlerCreator(xc, inputYPos - 75)); // TODO Refactor positioning based on char length of reason code...\n                        if (!input.canvas()) {\n                            input.canvas(Mx.active_canvas);\n                        } else {\n                            input.render();\n                        }\n                    });\n                };\n            };\n\n            var redrawPrompt = redrawPromptCreator(Mx, canvasInput, promptText);\n\n            //refresh();\n            redrawPrompt(xpos, ypos);\n            canvasInput.focus();\n\n            // Set state variable\n            Mx.prompt = {\n                redraw: redrawPrompt,\n                input: canvasInput\n            };\n        });\n    };\n\n    /**\n     * Floating-point number validator. Verifies that value is a valid floating point\n     * number. Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid floating point numbers.\n     * @private\n     */\n    mx.floatValidator = function(value, strict) {\n        if (!(((strict === undefined || strict === false) && value === \"\")) &&\n            isNaN(parseFloat(value)) || !isFinite(value)) {\n            return {\n                valid: false,\n                reason: \"Failed float validation: not a valid floating point number\"\n            };\n        }\n\n        return {\n            valid: true,\n            reason: \"\"\n        };\n    };\n\n    /**\n     * Integer number validator. Verifies that value is a valid integer.\n     * Validation is loose by default - meaning empty strings are considered valid.\n     * @param value The value to validate.\n     * @param strict If strict is set to true - does not consider empty strings as valid integers.\n     * @private\n     */\n    mx.intValidator = function(value, strict) {\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            ((parseFloat(value) === parseInt(value, 10)) && !isNaN(value))) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed integer validation: not a valid integer\"\n            };\n        }\n    };\n\n    mx.hexValidator = function(value, strict) {\n        var regColorcode = /^(#)?([0-9a-fA-F]{3})([0-9a-fA-F]{3})?$/;\n        if (((strict === undefined || strict === false) && value === \"\") ||\n            (regColorcode.test(value) !== false)) {\n            return {\n                valid: true,\n                reason: \"\"\n            };\n        } else {\n            return {\n                valid: false,\n                reason: \"Failed hexcode validation: not a valid hexcode\"\n            };\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param msg\n     * @param time - unused?\n     * @param xpos\n     * @param ypos\n     */\n    //\n    // ~= MX$MESSAGE\n    //\n    mx.message = function(Mx, msg, time, xpos, ypos, type) {\n        mx.onWidgetLayer(Mx, function() {\n\n            mx.render_message_box(Mx, msg, xpos, ypos);\n\n            Mx.widget = {\n                type: type || \"ONESHOT\",\n                callback: function(event) {\n                    if ((event.type === \"mousedown\") || (event.type === \"keydown\")) {\n                        Mx.widget = null;\n                        mx.onWidgetLayer(Mx, function() {\n                            mx.erase_window(Mx);\n                        });\n                    }\n                }\n            };\n        });\n    };\n\n    mx.render_message_box = function(Mx, msg, xpos, ypos, textColor) {\n        var GBorder = 3;\n\n        // Unlike MX$MESSAGE, this implementaion if the message\n        // already contains newlines, the text will placed in the\n        // box as-is.\n        var beg = msg.split(/\\r\\n|\\r|\\n/g);\n        var linel = 0;\n        var center;\n        if (beg.length === 1) {\n            beg = [];\n            var MESSWIDTH = 40;\n\n            linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), msg.length);\n            if (linel <= 0) {\n                return;\n            }\n            while ((linel > MESSWIDTH) && (2.5 * Mx.text_h * msg.length < Mx.height * linel)) {\n                linel -= 5;\n            }\n\n            var cur = 0;\n            var bg = 0;\n            var i = 0;\n            var j = 0;\n            var end = 0;\n            var brk = 0;\n            var beg = [];\n\n            center = true;\n            while (bg < msg.length) {\n                end = bg + linel - 1;\n                brk = end = Math.min(end, msg.length - 1);\n                var endinreturn = false;\n                for (cur = bg; cur <= end && !endinreturn; cur++) {\n                    switch (msg[cur]) {\n                        case ',':\n                        case ';':\n                        case ' ':\n                        case ':':\n                            brk = cur;\n                            break;\n                        case '-':\n                        case '/':\n                            if (brk !== cur - 1) {\n                                brk = cur;\n                            }\n                            break;\n                        case '@':\n                        case '\\n':\n                        case '\\r':\n                            center = false;\n                            endinreturn = true;\n                            brk = cur;\n                            break;\n                    }\n                }\n                if (cur === msg.length) {\n                    brk = end;\n                }\n                if (endinreturn) {\n                    beg.push(msg.substring(bg, brk));\n                } else {\n                    // trim leading space\n                    var s = msg.substring(bg, brk + 1).replace(/^\\s+/, \"\");\n                    beg.push(s);\n                }\n                bg = brk + 1;\n                j = Math.max(j, beg[i].length);\n            }\n        } else {\n            for (var i = 0; i < beg.length; i++) {\n                linel = Math.min((((Mx.width - 2 * GBorder) / Mx.text_w) - 2), Math.max(linel, beg[i].length));\n            }\n        }\n\n        var lines = beg.length;\n        if (lines > 6) {\n            center = false;\n        }\n        var cur = 0;\n        var winlines = Math.max(1, Mx.height / Mx.text_h);\n        var lastline = Math.min(lines, cur + winlines - 1);\n\n        var xss = (linel + 2) * Mx.text_w;\n        var yss = (lastline - cur + 1) * Mx.text_h;\n\n        var xs = xss + 2 * GBorder;\n        var ys = yss + 2 * GBorder;\n        if (!xpos) {\n            xpos = Mx.xpos;\n        }\n        if (!ypos) {\n            ypos = Mx.ypos;\n        }\n        var xc = Math.max(Mx.l, Math.min(xpos, Mx.r - xs));\n        var yc = Math.max(Mx.t, Math.min(ypos, Mx.b - ys));\n        var xcc = xc + GBorder;\n        var ycc = yc + GBorder;\n\n        mx.widgetbox(Mx, xc, yc, xs, ys, xcc, ycc, 0, \"\");\n\n        var j = ycc + Mx.text_h / 3;\n        var i = xcc + Mx.text_w;\n        while (cur < lastline) {\n            j += Mx.text_h;\n            if (center) {\n                i = xc + xs / 2 - ((beg[cur].length * Mx.text_w) / 2);\n            }\n            mx.text(Mx, i, j, beg[cur], textColor);\n            cur++;\n        }\n    };\n\n    /**\n     * Based on http://js-bits.blogspot.co.uk/2010/07/canvas-rounded-corner-rectangles.html\n     *\n     * @param Mx\n     * @param color\n     * @param {Number} x\n     * @param {Number} y\n     * @param {Number} w\n     * @param {Number} h\n     * @param fill_opacity\n     * @param fill_color\n     * @param {Number} radius The corner radius. Defaults to 5;\n     */\n    mx.draw_round_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color, radius) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!radius) {\n            radius = 5;\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + w - radius, y);\n        ctx.quadraticCurveTo(x + w, y, x + w, y + radius);\n        ctx.lineTo(x + w, y + h - radius);\n        ctx.quadraticCurveTo(x + w, y + h, x + w - radius, y + h);\n        ctx.lineTo(x + radius, y + h);\n        ctx.quadraticCurveTo(x, y + h, x, y + h - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = color;\n        ctx.stroke();\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fill();\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param color\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param fill_opacity\n     * @param fill_color\n     */\n    //\n    // ~= MX$DRAW_BOX\n    //\n    mx.draw_box = function(Mx, color, x, y, w, h, fill_opacity, fill_color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (color !== \"xor\") {\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = color;\n            ctx.strokeRect(x, y, w, h);\n        } else {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use Mx.fg instead\n                ctx.lineWidth = 1;\n                ctx.strokeStyle = Mx.fg;\n                ctx.strokeRect(x, y, w, h);\n            } else {\n                // TODO switch to using TypedArrays\n                x = Math.floor(x);\n                y = Math.floor(y);\n                w = Math.floor(w);\n                h = Math.floor(h);\n\n                // For now assume xor always uses the base canvas\n                // even if it draws on another canvas\n                var dctx = Mx.canvas.getContext(\"2d\");\n\n                var imgd = dctx.getImageData(x, y, w, 1);\n                var pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x, y + h, w, 1);\n                pix = imgd.data;\n                for (var c = 0; c < imgd.data.length; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y + h);\n\n                var imgd = dctx.getImageData(x, y, 1, h);\n                var pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x, y);\n\n                imgd = dctx.getImageData(x + w, y, 1, h);\n                pix = imgd.data;\n                for (var c = 0; c < h; c++) {\n                    pix[c * 4] = 255 - pix[c * 4]; // red\n                    pix[c * 4 + 1] = 255 - pix[c * 4 + 1]; // green\n                    pix[c * 4 + 2] = 255 - pix[c * 4 + 2]; // blue\n                    pix[c * 4 + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x + w, y);\n            }\n        }\n\n        if ((fill_opacity !== undefined) && (fill_opacity > 0)) {\n            var oldAlpha = ctx.globalAlpha;\n            ctx.globalAlpha = fill_opacity;\n            if (fill_color) {\n                ctx.fillStyle = fill_color;\n            } else {\n                ctx.fillStyle = color;\n            }\n            ctx.fillRect(x + 1, y + 1, w - 1, h - 1);\n            ctx.globalAlpha = oldAlpha;\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param width\n     */\n    // ~= MX$SETFONT\n    mx.set_font = function(Mx, width) {\n        var ctx = Mx.canvas.getContext(\"2d\");\n        var ctx_wid = Mx.wid_canvas.getContext(\"2d\");\n\n        if ((Mx.font) && (Mx.font.width === width)) {\n            // use the cached font\n            ctx.font = Mx.font.font;\n            ctx_wid.font = Mx.font.font;\n        } else {\n            // figure out the font\n            var text_h = 1;\n            do {\n                text_h = text_h + 1;\n                ctx.font = text_h + \"px \" + Mx.font_family;\n                ctx_wid.font = text_h + \"px \" + Mx.font_family;\n                var font_size = ctx.measureText('M'); // the capital M is typically the same height and width\n                Mx.text_w = font_size.width;\n                Mx.text_h = text_h;\n            } while (Mx.text_w < width);\n            Mx.font = {\n                font: text_h + \"px \" + Mx.font_family,\n                width: width\n            };\n        }\n    };\n\n\n    /**\n     * @param Mx\n     * @param xstart\n     * @param ystart\n     * @param xend\n     * @param yend\n     * @param style\n     */\n    // ~= MX$FTEXTLINE\n    mx.textline = function(Mx, xstart, ystart, xend, yend, style) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (!style) {\n            style = {};\n        }\n        if (!style.color) {\n            style.color = Mx.fg;\n        }\n        if (!style.width) {\n            style.width = 1;\n        }\n        draw_line(ctx, xstart, ystart, xend, yend, style, style.color, style.width);\n    };\n\n    /**\n     * @param dmin\n     * @param dmax\n     * @param ndiv\n     */\n    // ~= MX$TICS\n    mx.tics = function(dmin, dmax, ndiv, timecode) {\n        var dtic = 1;\n        var dtic1 = dmin;\n\n        // handle degenerate case\n        if (dmax === dmin) {\n            return {\n                dtic: 1,\n                dtic1: dmin\n            };\n        }\n\n        // split up range into about ndiv 'nice' chunks\n        // zero is included only if   dmin < zero < dmax\n        var dran = Math.abs(dmax - dmin);\n        var df = dran / ndiv;\n        var sig = log10(Math.max(df, 1.0e-36));\n        var nsig;\n        if (sig < 0.0) {\n            nsig = Math.ceil(sig);\n            nsig = nsig - 1;\n        } else {\n            nsig = Math.floor(sig);\n        }\n\n        var ddf = df * Math.pow(10.0, (-nsig));\n        sig = Math.pow(10.0, nsig);\n        var dft = ddf * sig;\n        // If timecode has been requested and it looks like\n        // timecode\n        if (timecode && (dft >= 5.0 && dft <= 59.5 * 3600 * 24)) {\n            var dscl;\n            if (dft < 17.5) {\n                dscl = 5.0; // align to 5 sec tics\n            } else if (dft < 37.5) {\n                dscl = 15.0; // align to 15 sec tics\n            } else if (dft < 4.5 * 60) {\n                dscl = 60.0; // 1 minute tics\n            } else if (dft < 17.5 * 60) {\n                dscl = 5.0 * 60; // and so on\n            } else if (dft < 37.5 * 60) {\n                dscl = 15.0 * 60;\n            } else if (dft < 2.0 * 3600) {\n                dscl = 1.0 * 3600;\n            } else if (dft < 4.5 * 3600) {\n                dscl = 3.0 * 3600;\n            } else if (dft < 9.0 * 3600) {\n                dscl = 6.0 * 3600;\n            } else if (dft < 1.5 * 3600 * 24) {\n                dscl = 12.0 * 3600;\n            } else if (dft < 6.0 * 3600 * 24) {\n                dscl = 1.0 * 3600 * 24; // 1 day\n            } else {\n                dscl = 1.0 * 3600 * 24 * 7; // 1 week\n            }\n            dtic = Math.round(dft / dscl) * dscl;\n        } else {\n            if (ddf < 1.75) {\n                dtic = sig;\n            } else if (ddf < 2.25) {\n                dtic = 2.0 * sig;\n            } else if (ddf < 3.5) {\n                dtic = 2.50 * sig;\n            } else if (ddf < 7.0) {\n                dtic = 5.0 * sig;\n            } else {\n                dtic = 10.0 * sig;\n            }\n        }\n\n        // redefine dmin and dmax to line up on 'nice' boundaries\n        if (dtic === 0.0) {\n            dtic = 1.0;\n        }\n        var nseg;\n        if (dmax >= dmin) {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.995;\n            } else {\n                nseg = dmin / dtic - 0.005;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n        } else {\n            if (dmin >= 0.0) {\n                nseg = dmin / dtic + 0.005;\n            } else {\n                nseg = dmin / dtic - 0.995;\n            }\n            nseg = Math.floor(nseg); // floor\n            dtic1 = nseg * dtic;\n            dtic = -1 * dtic;\n        }\n        if (dtic1 + dtic === dtic1) {\n            dtic = dmax - dmin;\n        }\n\n        return {\n            dtic: dtic,\n            dtic1: dtic1\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xdiv\n     * @param ydiv\n     * @param xlab\n     * @param ylab\n     * @param flags\n     */\n    // ~= MX$FDRAWAXIS\n    mx.drawaxis = function(Gx, Mx, xdiv, ydiv, xlab, ylab, flags) {\n        var stk1 = mx.origin(Mx.origin, 1, Mx.stk[Mx.level]);\n        var iscl = 0;\n        var isct = 0;\n        var iscr = 0;\n        var iscb = 0;\n        var width = 0;\n        var height = 0;\n\n        xlab = (xlab === undefined) ? 30 : xlab;\n        ylab = (ylab === undefined) ? 30 : ylab;\n\n\n        if (flags.exactbox) {\n            iscl = Math.floor(stk1.x1);\n            isct = Math.floor(stk1.y1);\n            iscr = Math.floor(stk1.x2);\n            iscb = Math.floor(stk1.y2);\n            width = iscr - iscl;\n            height = iscb - isct;\n        } else {\n            iscl = Math.max(Math.floor(stk1.x1) - 2, 0);\n            isct = Math.max(Math.floor(stk1.y1) - 2, 0);\n            iscr = Math.min(Math.floor(stk1.x2) + 2, Mx.width);\n            iscb = Math.min(Math.floor(stk1.y2) + 2, Mx.height);\n            width = iscr - iscl - 4;\n            height = iscb - isct - 4;\n        }\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        if (flags.fillStyle) {\n            if (Array.isArray(flags.fillStyle)) {\n                ctx.fillStyle = mx.linear_gradient(Mx, 0, 0, 0, iscb - isct, flags.fillStyle);\n            } else {\n                ctx.fillStyle = flags.fillStyle;\n            }\n        } else {\n            ctx.fillStyle = Mx.bg;\n        }\n        ctx.fillRect(iscl, isct, iscr - iscl, iscb - isct);\n\n        if (!flags.noaxisbox) {\n            mx.textline(Mx, iscl, isct, iscr, isct);\n            mx.textline(Mx, iscr, isct, iscr, iscb);\n            mx.textline(Mx, iscr, iscb, iscl, iscb);\n            mx.textline(Mx, iscl, iscb, iscl, isct);\n        }\n\n        var xTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n        var yTIC = {\n            dtic: 0,\n            dtic1: 0\n        };\n\n        if (xdiv < 0) {\n            xTIC.dtic1 = stk1.xmin;\n            xTIC.dtic = (stk1.xmin - stk1.xmax) / xdiv;\n        } else {\n            xTIC = mx.tics(stk1.xmin, stk1.xmax, xdiv, flags.xtimecode);\n        }\n\n\n        var _xmult = 1.0;\n        if (flags.xmult) { // if xmult was provided\n            _xmult = flags.xmult;\n        } else if (!flags.xtimecode) {\n            _xmult = mx.mult(stk1.xmin, stk1.xmax);\n        }\n        if (ydiv < 0) {\n            yTIC.dtic1 = stk1.ymin;\n            yTIC.dtic = (stk1.ymin - stk1.ymax) / ydiv;\n        } else {\n            yTIC = mx.tics(stk1.ymin, stk1.ymax, ydiv, flags.ytimecode);\n        }\n        var _ymult = 1.0;\n        if (flags.ymult) { // if ymult was provided\n            _ymult = flags.ymult;\n        } else if (!flags.ytimecode) {\n            _ymult = mx.mult(stk1.ymin, stk1.ymax);\n        }\n\n        var xticlabels = !flags.noxtlab;\n        var yticlabels = !flags.noytlab;\n\n        // add labels\n        var ix = Math.max(0, iscl - 4 * Mx.text_w);\n        var iy = 0;\n        if (flags.ontop) {\n            iy = Math.min(Mx.height, Math.floor(iscb + 1.5 * Mx.text_h));\n        } else {\n            iy = Math.max(Mx.text_h, Math.floor(isct - 0.5 * Mx.text_h));\n        }\n\n        var xlabel;\n        var ylabel;\n\n        if (iy > 0) {\n            var ly = 0;\n            if (!flags.noyplab) {\n                if (flags.ylabel instanceof Function) {\n                    ylabel = flags.ylabel(ylab, _ymult);\n                } else if (flags.ylabel !== undefined) {\n                    ylabel = flags.ylabel;\n                } else {\n                    ylabel = m.label(ylab, _ymult);\n                }\n            }\n            if (!flags.noxplab) {\n                if (flags.xlabel instanceof Function) {\n                    xlabel = flags.xlabel(xlab, _xmult);\n                } else if (flags.xlabel !== undefined) {\n                    xlabel = flags.xlabel;\n                } else {\n                    xlabel = m.label(xlab, _xmult);\n                }\n            }\n        }\n\n        if (xlabel && ylabel) {\n            mx.text(Mx, ix, iy, ylabel + \" vs \" + xlabel);\n        } else if (xlabel) {\n            mx.text(Mx, ix, iy, xlabel);\n        } else if (ylabel) {\n            mx.text(Mx, ix, iy, ylabel);\n        }\n\n        var itext = 5.5 * Mx.text_w;\n        var jtext = 0;\n        if (flags.ontop) {\n            if (flags.inside) {\n                jtext = isct + 1.0 * Mx.text_h;\n            } else {\n                jtext = isct - 0.2 * Mx.text_h;\n            }\n        } else {\n            if (flags.inside) {\n                jtext = iscb - 0.5 * Mx.text_h;\n            } else {\n                jtext = iscb + 1.0 * Mx.text_h + 2;\n            }\n        }\n        var fact;\n        if (stk1.xmin !== stk1.xmax) {\n            fact = width / (stk1.xmax - stk1.xmin);\n        } else {\n            fact = width / 1.0;\n        }\n\n        var fmul;\n        if (_xmult !== 0) {\n            fmul = 1.0 / _xmult;\n        } else {\n            fmul = 1.0;\n        }\n\n        // Figure out how many characters can fit between tics\n        var xlbl_maxlen = Math.min(12, Math.round(fact * xTIC.dtic) / Mx.text_w);\n\n        // The sp flag decides if all tics should be labeled, or just the first tic.\n        // in LEGACY rendering when sp=0 you should get one tic at the start\n        // that then displays like XPOS += tic-delta\n        //\n        // The original logic basically says, if the tic-delta (i.e. dtic) is very small\n        // relative to the first tic, only render the first tic.  Specifically:\n        //    sp = (Math.abs(xTIC.dtic) / Math.max(Math.abs(xTIC.dtic1), Math.abs(xTIC.dtic)) > 1.0e-6);\n        //\n        // However, it's probably more important to decide this based off the significant digits of the\n        // tic labels.  In other words, if the tics cannot be labeled uniquely then you need to make sp=0.\n        var sp = 1;\n        var x;\n        var xlbl = \"\";\n        if (xticlabels) {\n            if (flags.xtimecode) {\n                xlbl = m.sec2tod(xTIC.dtic1);\n                // If the label is no longer than half of the total width display multiple labels\n                sp = (xlbl.length * Mx.text_w < (iscr - iscl) / 2);\n            } else {\n                // Ensure that all of the tic labels will render uniquely\n                var last_xlbl;\n                for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n                    xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                    if (xlbl === last_xlbl) {\n                        sp = 0;\n                        break;\n                    }\n                    last_xlbl = xlbl;\n                }\n            }\n        }\n        if (xTIC.dtic === 0) {\n            xTIC.dtic = stk1.xmax - xTIC.dtic1 + 1.0;\n        }\n\n        var i;\n        ix = 0;\n        xlbl = \"\";\n        for (x = xTIC.dtic1; x <= stk1.xmax; x = x + xTIC.dtic) {\n            i = iscl + Math.round(fact * (x - stk1.xmin)) + 2;\n            if (i < iscl) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"y\") {\n                if (!flags.gridStyle) {\n                    if (mx.LEGACY_RENDER) {\n                        flags.gridStyle = {\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    } else {\n                        flags.gridStyle = {\n                            \"color\": Mx.xwms,\n                            mode: \"dashed\",\n                            on: 1,\n                            off: 3\n                        };\n                    }\n                }\n                mx.textline(Mx, i, iscb, i, isct, flags.gridStyle);\n            } else {\n                mx.textline(Mx, i, iscb - 2, i, iscb + 2);\n                mx.textline(Mx, i, isct - 2, i, isct + 2);\n            }\n            if (xticlabels) {\n                if (sp) {\n                    xlbl = null;\n                    if (flags.xtimecode) {\n                        // If we have enough space to draw the next tic label\n                        if (i > ix) {\n                            xlbl = m.sec2tod(x, true);\n                            ix = i + (Mx.text_w * (xlbl.length + 1));\n                        }\n                    } else {\n                        xlbl = mx.format_f(x * fmul, xlbl_maxlen, xlbl_maxlen / 2);\n                        xlbl = trimlabel(xlbl, true);\n                    }\n                    if (xlbl) {\n                        var itexti = Math.round(xlbl.length / 2) * Mx.text_w;\n                        if (flags.inside) {\n                            i = Math.max(iscl + itexti, i);\n                            i = Math.min(iscr - itexti, i);\n                        }\n                        if (i - itexti >= 0) {\n                            mx.text(Mx, i - itexti, jtext, xlbl);\n                        }\n                    }\n                } else if (x === xTIC.dtic1) {\n                    if (flags.xtimecode) {\n                        xlbl = m.sec2tod(x, true);\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + m.sec2tod(xTIC.dtic));\n                    } else {\n                        xlbl = (xTIC.dtic1 * fmul).toString();\n                        if (flags.inside) {\n                            i = Math.floor(Math.max(iscl + itext, i));\n                        }\n                        mx.text(Mx, i - itext, jtext, xlbl + \" +\\u0394 \" + (xTIC.dtic * fmul));\n                    }\n                }\n            }\n        }\n\n        // Add y-tick marks\n        if (flags.yonright) { // TODO - yonright probably doesn't work\n            if (flags.inside) {\n                itext = Math.min(iscr - 6 * Mx.text_w, Mx.width - 5 * Mx.text_w);\n            } else {\n                itext = Math.min(iscr + Mx.text_w, Mx.width - 5 * Mx.text_w);\n            }\n        } else {\n            if (flags.inside) {\n                itext = Math.max(0, iscl + Mx.text_w);\n            } else {\n                itext = Math.max(0, Math.floor(iscl - (Mx.l - 0.5) * Mx.text_w));\n            }\n        }\n        jtext = 0.4 * Mx.text_h;\n        if (stk1.ymin !== stk1.ymax) {\n            fact = -height / (stk1.ymax - stk1.ymin);\n        } else {\n            fact = -height / 1.0;\n        }\n        if (_ymult !== 0) {\n            fmul = 1.0 / _ymult;\n        } else {\n            fmul = 1;\n        }\n        var ytic, ytic1, endtic;\n        if (yTIC.dtic === 0) {\n            ytic = stk1.ymax - ytic1 + 1.0;\n        }\n        if (stk1.ymax >= stk1.ymin) {\n            endtic = function(val) {\n                return (val <= stk1.ymax);\n            };\n        } else {\n            endtic = function(val) {\n                return (val >= stk1.ymax);\n            };\n        }\n        var ylbl;\n        for (var y = yTIC.dtic1; endtic(y); y = y + yTIC.dtic) {\n            i = iscb + Math.round(fact * (y - stk1.ymin)) - 2;\n            if (i > iscb) {\n                continue;\n            }\n            if (flags.grid && flags.grid !== \"x\") {\n                if (!flags.gridStyle) {\n                    flags.gridStyle = {\n                        mode: \"dashed\",\n                        on: 1,\n                        off: 3\n                    };\n                }\n                mx.textline(Mx, iscl, i, iscr, i, flags.gridStyle);\n            } else {\n                mx.textline(Mx, iscl - 2, i, iscl + 2, i);\n                mx.textline(Mx, iscr - 2, i, iscr + 2, i);\n            }\n            if (yticlabels) {\n                // TODO\n                if (flags.inside &&\n                    ((i < isct + Mx.text_h) || (i > iscb - Mx.text_h * 2))) {\n                    // out of range for inside labels\n                } else if (flags.ytimecode) {\n                    ylbl = m.sec2tod(y); // don't trim zeros because we use them later\n                    // y-axis timecodes\n                    // use three lines\n                    // YYYY:MM:DD\n                    // HH:MM\n                    // SS.factional\n                    var k = i + jtext - Mx.text_h;\n                    var sep = ylbl.indexOf(\"::\");\n                    if (sep !== -1) {\n                        if (k > isct && k < iscb) {\n                            // it the label has space, draw it\n                            mx.text(Mx, itext, k, ylbl.substring(0, sep));\n                        }\n                        sep += 1; // adjust for the next stage\n                    }\n                    // The draw the primary portion\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl.substring(sep + 1, sep + 6));\n                    // Finally the sections portion if it fits on the screen\n                    // and is necessary\n                    k = i + jtext + Mx.text_h;\n                    if ((k > isct && k < iscb)) {\n                        if (ylbl.substring(sep + 7, sep + 9) !== \"00\") {\n                            // add the .00 which is safe to do unconditionally because\n                            // we truncate on the following line and we know that\n                            // sec2tod either returns no decimal places or 6 decimal places\n                            ylbl = ylbl + \".00\";\n                            mx.text(Mx, itext, k, ylbl.substring(sep + 7, sep + 12));\n                        }\n                    }\n                } else {\n                    ylbl = mx.format_f(y * fmul, 12, 6);\n                    ylbl = trimlabel(ylbl, flags.inside);\n                    mx.text(Mx, itext, Math.min(iscb, i + jtext), ylbl);\n                }\n            }\n        }\n    };\n\n    /**\n     * @param x\n     * @param y\n     * @param rect_x\n     * @param rect_y\n     * @param rect_width\n     * @param rect_height\n     * @private\n     */\n    mx.inrect = function(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width &&\n            y >= rect_y && y <= rect_y + rect_height);\n    };\n    /**\n     * @private\n     */\n    var MENU_CONSTANTS = {\n        GBorder: 3,\n        sidelab: 0,\n        toplab: 1,\n        n_show: 0\n    };\n\n    /**\n     * @method _menu_redraw\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_redraw(Mx, menu) {\n        if (menu.animationFrameHandle) {\n            return;\n        }\n        // Use the current mouse position and the size of the plot to determine available space\n        //var mouse_pos = Mx.ypos; TODO: Use mouse position\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n\n        menu.animationFrameHandle = requestAnimFrame(mx.withWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n\n            menu.animationFrameHandle = undefined;\n            var yb = Mx.text_h * 1.5;\n            menu.x = Math.max(menu.x, 0);\n            menu.y = Math.max(menu.y, 0);\n            menu.x = Math.min(menu.x, Mx.width - menu.w);\n            menu.y = Math.min(menu.y, Mx.height - menu.h);\n\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yss = menu.h - 2 * MENU_CONSTANTS.GBorder - MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            mx.widgetbox(Mx, menu.x, menu.y, menu.w, menu.h, xcc, ycc, xss, yss, menu.title);\n\n            //ctx.fillStyle = xwlo;\n            //ctx.fillRect(xcc, ycc, xss, yss);\n\n            var ctx = Mx.wid_canvas.getContext(\"2d\");\n            ctx.lineWidth = 1;\n\n            ctx.strokeStyle = Mx.xwbs; // xwbs\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 4 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 4 + 0.5);\n            ctx.stroke();\n\n            ctx.strokeStyle = Mx.xwts; // xwts\n            ctx.beginPath();\n            ctx.moveTo(xcc, ycc - 3 + 0.5);\n            ctx.lineTo(xcc + xss - 1, ycc - 3 + 0.5);\n            ctx.stroke();\n\n            var i_begin = menu.queue[0];\n            var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            if (i_end === 0) {\n                // now we are starting over\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue[q] = q;\n                }\n                i_begin = menu.queue[0];\n                i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n            }\n            var menu_counter = 0;\n            for (var i = i_begin; i <= i_end; i++) {\n                var item = menu.items[i];\n                var y = ycc + yb * menu_counter;\n                menu_counter = menu_counter + 1;\n\n                if (item.style === \"separator\") {\n                    ctx.fillStyle = Mx.xwbs;\n                    ctx.fillRect(xcc, y, xss, yb);\n\n                    ctx.beginPath();\n                    ctx.moveTo(xcc, y + 0.5);\n                    ctx.lineTo(xcc + xss, y + 0.5);\n                    ctx.stroke();\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                } else {\n                    if (mx.LEGACY_RENDER) {\n                        ctx.fillStyle = Mx.xwlo;\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                        if (item.selected) {\n                            mx.shadowbox(Mx, xcc - 1, y, xss + 2, yb, 1, 2, \"\", 0.75);\n                        }\n                    } else {\n                        ctx.save();\n                        ctx.globalAlpha = 0.75;\n                        if (item.selected) {\n                            ctx.fillStyle = Mx.xwts;\n                        } else {\n                            ctx.fillStyle = Mx.xwlo;\n                        }\n                        ctx.fillRect(xcc, y, xss, yb);\n                        ctx.restore();\n                        ctx.strokeStyle = Mx.bg;\n                        ctx.beginPath();\n                        ctx.moveTo(xcc, y + 0.5);\n                        ctx.lineTo(xcc + xss, y + 0.5);\n                        ctx.stroke();\n                    }\n\n                    ctx.textBaseline = \"middle\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = Mx.xwfg;\n                    if (item.style === \"checkbox\") {\n                        ctx.fillText(\" \" + item.text + \" \", xcc + Mx.text_w * 2, y + yb / 2);\n                        ctx.strokeStyle = Mx.xwfg;\n                        ctx.strokeRect(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2), Mx.text_w, Mx.text_w);\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1 + Mx.text_w + Mx.text_w, y + ((yb - Mx.text_w) / 2));\n                            ctx.lineTo(xcc + 1 + Mx.text_w, y + ((yb - Mx.text_w) / 2) + Mx.text_w);\n                            ctx.stroke();\n                        }\n                    } else {\n                        ctx.fillText(\" \" + item.text + \" \", xcc, y + yb / 2);\n\n                        // draw the triangle\n                        if (item.checked) {\n                            ctx.beginPath();\n                            ctx.moveTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.lineTo(xcc + 1 + Mx.text_w - 2, y + Mx.text_h / 4 + Mx.text_h / 2);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4 + Mx.text_h);\n                            ctx.lineTo(xcc + 1, y + Mx.text_h / 4);\n                            ctx.fill();\n                        }\n                    }\n                }\n            }\n\n\n        }));\n    }\n\n    /**\n     * @method _menu_takeaction\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_takeaction(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        for (var i = 0; i < menu.items.length; i++) {\n            var item = menu.items[i];\n            if (item.selected) {\n                if (item.handler) {\n                    item.handler();\n                } else if (item.menu) {\n                    var newmenu = item.menu;\n                    if (typeof item.menu === 'function') {\n                        newmenu = item.menu();\n                    }\n                    newmenu.finalize = menu.finalize;\n                    mx.menu(Mx, newmenu);\n                }\n                break;\n            }\n        }\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_dismiss\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    function _menu_dismiss(Mx, menu) {\n        mx.onWidgetLayer(Mx, function() {\n            mx.erase_window(Mx);\n        });\n        if (Mx.useDomMenu) {\n            Mx.menu.remove();\n        }\n        Mx.menu = undefined;\n        Mx.widget = null;\n\n        if ((!Mx.menu) && (menu.finalize)) {\n            menu.finalize();\n        }\n    }\n\n    /**\n     * @method _menu_callback\n     * @param Mx\n     * @param menu\n     * @param event\n     * @private\n     */\n    function _menu_callback(Mx, menu, event) {\n        // Keep track of whats visible currently\n        var i_begin = menu.queue[0];\n        var i_end = menu.queue[MENU_CONSTANTS.n_show - 1];\n        if (event === undefined) {\n            // no event, just refresh the menu\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mousemove\") {\n            // Update position\n            if (menu.drag_x !== undefined && menu.drag_y !== undefined && Math.abs(Mx.xpos - menu.drag_x) > 2 && Math.abs(Mx.ypos - menu.drag_y) > 2) {\n                menu.x += Mx.xpos - menu.drag_x;\n                menu.y += Mx.ypos - menu.drag_y;\n                menu.drag_x = Mx.xpos;\n                menu.drag_y = Mx.ypos;\n            }\n\n            // All of these variables suck and are common in other places...refactoring is necessary\n            var xcc = menu.x + MENU_CONSTANTS.GBorder + Math.max(0, MENU_CONSTANTS.sidelab);\n            var xss = menu.w - 2 * MENU_CONSTANTS.GBorder - Math.abs(MENU_CONSTANTS.sidelab);\n            var yb = Mx.text_h * 1.5;\n            var ycc = menu.y + MENU_CONSTANTS.GBorder + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder);\n\n            for (var i = i_begin; i <= i_end; i++) {\n                var y = ycc + yb * i;\n                var item = menu.items[i];\n                item.selected = false;\n                if (mx.inrect(Mx.xpos, Mx.ypos, xcc, y, xss, yb)) {\n                    item.selected = true;\n                }\n            }\n            _menu_redraw(Mx, menu);\n        } else if (event.type === \"mouseup\") {\n            // No longer dragging menu\n            if (event.which === 1) {\n                if ((menu.drag_x !== undefined) && (menu.drag_y !== undefined)) {\n                    menu.drag_x = undefined;\n                    menu.drag_y = undefined;\n                } else {\n                    _menu_takeaction(Mx, menu);\n                }\n            } else if (event.which === 3) {\n                _menu_dismiss(Mx, menu);\n            }\n        } else if (event.type === \"mousedown\") {\n            event.preventDefault();\n            if (event.which === 1) {\n                if (Mx.xpos > menu.x && Mx.xpos < (menu.x + menu.w) && Mx.ypos > menu.y && Mx.ypos < (menu.y + Mx.text_h * 1.5)) {\n                    menu.drag_x = Mx.xpos;\n                    menu.drag_y = Mx.ypos;\n                }\n            } else if (event.which === 2) {\n                _menu_takeaction(Mx, menu);\n            }\n        } else if (event.type === \"keydown\") {\n            // Remember that keydown triggers periodically while a key is held\n            if (Mx.menu) {\n                var menu = Mx.menu;\n                event.preventDefault();\n                var keyCode = common.getKeyCode(event);\n                if (keyCode === 13) { // enter\n                    _menu_takeaction(Mx, menu);\n                } else if (keyCode === 38) { // up arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i - 1] !== undefined) {\n                                menu.items[i - 1].selected = true;\n                            }\n                            break;\n                        } else if (i === i_begin && i_begin !== 0) {\n                            // we are at the end of the list and nothing was selected so pick the last element\n                            //item.selected = true;\n                            menu.queue.pop();\n                            menu.queue.unshift(i_begin - 1);\n                            _menu_redraw(Mx, menu);\n                            menu.items[i_end - 1].selected = true;\n\n                        } else if (i_begin === 0 && menu.items[i_begin].selected === true) {\n                            _menu_redraw(Mx, menu);\n                            menu.items[0].selected = true;\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if (keyCode === 40) { // down arrow\n                    for (var i = i_begin; i < i_end; i++) {\n                        var item = menu.items[i];\n                        if (item.selected) {\n                            item.selected = false;\n                            if (menu.items[i + 1] !== undefined) {\n                                menu.items[i + 1].selected = true;\n                            }\n                            break;\n                        } else if (i === (i_end - 1)) {\n                            // nothing was selected so select the top\n                            var next_item = i_end + 1;\n\n                            if (i_end + 1 === menu.items.length) {\n                                next_item = 0;\n                            }\n\n                            menu.queue.shift();\n                            menu.queue.push(next_item);\n                            menu.items[i_end].selected = false;\n                            menu.items[next_item].selected = true;\n                            _menu_redraw(Mx, menu);\n                        }\n                    }\n                    _menu_redraw(Mx, menu);\n                } else if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 65 && keyCode <= 90)) {\n                    var inp = String.fromCharCode(keyCode).toUpperCase();\n\n                    if (menu.keypresses === undefined) {\n                        menu.keypresses = inp;\n                    } else {\n                        menu.keypresses = menu.keypresses + inp;\n                    }\n\n                    var matches = 0;\n                    for (var i = 0; i < menu.items.length; i++) {\n                        var item = menu.items[i];\n                        item.selected = false;\n                        if (!item.text) {\n                            continue;\n                        }\n\n                        if (item.text.toUpperCase().indexOf(menu.keypresses) === 0) {\n                            if (matches === 0) {\n                                item.selected = true;\n                            }\n                            matches++;\n                        }\n                    }\n\n                    if (matches === 0) {\n                        menu.keypresses = undefined;\n                        _menu_redraw(Mx, menu);\n                    } else if (matches === 1) {\n                        _menu_takeaction(Mx, menu);\n                    } else {\n                        _menu_redraw(Mx, menu);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param Mx\n     * @param menu\n     * @private\n     */\n    mx.menu = function(Mx, menu) {\n        if (Mx.useDomMenu) {\n            new mx.DomMenu(Mx, menu);\n            return;\n        }\n        var yb = Mx.text_h * 1.5;\n        //MENU_CONSTANTS.n_show = menu.items.length;\n\n        var plot_height = Mx.canvas.height;\n        var buffer_sz = 35; // estimate of how much of the canvas is spacing around plot\n        var avail_space = plot_height - 2 * buffer_sz;\n        // Calculate how many menu items can fit inside that space\n        var menu_item_height = Mx.text_h * 1.5;\n        var n_items = Math.floor(avail_space / menu_item_height);\n        if (n_items >= menu.items.length) {\n            MENU_CONSTANTS.n_show = menu.items.length;\n        } else {\n            MENU_CONSTANTS.n_show = n_items;\n        }\n\n        if (menu) {\n            if (!Mx.widget) {\n                menu.x = Mx.xpos;\n                menu.y = Mx.ypos;\n                menu.val = 0;\n\n                menu.h = MENU_CONSTANTS.GBorder * 2 + yb * MENU_CONSTANTS.n_show + MENU_CONSTANTS.toplab * (yb + MENU_CONSTANTS.GBorder) - 1;\n                menu.y = menu.y - ((MENU_CONSTANTS.toplab + (Math.max(1, menu.val)) - 0.5) * yb + (1 + MENU_CONSTANTS.toplab) * MENU_CONSTANTS.GBorder) + 1;\n\n                var xb = menu.title.length;\n                var yadj = 0;\n                for (var i = 0; i < menu.items.length; i++) {\n                    var item = menu.items[i];\n                    xb = Math.max(xb, item.text.length);\n                    if (item.style === \"checkbox\") {\n                        xb += 2;\n                    }\n                    if (item.style === \"separator\") {\n                        xb += 2;\n                    }\n                    if (item.checked && item.style !== \"checkbox\") {\n                        yadj = yb * i;\n                    }\n                }\n\n                menu.queue = [];\n\n                for (var q = 0; q < MENU_CONSTANTS.n_show; q++) {\n                    menu.queue.push(q);\n\n                }\n\n                menu.y = menu.y - yadj;\n                xb += 2;\n                xb = xb * Mx.text_w;\n\n                menu.w = MENU_CONSTANTS.GBorder * 2 + Math.abs(MENU_CONSTANTS.sidelab) + xb - 1;\n                menu.x = menu.x - menu.w / 2;\n\n                Mx.menu = menu;\n\n                Mx.widget = {\n                    type: \"MENU\",\n                    callback: function(event) {\n                        _menu_callback(Mx, menu, event);\n                    }\n                };\n            }\n            _menu_redraw(Mx, menu);\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param inx\n     * @param iny\n     * @param inw\n     * @param inh\n     * @param name\n     * @private\n     */\n    mx.widgetbox = function(Mx, x, y, w, h, inx, iny, inw, inh, name) {\n        var GBorder = 3;\n        mx.shadowbox(Mx, x, y, w, h, 1, 2, \"\", 0.75);\n        if (name) {\n            var length = name.length;\n            length = Math.min(length, w / Mx.text_w);\n            length = Math.max(length, 1);\n            var xt = x + (w - length * Mx.text_w) / 2;\n            y += GBorder;\n            var yt = y + (iny - y + 0.7 * Mx.text_h) / 2;\n\n            mx.text(Mx, xt, yt, name, Mx.xwfg);\n        }\n        if (inw > 0 && inh > 0) {\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            if (mx.LEGACY_RENDER) {\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n            } else {\n                ctx.save();\n                ctx.globalAlpha = 0.1;\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(inx, iny, inw, inh);\n                ctx.restore();\n            }\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param lbl\n     * @param color\n     * @private\n     */\n    //\n    // ~= MX$TEXT\n    //\n    mx.text = function(Mx, x, y, lbl, color) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        x = Math.max(0, x);\n        y = Math.max(0, y);\n        if ((x < 0) || (y < 0)) {\n            throw \"On No!\";\n        }\n        ctx.textBaseline = \"bottom\";\n        ctx.textAlign = \"left\";\n        ctx.font = Mx.font.font;\n        if (color === undefined) {\n            ctx.fillStyle = Mx.fg;\n        } else {\n            ctx.fillStyle = color;\n        }\n\n        ctx.fillText(lbl, x, y);\n    };\n\n    /**\n     * @method clipt\n     * @param denom\n     * @param num\n     * @param o\n     * @private\n     */\n    // ~= glibf1.for CLIPT\n    function clipt(denom, num, o) {\n        var accept = true;\n        var t;\n\n        t = num / denom;\n        if (denom > 0) {\n            if (t > o.tL) {\n                accept = false;\n            } else if (t > o.tE) {\n                o.tE = t;\n            }\n        } else if (denom < 0) {\n            if (t < o.tE) {\n                accept = false;\n            } else if (t < o.tL) {\n                o.tL = t;\n            }\n        } else {\n            if (num > 0) {\n                accept = false;\n            }\n        }\n\n        return accept;\n    }\n\n    /**\n     * Method which draws a line in a graphics context.\n     * In the graphics context provided, draws a line.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_line\n     * @param ctx\n     * @param x1\n     * @param y1\n     * @param x2\n     * @param y2\n     * @param style\n     * @param color\n     * @param width\n     * @private\n     */\n    function draw_line(ctx, x1, y1, x2, y2, style, color, width) {\n        // For odd width lines (i.e. 1,3,5...) if you draw right\n        // on the pixel boundry the canvas will actually draw a slightly\n        // grey line 2 px wide.  You have to add .5 to get what you want.\n\n        // Handle boundary cases - instead of throwing an exception, just bound\n        // the value to 0\n        if (x1 < 0) {\n            x1 = 0;\n        }\n        if (y1 < 0) {\n            y1 = 0;\n        }\n        if (x2 < 0) {\n            x2 = 0;\n        }\n        if (y2 < 0) {\n            y2 = 0;\n        }\n\n        if (width) {\n            ctx.lineWidth = width;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        if (ctx.lineWidth % 2 === 1) {\n            if (x1 === x2) {\n                x1 = Math.floor(x1) + 0.5;\n                x2 = x1;\n            }\n            if (y1 === y2) {\n                y1 = Math.floor(y1) + 0.5;\n                y2 = y1;\n            }\n        }\n\n        if (!style || !style.mode) {\n            ctx.beginPath();\n            ctx.moveTo(x1, y1);\n            ctx.lineTo(x2, y2);\n            ctx.stroke();\n            ctx.beginPath();\n        } else if (style.mode === \"dashed\") {\n            var dash_supported = common.dashOn(ctx, style.on, style.off);\n            if (dash_supported) {\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                common.dashOff(ctx);\n                ctx.beginPath();\n            } else {\n                // Fallback that only supports vertical/horizontal\n                ctx.beginPath();\n                if (y1 === y2) {\n                    var x = Math.min(x1, x2);\n                    x2 = Math.max(x1, x2);\n                    while (x < x2) {\n                        ctx.moveTo(x, y1);\n                        ctx.lineTo(x + style.on, y1);\n                        ctx.stroke();\n                        x += (style.on + style.off);\n                    }\n                } else if (x1 === x2) {\n                    // vertical line\n                    var y = Math.min(y1, y2);\n                    y2 = Math.max(y1, y2);\n                    while (y < y2) {\n                        ctx.moveTo(x1, y);\n                        ctx.lineTo(x1, y + style.on);\n                        ctx.stroke();\n                        y += (style.on + style.off);\n                    }\n                } else {\n                    throw \"Only horizontal or vertical dashed lines are supported\";\n                }\n                ctx.beginPath();\n            }\n        } else if (style.mode === \"xor\") {\n            if (typeof Uint8ClampedArray === 'undefined') {\n                // we don't have typed arrays, so canvas getImageData operations\n                // will be very slow, so use color instead\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.lineTo(x2, y2);\n                ctx.stroke();\n                ctx.beginPath();\n            } else {\n                // currently xor-style is only supported for horizontal or vertical lines\n                var w = 0;\n                var h = 0;\n                if (y1 === y2) {\n                    w = Math.abs(x2 - x1);\n                    h = width;\n                    x1 = Math.min(x1, x2);\n                } else if (x1 === x2) {\n                    w = width;\n                    h = Math.abs(y2 - y1);\n                    y1 = Math.min(y1, y2);\n                } else {\n                    throw \"Only horizontal and vertical lines can be drawn with XOR\";\n                }\n\n                if ((w === 0) || (h === 0)) {\n                    return;\n                }\n\n                x1 = Math.floor(x1);\n                y1 = Math.floor(y1);\n                var imgd = ctx.getImageData(x1, y1, w, h);\n                var pix = imgd.data;\n                // Loop over each pixel and invert the color.\n                for (var i = 0, n = pix.length; i < n; i += 4) {\n                    pix[i] = 255 - pix[i]; // red\n                    pix[i + 1] = 255 - pix[i + 1]; // green\n                    pix[i + 2] = 255 - pix[i + 2]; // blue\n                    pix[i + 3] = 255; // opacity\n                }\n                ctx.putImageData(imgd, x1, y1);\n                ctx.clearRect(0, 0, 1, 1);\n            }\n        }\n    }\n\n    /**\n     * Method which draws a polygon in a graphics context.\n     * In the graphics context provided, draws a polygon.\n     * Mimics XLib's XDrawLines method in at least the basic functionality.\n     * @method draw_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param color - The color of the rectangle\n     * @param width - The line width to set.\n     * @private\n     */\n    function draw_poly(ctx, pix, color, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.stroke(); // draw the shape outlined in the path\n        ctx.closePath();\n    }\n\n    /**\n     * Method which draws a filled polygon in a graphics context.\n     * In the graphics context provided draws a polygon, then fills it.\n     * Mimics XLib's XFillPolygon method in at least the basic functionality.\n     * Some differences between this and Xlib's method are:\n     *  -no way to specify convex/non-convex\n     *  -no way to specify CoordModeOrigin\n     *  -no need to specify the number of points to draw (plots all points in pix)\n     * @method fill_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param lineColor - The line color of the polygon\n     * @param fillColor - The fill color of the polygon\n     * @param lineWidth - The line width to set\n     * @private\n     */\n    function fill_poly(ctx, pix, lineColor, fillColor, width) { // TODO Should this be a public method?\n        start_poly(ctx, pix, width);\n\n        if (lineColor) {\n            ctx.strokeStyle = lineColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fill(); // fill in the shape only, no outline drawn\n        ctx.closePath();\n    }\n\n    /**\n     * Helper method which starts drawing a polygon in a graphics context.\n     * In the graphics context provided, begins a path at the first point in pix,\n     * then draws lines from each point in pix to the next. It also sets the width\n     * of the line.\n     * @method start_poly\n     * @param ctx - The graphics context to draw in\n     * @param pix - Defined as [\\{\"x\": xval, y: \"y\": yval\\}, \\{\"x\": xval, \"y\":yval\\}...].\n     *              xval and yval represent their respective coordinate values in the tuples\n     *\t\t\t\tnumber of points in the structure can be retrieved via pix.length.\n     * @param width - The line width to set.\n     * @private\n     */\n    function start_poly(ctx, pix, width) {\n        if (pix.length < 1) {\n            return;\n        }\n\n        var x = pix[0].x;\n        var y = pix[0].y;\n\n        if (width) {\n            ctx.lineWidth = width;\n        } else {\n            ctx.lineWidth = 1; // Default\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n\n        for (var i = 0; i < pix.length; i++) {\n            x = pix[i].x;\n            y = pix[i].y;\n            ctx.lineTo(x, y);\n        }\n    }\n\n    /**\n     * Method which draws a rectangle (hollowed) in a graphics context.\n     * In the graphics context provided, draws a hollow rectangle.\n     * Mimics XLib's XDrawRectangle method in at least the basic functionality.\n     * @method draw_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param color - The color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function draw_rectangle(ctx, x, y, width, height, color, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (color) {\n            ctx.strokeStyle = color;\n        }\n\n        ctx.strokeRect(x, y, width, height);\n    }\n\n    /**\n     * Method which draws a rectangle (filled) in a graphics context.\n     * In the graphics context provided, draws a filled rectangle.\n     * Mimics XLib's XFillRectangle method in at least the basic functionality.\n     * @method fill_rectangle\n     * @param ctx - The graphics context to draw in\n     * @param x - The x coordinate\n     * @param y - The y coordinate\n     * @param width - The width of the rectangle\n     * @param height - The height of the rectangle\n     * @param fillColor - The fill color of the rectangle\n     * @param strokeColor - The line color of the rectangle\n     * @param lineWidth - The line width to set.\n     * @private\n     */\n    function fill_rectangle(ctx, x, y, width, height, fillColor, strokeColor, lineWidth) { // TODO Should this be a public method?\n        if (lineWidth) {\n            ctx.lineWidth = lineWidth;\n        }\n        if (strokeColor) {\n            ctx.strokeStyle = strokeColor;\n        }\n        if (fillColor) {\n            ctx.fillStyle = fillColor;\n        }\n\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * @method pc2px\n     * @param perc\n     * @private\n     */\n    function pc2px(perc) {\n        return Math.floor(Math.round(255 * (perc / 100)));\n    }\n\n    /**\n     * @method to_rgb\n     * @param red\n     * @param green\n     * @param blue\n     * @private\n     */\n    function to_rgb(red, green, blue) {\n        return \"rgb(\" + Math.round(red) + \", \" + Math.round(green) + \", \" + Math.round(blue) + \")\";\n    }\n\n    /**\n     *\n     * Instead of dealing with color tables and stuff, all we really need\n     * is the ability to on-the-fly generate a color from the map\n     * @param Mx\n     * @param map\n     * @param z\n     * @private\n     */\n    mx.getcolor = function(Mx, map, z) {\n        var iz = 0;\n        for (; iz < 6 && map[iz + 1].pos === 0; iz++) {}\n\n        while (z > map[iz].pos && iz < 6) {\n            iz++;\n        }\n        if ((iz === 0) || (z >= map[iz].pos)) {\n            // above, below, or directly on boundry\n            return to_rgb(\n                pc2px(map[iz].red),\n                pc2px(map[iz].green),\n                pc2px(map[iz].blue));\n        } else {\n            // interpolation my dear watson\n            var pf = (z - map[iz - 1].pos) / (map[iz].pos - map[iz - 1].pos);\n            var zf = pc2px(pf * 100);\n            var zf1 = 255 - zf;\n            return to_rgb(\n                (zf * (map[iz].red / 100) + zf1 * (map[iz - 1].red / 100)), (zf * (map[iz].green / 100) + zf1 * (map[iz - 1].green / 100)), (zf * (map[iz].blue / 100) + zf1 * (map[iz - 1].blue / 100)));\n        }\n    };\n\n    /**\n     * @method trimlabel\n     * @param lbl\n     * @param inside\n     * @private\n     */\n    // ~= glibf1.for TRIMLABEL\n    function trimlabel(lbl, inside) {\n        var k;\n        var j;\n        if (lbl.substring(5, 8) === \".000000\") { // this line seems to always evaluate to false\n            k = 4;\n        } else {\n            k = lbl.length - 1;\n            while (lbl[k] === \"0\") {\n                k = k - 1;\n            }\n        }\n        j = 0;\n        while ((lbl[j] === \" \") && ((k - j + 1 > 5) || inside)) {\n            j = j + 1;\n        }\n        var res = lbl.substring(j, k + 1);\n        if (res.indexOf(\".\") === -1) {\n            res += \".\";\n        }\n        return res;\n    }\n\n    /**\n     * @param Mx\n     * @private\n     */\n    mx.redraw_warpbox = function(Mx) {\n        if (Mx.warpbox) {\n            if (Mx._animationFrameHandle) {\n                cancelAnimFrame(Mx._animationFrameHandle);\n            }\n            Mx._animationFrameHandle = requestAnimFrame(function() {\n                display_warpbox(Mx);\n            });\n        }\n    };\n\n    /**\n     * @method display_warpbox\n     * @param Mx\n     * @private\n     */\n    function display_warpbox(Mx) {\n        Mx._animationFrameHandle = undefined;\n        var warpbox = Mx.warpbox;\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!warpbox) {\n            return;\n        }\n\n        if (((Mx.xpos >= warpbox.xmin) && (Mx.xpos <= warpbox.xmax)) &&\n            ((Mx.ypos >= warpbox.ymin) && (Mx.ypos <= warpbox.ymax))) {\n\n            // Update the position\n            if (mx.LEGACY_BEHAVIOR) {\n                warpbox.xl = Mx.xpos;\n                warpbox.yl = Mx.ypos;\n            } else {\n                warpbox.xl = Math.min(Mx.r, Math.max(Mx.xpos, Mx.l));\n                warpbox.yl = Math.min(Mx.b, Math.max(Mx.ypos, Mx.t));\n            }\n\n            // Draw the current box\n            var x = Math.min(warpbox.xo, warpbox.xl);\n            var y = Math.min(warpbox.yo, warpbox.yl);\n            var w = Math.abs(warpbox.xl - warpbox.xo);\n            var h = Math.abs(warpbox.yl - warpbox.yo);\n\n            if ((w === 0) || (h === 0)) {\n                // Nothing to draw\n                return;\n            }\n\n            if (warpbox.mode === \"vertical\") {\n                x = Mx.l;\n                w = Mx.r - Mx.l;\n            } else if (warpbox.mode === \"horizontal\") {\n                y = Mx.t;\n                h = Mx.b - Mx.t;\n            } // else box\n\n            mx.onWidgetLayer(Mx, function() {\n                mx.erase_window(Mx);\n                mx.draw_box(Mx, \"xor\", x, y, w, h, warpbox.style.opacity, warpbox.style.fill_color);\n            });\n        }\n\n    }\n\n    /**\n     * @method log10\n     * @param val\n     * @private\n     */\n    function log10(val) {\n        return Math.log(val) / Math.log(10);\n    }\n\n\n    /**\n     * Attempts to format a number in the same manner\n     * as the FORTRAN format code 1p1g16.9\n     * 1p1g16.9\n     * 16 character fields\n     * 9 for decimals\n     * 3 for exponent (E)\n     * 1 for sign\n     * 1 for starting 0\n     * 1 for decimal point\n     * 1 for blank space\n     *\n     * The E format code is used for scientific (exponential) notation.\n     * The value is rounded to d decimal positions and right-justified\n     * into an external field that is w characters wide. The value of w\n     * must be large enough to include a minus sign when necessary, at least\n     * one digit to the left of the decimal point, the decimal point,\n     * d digits to the right of the decimal point, a plus or minus sign for\n     * the exponent, the character \"e\" or \"E\", and at least two characters for the exponent.\n     *\n     * The G format code uses the F output style when reasonable and\n     * E for other values, but displays exactly d significant digits\n     * rather than d digits following the decimal point.\n     *\n     * @param num\n     * @param w\n     * @param d\n     * @param leading_nonzer\n     * @private\n     */\n    mx.format_g = function(num, w, d, leading_nonzero) {\n        var w = Math.min(w, d + 7);\n        var f = Math.abs(num).toString();\n\n        var decloc = f.indexOf(\".\");\n        // If there is no decimal point, add one at the end.\n        if (decloc === -1) {\n            f = f + \".\";\n            decloc = f.length;\n        }\n\n        var exp = 0;\n        var eloc = f.indexOf(\"e\");\n        // If there is already an 'e' in the string parse it out\n        if (eloc !== -1) {\n            exp = parseInt(f.slice(eloc + 1, f.length), 10);\n            f = f.slice(0, eloc);\n        }\n\n        // Add zero's to the end if necessary\n        var dz = Math.min(d - (f.length - decloc) + 1, d);\n        for (var i = 0; i < dz; i++) {\n            f = f + \"0\";\n        }\n\n        if (num !== 0) {\n            if (Math.abs(num) < 1.0) {\n                if (f.slice(0, 2) === \"0.\") {\n                    // Shift to the left until the first number is non-zero\n                    for (var i = 2; i < f.length; i++) {\n                        if (f[i] === \"0\") {\n                            exp -= 1;\n                        } else {\n                            f = \"0.\" + f.slice(i, i + d);\n                            break;\n                        }\n                    }\n                } else {\n                    f = f.slice(0, d + 2);\n                }\n            } else if (decloc > d) {\n                var exp = Math.max(0, decloc - 1);\n                f = f[0] + \".\" + f.slice(1, d + 1);\n            } else {\n                f = f.slice(0, d + 2);\n            }\n        }\n\n        if (exp === 0) {\n            f = f + \"    \";\n        } else {\n            var e = mx.pad(Math.abs(exp).toString(), 2, \"0\");\n            if (exp < 0) {\n                f = f + \"E-\" + e;\n            } else {\n                f = f + \"E+\" + e;\n            }\n        }\n\n        if (num < 0) {\n            f = \"-\" + f;\n        } else {\n            f = \" \" + f;\n        }\n        return f;\n    };\n\n    /**\n     *\n     * Behave like fortran format code\n     * fs.d\n     * @param num the number to format\n     * @param s the width of digits\n     * @param d number of digits after the decimal\n     * @private\n     */\n    mx.format_f = function(num, s, d) {\n        d = Math.max(Math.min(d, 20), 0);\n        var f = num.toFixed(d).toString();\n        f = mx.pad(f, (s + d), \" \");\n        return f;\n    };\n\n    /**\n     * @param s\n     * @param size\n     * @param c\n     * @private\n     */\n    mx.pad = function(s, size, c) {\n        while (s.length < size) {\n            s = c + s;\n        }\n        return s;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.legacy_shadowbox = function(Mx, x, y, w, h, shape, func, label) {\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var xt = 0; // Originally an int\n        var yt = 0; // Originally an int\n        var bw = 0; // Originally an int\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n\n        // Removed the G.BW section - since we don't need to support black & white displays\n\n        var j = (shape === mx.L_ArrowLeft || shape === mx.L_ArrowUp) ? 1 : 2;\n\n        if (func !== 0 && mx.GBorder > 0) {\n            bw = m.trunc(Math.min(w, h) / 3);\n            bw = Math.max(1, Math.min(bw, mx.GBorder));\n        }\n\n        if (bw > 0) {\n            /* outer shape */\n            pix[0].x = pix[1].x = x;\n            pix[8].x = pix[9].x = x + w;\n            pix[1].y = pix[8].y = y;\n            pix[0].y = pix[9].y = y + h;\n\n            switch (shape) {\n                case mx.L_ArrowLeft:\n                    pix[0].y = pix[1].y = y + m.trunc(h / 2);\n                    x += 2;\n                    --w;\n                    break;\n                case mx.L_ArrowRight:\n                    pix[8].y = pix[9].y = y + m.trunc(h / 2);\n                    --x;\n                    --w;\n                    break;\n                case mx.L_ArrowUp:\n                    pix[1].x = pix[8].x = x + m.trunc(w / 2);\n                    y += 2;\n                    --h;\n                    break;\n                case mx.L_ArrowDown:\n                    pix[0].x = pix[9].x = x + m.trunc(w / 2);\n                    --y;\n                    --h;\n                    break;\n            }\n            pix[2] = pix[8];\n            pix[10] = pix[0];\n\n            x += bw;\n            y += bw;\n            w -= 2 * bw;\n            h -= 2 * bw;\n        }\n\n        /* inner shape */\n        pix[4].x = pix[5].x = x;\n        pix[3].x = pix[6].x = x + w;\n        pix[3].y = pix[4].y = y;\n        pix[5].y = pix[6].y = y + h;\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                pix[4].y = pix[5].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowRight:\n                pix[3].y = pix[6].y = y + m.trunc(h / 2);\n                break;\n            case mx.L_ArrowUp:\n                pix[3].x = pix[4].x = x + m.trunc(w / 2);\n                break;\n            case mx.L_ArrowDown:\n                pix[5].x = pix[6].x = x + m.trunc(w / 2);\n                break;\n        }\n        pix[7] = pix[3];\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (bw > 0) {\n            ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(0, 7));\n            //\tif (shape !== 1) { draw_poly(ctx, pix.slice(0,7)); } // TODO what shape is this neccessary with - causes an issue with arrows\n\n            ctx.fillStyle = (func < 0) ? Mx.xwts : Mx.xwbs; // Set foreground color\n            fill_poly(ctx, pix.slice(5, 11));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(5, 11)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        if (fill) {\n            ctx.fillStyle = Mx.xwbg; // Set foreground color\n            fill_poly(ctx, pix.slice(3, 8));\n            //if (shape !== 1) { draw_poly(ctx, pix.slice(3, 8)); } // TODO what shape is this neccessary with - causes an issue with arrows\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param shape\n     * @param func\n     * @param label\n     * @private\n     */\n    // ~= MX$SHADOWBOX\n    mx.sigplot_shadowbox = function(Mx, x, y, w, h, shape, func, label, alpha) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var length = label.length; // Original method declaration includes a length - but it only represents the length of the label\n\n        var color = (func < 0) ? Mx.xwts : Mx.xwbs;\n\n        alpha = alpha || 1.0;\n\n        var pix = []; // Originally declared as a size 11 XPoint array\n        for (var cnt = 0; cnt < 11; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        switch (shape) {\n            case mx.L_ArrowLeft:\n            case mx.L_ArrowRight:\n            case mx.L_ArrowUp:\n            case mx.L_ArrowDown:\n                var pix = mx.chevron(shape, x, y, w, h);\n                ctx.fillStyle = (func > 0) ? Mx.xwts : Mx.xwbs;\n                fill_poly(ctx, pix.slice(0, 6));\n                break;\n            default:\n                mx.draw_round_box(Mx, color, x, y, w, h, alpha, Mx.xwbg, 5, Mx.xwbs);\n                break;\n        }\n\n        ctx.fillStyle = Mx.xwfg; // Set foreground color\n        ctx.textBaseline = \"alphabetic\"; // Reset vertical text alignment\n\n        var fill = !(func === 1 || func === -1); // Originally a bool\n        if (fill && length > 0) {\n            length = Math.min(length, m.trunc(w / Mx.text_w));\n            length = Math.max(length, 1);\n            var xt = x + m.trunc((w - length * Mx.text_w) / 2);\n            var yt = y + m.trunc((h + 0.7 * Mx.text_h) / 2);\n            ctx.fillText(label, xt, yt); // Draw a string\n        }\n    };\n\n    if (mx.LEGACY_RENDER) { // TODO new-style conditional\n        mx.shadowbox = mx.legacy_shadowbox;\n    } else {\n        mx.shadowbox = mx.sigplot_shadowbox;\n    }\n\n    mx.chevron = function(shape, x, y, w, h, e) {\n        // Figure out the largest square dimension\n        var q = Math.min(w, h);\n\n        // if the edge width isn't provided use a decent one\n        if (!e) {\n            e = q * 0.25;\n        }\n\n\n\n        // Initialize the pixel array\n        var pix = [];\n        for (var cnt = 0; cnt < 6; cnt++) { // initializing 11 points in the array\n            pix[cnt] = {\n                x: 0,\n                y: 0\n            };\n        }\n\n\n        var x_offset = m.trunc(((w - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        var y_offset = m.trunc(((h - q) / 2) + (q / 4) - (e / (2 * 1.414)));\n        switch (shape) {\n            case mx.L_ArrowLeft:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + x_offset + m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + x_offset + m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + x_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + x_offset + m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowRight:\n                // Chevron points from the tip around the edge clockwise\n                pix[0].x = x + w - x_offset;\n                pix[0].y = y + m.trunc(q / 2);\n                pix[1].x = x + w - x_offset - m.trunc(q / 2);\n                pix[1].y = y;\n                pix[2].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[2].y = y + m.trunc(e / 1.414);\n                pix[3].x = x + w - x_offset - m.trunc((2 * e) / 1.414);\n                pix[3].y = y + m.trunc(q / 2);\n                pix[4].x = x + w - x_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[4].y = y + h - m.trunc(e / 1.414);\n                pix[5].x = x + w - x_offset - m.trunc(q / 2);\n                pix[5].y = y + q;\n                break;\n            case mx.L_ArrowUp:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + y_offset;\n                pix[1].x = x;\n                pix[1].y = y + y_offset + m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + y_offset + m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + y_offset + m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + y_offset + m.trunc(q / 2);\n                break;\n            case mx.L_ArrowDown:\n                // Chevron points from the tip around the edge counter-clockwise\n                pix[0].x = x + m.trunc(q / 2);\n                pix[0].y = y + h - y_offset;\n                pix[1].x = x;\n                pix[1].y = y + h - y_offset - m.trunc(q / 2);\n                pix[2].x = x + m.trunc(e / 1.414);\n                pix[2].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[3].x = x + m.trunc(q / 2);\n                pix[3].y = y + h - y_offset - m.trunc((2 * e) / 1.414);\n                pix[4].x = x + w - m.trunc(e / 1.414);\n                pix[4].y = y + h - y_offset - m.trunc((q / 2) + (e / 1.414));\n                pix[5].x = x + q;\n                pix[5].y = y + h - y_offset - m.trunc(q / 2);\n                break;\n        }\n\n        return pix;\n    };\n\n    /**\n     * @param Mx\n     * @param mouseEvent\n     * @private\n     */\n    // ~= mx_ifevent\n    mx.ifevent = function(Mx, mouseEvent) {\n        Mx.button_press = 0;\n        Mx.button_release = 0;\n        Mx.state_mask = 0;\n\n        var rect = mouseEvent.target.getBoundingClientRect();\n        var eventXPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageX - rect.left - window.scrollX) : mouseEvent.offsetX;\n        var eventYPos = (mouseEvent.offsetX === undefined) ? (mouseEvent.pageY - rect.top - window.scrollY) : mouseEvent.offsetY;\n\n        //\t\tvar eventXPos = (mouseEvent.offsetX === undefined) ? mouseEvent.layerX : mouseEvent.offsetX;\n        //\t\tvar eventYPos = (mouseEvent.offsetY === undefined) ? mouseEvent.layerY : mouseEvent.offsetY;\n\n        switch (mouseEvent.type) {\n            case \"mousedown\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_press = 1;\n                        break;\n                    case 2:\n                        Mx.button_press = 2;\n                        break;\n                    case 3:\n                        Mx.button_press = 3;\n                        break;\n                    case 4:\n                        Mx.button_press = 4;\n                        break;\n                    case 5:\n                        Mx.button_press = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n            case \"mouseup\":\n                Mx.xpos = m.bound(eventXPos, 0, Mx.width);\n                Mx.ypos = m.bound(eventYPos, 0, Mx.height);\n                switch (mouseEvent.which) {\n                    case 1:\n                        Mx.button_release = 1;\n                        break;\n                    case 2:\n                        Mx.button_release = 2;\n                        break;\n                    case 3:\n                        Mx.button_release = 3;\n                        break;\n                    case 4:\n                        Mx.button_release = 4;\n                        break;\n                    case 5:\n                        Mx.button_release = 5;\n                }\n                //Mx.state_mask = TODO\n                break;\n        }\n    };\n\n    /**\n     * @param sv\n     * @private\n     */\n    //\n    // ~= scroll_real2pix\n    //\n    // TODO Refactor real2pix to return an object instead of sending in reference vars?\n    mx.scroll_real2pix = function(sv) {\n        // Param types:\n        // sv - mx.SCROLLBAR\n\n        if (sv.range === 0.0) {\n            return {\n                s1: sv.a1,\n                sw: sv.a2 - sv.a1\n            };\n            //\t\t\tout.s1 = sv.a1;\n            //\t\t\tout.sw = sv.a2 - sv.a1;\n        } else {\n            var dv; // real_8\n            var ts1; // int_2\n            var ts2; // int_2\n\n            dv = (sv.a2 - sv.a1) / sv.trange;\n\n            ts1 = sv.a1 + Math.floor(0.5 + (sv.smin - sv.tmin) * dv);\n            ts2 = ts1 + Math.floor(0.5 + sv.srange * dv);\n\n            if (ts1 > sv.a2 - sv.swmin) {\n                ts1 = sv.a2 - sv.swmin;\n            } else {\n                ts1 = Math.max(ts1, sv.a1);\n            }\n\n            if (ts2 < sv.a1 + sv.swmin) {\n                ts2 = sv.a1 + sv.swmin;\n            } else {\n                ts2 = Math.min(ts2, sv.a2);\n            }\n\n            return {\n                s1: ts1,\n                sw: Math.max(ts2 - ts1, sv.swmin)\n            };\n            //\t\t\tout.s1 = ts1;\n            //\t\t\tout.sw = Math.max(ts2 - ts1, sv.swmin);\n        }\n    };\n\n    /**\n     * Method to re-draw a scrollbar after update. Logic taken from mx.scroll's UPDATE section.\n     * @param sv The scrollbar to work with.\n     * @param Mx The Mx context to work with.\n     * @param op Optional op-code for XW_DRAW\n     * @private\n     */\n    mx.redrawScrollbar = function(sv, Mx, op) {\n        var x;\n        var y;\n        var xcc;\n        var ycc;\n        var xss;\n        var yss;\n        var p1;\n        var op1; // int\n        var s1;\n        var sw; // int_2\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        var scrollReal2PixOut = mx.scroll_real2pix(sv);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        p1 = s1;\n        op1 = sv.s1;\n\n        xcc = sv.x;\n        ycc = sv.y;\n        xss = sv.w;\n        yss = sv.h;\n\n        // horizontal scroll bar\n        if (sv.origin & 1) {\n            y = ycc + yss / 2;\n            if (sv.origin & 2) {\n                op1 = xss - op1 - sv.sw;\n                p1 = xss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n\n                mx.shadowbox(Mx, xcc, ycc, arrow, yss - 1, mx.L_ArrowLeft, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc + xss - arrow, ycc, arrow - 1, yss, mx.L_ArrowRight, 2, \"\", 0);\n            }\n\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, xcc + sv.a1, y, xcc + sv.a2, y);\n                mx.shadowbox(Mx, xcc + p1, ycc, sw + 1, yss, 1, 2, \"\", 0);\n            } else {\n                // Veritical gradiant\n                var lingrad = ctx.createLinearGradient(xcc + sv.a1, 0, xcc + sv.a2, 0);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, xcc + sv.a1, y, xcc + sv.a2, y, 1);\n\n                var lingrad = ctx.createLinearGradient(0, ycc, 0, ycc + yss);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc + p1, ycc, sw + 1, yss, 1, lingrad, 8, Mx.xwbs);\n            }\n\n            // else vertical scroll bar\n        } else {\n            x = xcc + m.trunc(xss / 2);\n            if (sv.origin <= 2) {\n                op1 = yss - op1 - sv.sw;\n                p1 = yss - p1 - sw;\n            }\n            if (op === mx.XW_DRAW) {\n                var arrow = sv.arrow; // int\n                mx.shadowbox(Mx, xcc, ycc, xss - 1, arrow, mx.L_ArrowUp, 2, \"\", 0);\n                mx.shadowbox(Mx, xcc, ycc + yss - arrow, xss - 1, arrow, mx.L_ArrowDown, 2, \"\", 0);\n            }\n\n            if (mx.LEGACY_RENDER) {\n                mx.draw_line(Mx, Mx.fg, x, ycc + sv.a1, x, ycc + sv.a2);\n                mx.shadowbox(Mx, xcc, ycc + p1, xss, sw + 1, 1, 2, \"\", 0);\n            } else {\n                // Horizontal gradiant\n                var lingrad = ctx.createLinearGradient(0, ycc + sv.a1, 0, ycc + sv.a2);\n                lingrad.addColorStop(0, Mx.xwbs);\n                lingrad.addColorStop(0.5, Mx.xwts);\n                lingrad.addColorStop(1, Mx.xwbs);\n                mx.draw_line(Mx, lingrad, x, ycc + sv.a1, x, ycc + sv.a2, 1);\n\n                var lingrad = ctx.createLinearGradient(xcc, 0, xcc + xss, 0);\n                lingrad.addColorStop(0.1, Mx.xwts);\n                lingrad.addColorStop(0.75, Mx.xwbs);\n                mx.draw_round_box(Mx, Mx.xwbg, xcc - 1, ycc + p1, xss, sw + 1, 1, lingrad, 8, Mx.xwbs);\n            }\n\n        }\n\n        sv.s1 = s1;\n        sv.sw = sw;\n    };\n\n    mx.real_distance_to_pixel = function(Mx, x1, y1, x2, y2, clip) {\n        var pos1 = mx.real_to_pixel(Mx, x1, y1, clip);\n        var pos2 = mx.real_to_pixel(Mx, x2, y2, clip);\n\n        var dx = pos2.x - pos1.x;\n        var dy = pos2.y - pos1.y;\n\n        return {\n            x: dx,\n            y: dy,\n            d: Math.sqrt((dx * dx) + (dy * dy)),\n            clipped: pos1.clipped || pos2.clipped\n        };\n    };\n\n    mx.real_box_to_pixel = function(Mx, x, y, w, h, clip) {\n        var ul, lr;\n        if (Mx.origin === 1) {\n            // regular x, regular y\n            ul = mx.real_to_pixel(Mx, x, y, clip);\n            lr = mx.real_to_pixel(Mx, x + w, y - h, clip);\n        } else if (Mx.origin === 2) {\n            // inverted x, regular y\n            ul = mx.real_to_pixel(Mx, x, y, clip);\n            lr = mx.real_to_pixel(Mx, x - w, y - h, clip);\n        } else if (Mx.origin === 3) {\n            // inverted x, inverted y\n            ul = mx.real_to_pixel(Mx, x, y, clip);\n            lr = mx.real_to_pixel(Mx, x - w, y + h, clip);\n        } else if (Mx.origin === 4) {\n            // regular x, inverted y\n            ul = mx.real_to_pixel(Mx, x, y, clip);\n            lr = mx.real_to_pixel(Mx, x + w, y + h, clip);\n        }\n        return {\n            ul: ul,\n            lr: lr,\n            w: lr.x - ul.x,\n            h: lr.y - ul.y,\n            clipped: ul.clipped || lr.clipped\n        };\n    };\n\n    /**\n     * @param {Object} Mx - the Mx object\n     * @param {number} x - the real-world x coordinate\n     * @param {number} y - the real-world y coordinate\n     * @param {boolean} [clip=false] set to clip the returned value to the plot area\n     * @returns {Object} pixel - the x,y coordinates in pixel coordinate space\n     * @returns {number} pixel.clipped - true if the point would have or has been clipped\n     * @private\n     */\n    mx.real_to_pixel = function(Mx, x, y, clip) {\n        var stk4 = mx.origin(Mx.origin, 4, Mx.stk[Mx.level]);\n        if ((stk4.xscl === 0.0) || (stk4.yscl === 0.0)) {\n            return {\n                x: 0,\n                y: 0\n            };\n        }\n\n        var left = stk4.x1;\n        var top = stk4.y1;\n\n        var xxmin = stk4.xmin;\n        var xscl = 1.0 / stk4.xscl;\n\n        var yymin = stk4.ymin;\n        var yscl = 1.0 / stk4.yscl;\n\n        var clipped_x = false;\n        var clipped_y = false;\n\n        if (x !== null) {\n            if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                clipped_x = ((x > stk4.xmax) || (x < stk4.xmin));\n                if (clip) {\n                    x = Math.min(x, stk4.xmax);\n                    x = Math.max(x, stk4.xmin);\n                }\n            } else {\n                clipped_x = ((x < stk4.xmax) || (x > stk4.xmin));\n                if (clip) {\n                    x = Math.max(x, stk4.xmax);\n                    x = Math.min(x, stk4.xmin);\n                }\n            }\n            x = Math.round((x - xxmin) * xscl) + left;\n        }\n        if (y !== null) {\n            if ((Mx.origin === 1) || (Mx.origin === 2)) {\n                clipped_y = ((y > stk4.ymin) || (y < stk4.ymax));\n                if (clip) {\n                    y = Math.min(y, stk4.ymin);\n                    y = Math.max(y, stk4.ymax);\n                }\n            } else {\n                clipped_y = ((y < stk4.ymin) || (y > stk4.ymax));\n                if (clip) {\n                    y = Math.max(y, stk4.ymin);\n                    y = Math.min(y, stk4.ymax);\n                }\n            }\n            y = Math.round((y - yymin) * yscl) + top;\n        }\n\n        x = Math.round(x);\n        y = Math.round(y);\n\n        return {\n            x: x,\n            y: y,\n            clipped_x: clipped_x,\n            clipped_y: clipped_y,\n            clipped: (clipped_x || clipped_y)\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param xpos\n     * @param ypos\n     * @private\n     */\n    mx.pixel_to_real = function(Mx, xpos, ypos) {\n        var iretx = Math.min(Mx.r, Math.max(Mx.l, xpos));\n        var irety = Math.min(Mx.b, Math.max(Mx.t, ypos));\n        var retx;\n        var rety;\n\n        var k = Mx.level;\n        if ((Mx.origin !== 2) && (Mx.origin !== 3)) {\n            retx = Mx.stk[k].xmin + (iretx - Mx.stk[k].x1) * Mx.stk[k].xscl;\n        } else {\n            retx = Mx.stk[k].xmin + (Mx.stk[k].x2 - iretx) * Mx.stk[k].xscl;\n        }\n        if (Mx.origin > 2) {\n            rety = Mx.stk[k].ymin + (irety - Mx.stk[k].y1) * Mx.stk[k].yscl;\n        } else {\n            rety = Mx.stk[k].ymin + (Mx.stk[k].y2 - irety) * Mx.stk[k].yscl;\n        }\n\n        return {\n            x: retx,\n            y: rety\n        };\n    };\n\n    /**\n     * @param Mx\n     * @param map\n     * @param ncolors\n     * @private\n     */\n    mx.colormap = function(Mx, map, ncolors) {\n        Mx.pixel = new ColorMap(map, {\n            ncolors: ncolors\n        });\n        return;\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.colorbar = function(Mx, x, y, w, h) {\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, cannot draw colorbar\");\n            return;\n        }\n        Mx.pixel.setRange(0, Mx.pixel.map.length);\n        for (var j = 1; j < h; j++) {\n            var cidx = Math.floor(Mx.pixel.map.length * (j - 1) / h);\n            mx.draw_line(Mx, cidx, x, y + h - j, x + w, y + h - j);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * @param Mx\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @private\n     */\n    mx.legend_colorbar = function(Mx, x, y, w, h) {\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, cannot draw colorbar\");\n            return;\n        }\n        Mx.pixel.setRange(0, Mx.pixel.map.length);\n        for (var j = 1; j < w; j++) {\n            var cidx = Math.floor(Mx.pixel.map.length * (j - 1) / w);\n            mx.draw_line(Mx, cidx, x + w - j, y, x + w - j, y + h);\n        }\n        mx.draw_box(Mx, Mx.fg, x + 0.5, y, w, h);\n    };\n\n    /**\n     * Render image buffer to canvas.\n     *\n     * If we don't have access to Uint8ClampedArray (i.e. Firefox 3.6)\n     * use a slower approach that only supports rasters up to the size\n     * limit of the canvas\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageNoTypedArrays(Mx, ctx, buf, opacity, downscaling, smoothing, x, y, w, h, sx, sy, sw, sh, rotationAngle) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        // If the source buffer is small enough to be directly rendered, do that\n        Mx._renderCanvas.width = buf.width;\n        Mx._renderCanvas.height = buf.height;\n\n        var imgctx = Mx._renderCanvas.getContext(\"2d\");\n        var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n        var src = new Uint32Array(buf);\n        for (var ii = 0; ii < src.length; ++ii) {\n            var index = ii * 4;\n            var color = Mx.pixel.getColorByIndex(src[ii]);\n            imgd.data[index] = color.red; // red\n            imgd.data[index + 1] = color.green; // green\n            imgd.data[index + 2] = color.blue; // blue\n            imgd.data[index + 3] = 255; // alpha\n        }\n        imgctx.putImageData(imgd, 0, 0);\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        if (rotationAngle) {\n            ctx.translate(x + w / 2, y + h / 2);\n            ctx.rotate(-Math.PI / 2);\n            ctx.translate(-(x + h / 2), -(y + w / 2));\n            ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, h, w);\n        } else {\n            ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        }\n        ctx.restore();\n    }\n\n    /**\n     * @private\n     *\n     * @param ctx\n     *   {context} a canvas 2d context\n     * @param buf\n     *   {ArrayBuffer} a buffer of 32-bit image data\n     * @param opacity\n     *   the opacity to render the image with\n     * @param smoothing\n     *   if image smoothing should be enabled\n     * @param sx\n     *   source x position\n     * @param sy\n     *   source y position\n     * @param sw\n     *   source width\n     * @param sh\n     *   source height\n     * @param x\n     *   optional x canvas dest\n     * @param y\n     *   optional y canvas dest\n     * @param w\n     *   optional width\n     * @param h\n     *   optional height\n     */\n    function renderImageTypedArrays(Mx, ctx, buf, opacity, downscaling, smoothing, x, y, w, h, sx, sy, sw, sh, rotationAngle) {\n        if (sx === undefined) {\n            sx = 0;\n        }\n        if (sy === undefined) {\n            sy = 0;\n        }\n        if (sw === undefined) {\n            sw = buf.width - sx;\n        }\n        if (sh === undefined) {\n            sh = buf.height - sy;\n        }\n\n        if ((buf.width < 32768) && (buf.height < 32768)) {\n            // If the source buffer is small enough to be directly rendered, do that\n            Mx._renderCanvas.width = buf.width;\n            Mx._renderCanvas.height = buf.height;\n\n            var imgctx = Mx._renderCanvas.getContext(\"2d\");\n            var imgd = imgctx.createImageData(Mx._renderCanvas.width, Mx._renderCanvas.height);\n\n            // TODO - This may not be portable to all browsers, if not\n            // we need to choose between this approach and the traditional\n            // for-loop based approach\n            var src = new Uint32Array(buf);\n            var dst = new Uint32Array(imgd.data.buffer);\n            if (buf.contents !== \"rgba\") {\n                for (var ii = 0; ii < src.length; ii++) {\n                    dst[ii] = Mx.pixel.getColorByIndex(src[ii]).color;\n                }\n            } else {\n                for (var ii = 0; ii < src.length; ii++) {\n                    dst[ii] = src[ii];\n                }\n            }\n\n            imgctx.putImageData(imgd, 0, 0);\n        } else {\n            if (!downscaling) {\n                if ((sw < 32767) && (sh < 32767)) {\n                    // The clipped image is small enough to directly render\n                    Mx._renderCanvas.width = sw;\n                    Mx._renderCanvas.height = sh;\n                    scaleImage(Mx, Mx._renderCanvas, buf, sx, sy, sw, sh);\n                } else {\n                    // Downscale to twice the destination size\n                    Mx._renderCanvas.width = Math.min(w * 2, buf.width);\n                    Mx._renderCanvas.height = Math.min(h * 2, buf.height);\n                    scaleImage(Mx, Mx._renderCanvas, buf, sx, sy, sw, sh);\n                    sw = Mx._renderCanvas.width;\n                    sh = Mx._renderCanvas.height;\n                }\n            } else {\n                // Downscale to the destination size\n                Mx._renderCanvas.width = w;\n                Mx._renderCanvas.height = h;\n                scaleImage(Mx, Mx._renderCanvas, buf, sx, sy, sw, sh, downscaling);\n                sw = Mx._renderCanvas.width;\n                sh = Mx._renderCanvas.height;\n            }\n            sx = 0;\n            sy = 0;\n        }\n\n        // Render the image to the destination\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        if (!smoothing) {\n            ctx.imageSmoothingEnabled = false;\n            ctx.mozImageSmoothingEnabled = false;\n            ctx.webkitImageSmoothingEnabled = false;\n        }\n        if (rotationAngle) {\n            ctx.translate(x + w / 2, y + h / 2);\n            ctx.rotate(rotationAngle);\n            ctx.translate(-(x + h / 2), -(y + w / 2));\n            ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, h, w);\n        } else {\n            ctx.drawImage(Mx._renderCanvas, sx, sy, sw, sh, x, y, w, h);\n        }\n        ctx.restore();\n    }\n\n    /**\n     * Scale the image data (represented by buf) into the destination canvas\n     * using nearest neighbor.  In general, you should just use the scaling\n     * provided by drawImage...but if the buf is greater than 32767 pixels in\n     * either dimension that won't work and you have to use this.\n     *\n     * @param img\n     *   A canvas object\n     * @param buf\n     *   An ArrayBuf with .width and .height elements\n     *\n     * @private\n     */\n    function scaleImage(Mx, img, buf, sx, sy, sw, sh, downscaling) {\n        // Source buffer, expected to have .width and .height elements\n        let colorMap = Mx.pixel;\n\n        var src = new Uint32Array(buf);\n\n        if (!sw) {\n            sw = buf.width;\n        }\n        if (!sh) {\n            sh = buf.height;\n        }\n        if (!sx) {\n            sx = 0;\n        }\n        if (!sy) {\n            sy = 0;\n        }\n\n        // Cache to avoid get width calls in tight loop\n        var w = img.width;\n        var h = img.height;\n\n        // Destination element\n        var imgctx = img.getContext(\"2d\");\n        if (!Mx.scaledImgd || Mx.scaledImgd.width !== w || Mx.scaledImgd.height !== h) {\n            Mx.scaledImgd = imgctx.createImageData(w, h);\n        }\n        var dest = new Uint32Array(Mx.scaledImgd.data.buffer);\n\n        // Scaling factor\n        var width_scaling = (sw / w);\n        var height_scaling = (sh / h);\n\n        // Perform the scaling\n        var xx = 0;\n        var yy = 0;\n        var jj = 0;\n        var value;\n        var colorOffset = colorMap.getNColors() / 2;\n\n        // At first glance you might be tempted to refactor this to use\n        // one loop with the downscaling if condition inside; but benchmarking\n        // has shown this approach to be almost twice as fast for the condition\n        // where downscaling isn't used\n        if (!downscaling || buf.contents === \"rgba\") {\n            for (var ii = 0; ii < dest.length; ii++) {\n                xx = Math.floor(ii % w * width_scaling) + sx;\n                yy = Math.floor(ii / w * height_scaling) + sy;\n                jj = Math.floor((yy * buf.width) + xx);\n\n                value = src[jj];\n                if (buf.contents !== \"rgba\") {\n                    dest[ii] = colorMap.getColorByIndex(value).color;\n                } else {\n                    dest[ii] = src[jj];\n                }\n            }\n        } else {\n            for (var ii = 0; ii < dest.length; ii++) {\n                xx = Math.floor(ii % w * width_scaling) + sx;\n                yy = Math.floor(ii / w * height_scaling) + sy;\n                jj = Math.floor((yy * buf.width) + xx);\n\n                value = src[jj];\n                if (downscaling === \"avg\") { // average\n                    for (var j = 1; j < width_scaling; j++) {\n                        value += src[jj + j];\n                    }\n                    value = Math.round(value / width_scaling);\n                } else if (downscaling === \"min\") { // min\n                    for (var j = 1; j < width_scaling; j++) {\n                        value = Math.min(value, src[jj + j]);\n                    }\n                } else if (downscaling === \"max\") { // max\n                    for (var j = 1; j < width_scaling; j++) {\n                        value = Math.max(value, src[jj + j]);\n                    }\n                } else if (downscaling === \"minmax\") { // min/max\n                    for (var j = 1; j < width_scaling; j++) {\n                        value = (Math.abs(value - colorOffset) > Math.abs(src[jj + j] - colorOffset)) ? value : src[jj + j];\n                    }\n                }\n\n                dest[ii] = colorMap.getColorByIndex(value).color;\n            }\n        }\n\n        // Set the data\n        imgctx.putImageData(Mx.scaledImgd, 0, 0);\n    }\n\n    var renderImage = (typeof Uint8ClampedArray === 'undefined') ? renderImageNoTypedArrays : renderImageTypedArrays;\n\n    /**\n     * @param Mx\n     * @param img\n     * @param shift\n     * @private\n     */\n    mx.shift_image_rows = function(Mx, buf, shift, zerofill) {\n        var imgd = new Uint32Array(buf);\n        if (shift > 0) { // shift down\n            shift = shift * buf.width;\n            imgd.set(imgd.subarray(0, imgd.length - shift), shift);\n            if (zerofill) {\n                imgd.fill(0, 0, shift);\n            }\n        } else if (shift < 0) { // shift up\n            shift = Math.abs(shift) * buf.width;\n            imgd.set(imgd.subarray(shift));\n            if (zerofill) {\n                imgd.fill(0, imgd.length - shift);\n            }\n        }\n\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param img\n     * @param data\n     * @param row\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.update_image_row = function(Mx, buf, data, row, zmin, zmax, xcompression) {\n        var imgd = new Uint32Array(buf, row * buf.width * 4, buf.width);\n\n        Mx.pixel.setRange(zmin, zmax);\n\n        var xc = Math.max(1, data.length / buf.width);\n        for (var i = 0; i < buf.width; i++) {\n            var didx = Math.floor(i * xc);\n            var value = data[didx];\n            if (xc > 1) {\n                if (xcompression === 1) { // average\n                    for (var j = 1; j < xc; j++) {\n                        value += data[didx + j];\n                    }\n                    value = (value / xc);\n                } else if (xcompression === 2) { // min\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.min(value, data[didx + j]);\n                    }\n                } else if (xcompression === 3) { // max\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(value, data[didx + j]);\n                    }\n                } else if (xcompression === 4) { // first\n                    value = data[i];\n                } else if (xcompression === 5) { // max abs\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                    }\n                }\n            }\n            var colorIdx = Mx.pixel.getColorIndex(value);\n            imgd[i] = colorIdx;\n        }\n\n        return imgd;\n    };\n\n    /**\n     * @param Mx\n     * @param img\n     * @param data\n     * @param row\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.update_image_col = function(Mx, buf, data, col, zmin, zmax, xcompression) {\n        var imgd = new Uint32Array(buf);\n\n        Mx.pixel.setRange(zmin, zmax);\n\n        //\n        var xc = Math.max(1, data.length / buf.height);\n        for (var i = 0; i < buf.height; i++) {\n            var didx = Math.floor(i * xc);\n            var value = data[didx];\n            if (xc > 1) {\n                if (xcompression === 1) { // average\n                    for (var j = 1; j < xc; j++) {\n                        value += data[didx + j];\n                    }\n                    value = (value / xc);\n                } else if (xcompression === 2) { // min\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.min(value, data[didx + j]);\n                    }\n                } else if (xcompression === 3) { // max\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(value, data[didx + j]);\n                    }\n                } else if (xcompression === 4) { // first\n                    value = data[i];\n                } else if (xcompression === 5) { // max abs\n                    for (var j = 1; j < xc; j++) {\n                        value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                    }\n                }\n            }\n            var colorIdx = Mx.pixel.getColorIndex(value);\n            imgd[((buf.height - i) * buf.width) + col] = colorIdx;\n        }\n\n        return imgd;\n    };\n\n    /**\n     * @param Mx\n     * @param data\n     * @param w\n     * @param h\n     * @param Mx\n     * @param zmin\n     * @param zmax\n     * @private\n     */\n    mx.create_image = function(Mx, data, subsize, w, h, zmin, zmax, xcompression, drawdirection) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            console.log(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n        if (drawdirection === \"horizontal\") {\n            let tmp = w;\n            w = h;\n            h = tmp;\n        }\n\n        Mx.pixel.setRange(zmin, zmax);\n        w = Math.ceil(w);\n        h = Math.ceil(h);\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var nxc;\n        if (drawdirection !== \"horizontal\") {\n            nxc = Math.max(1, subsize / w);\n        } else {\n            nxc = Math.max(1, subsize / h);\n        }\n\n        // imgd is a flat buffer where index 0 maps to the upper-left corner\n        var imgd = new Uint32Array(buf);\n        if (data) {\n            for (var i = 0; i < imgd.length; i++) {\n                var ix;\n                var iy;\n                var didx;\n\n                // Figure out what pixel we are at (upper left is 0,0)\n                if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                    ix = Math.floor(i % w);\n                } else {\n                    ix = w - Math.floor(i % w) - 1;\n                }\n                if ((Mx.origin === 3) || (Mx.origin === 4)) {\n                    iy = Math.floor(i / w);\n                } else {\n                    iy = h - Math.floor(i / w) - 1;\n                }\n\n                // Map that pixel to it's nearest data\n                if (drawdirection !== \"horizontal\") {\n                    didx = (iy * subsize) + Math.floor(ix * nxc);\n                } else {\n                    didx = (ix * subsize) + Math.floor(iy * nxc);\n                }\n                var value = data[didx];\n                if (nxc > 1) {\n                    if (xcompression === 1) { // average\n                        for (var j = 1; j < nxc; j++) {\n                            value += data[didx + j];\n                        }\n                        value = value / nxc;\n                    } else if (xcompression === 2) { // min\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.min(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 3) { // max\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(value, data[didx + j]);\n                        }\n                    } else if (xcompression === 4) { // first\n                        value = data[didx];\n                    } else if (xcompression === 5) { // max abs\n                        for (var j = 1; j < nxc; j++) {\n                            value = Math.max(Math.abs(value), Math.abs(data[didx + j]));\n                        }\n                    }\n                }\n\n\n                var colorIdx = Mx.pixel.getColorIndex(value);\n                imgd[i] = colorIdx;\n            }\n        }\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    mx.resize_image_height = function(Mx, buf, h) {\n        if (buf.height === h) {\n            return buf;\n        }\n\n        var buf2 = ArrayBuffer.transfer(buf, (buf.width * h * 4));\n        Object.assign(buf2, buf);\n        buf2.height = h;\n\n        return buf2;\n    };\n\n    /**\n     * @param Mx\n     * @param data array of data\n     * @param nx\n     * @param ny\n     * @param nex\n     * @param ney\n     * @param xd\n     * @param yd\n     * @param level\n     * @param opacity\n     * @param smoothing\n     * @private\n     */\n    mx.put_image = function(Mx, data, nx, ny, nex, ney, xd, yd, level, opacity, smoothing, downscaling) {\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n\n        if (!Mx.pixel) {\n            m.log.warn(\"COLORMAP not initialized, defaulting to foreground\");\n            Mx.pixel = new ColorMap(m.Mc.colormap[1].colors);\n        }\n\n        var w;\n        var h;\n\n        if (nex > 0) {\n            w = nx * nex;\n        } else {\n            w = -nex;\n        }\n        w = Math.floor(w);\n        h = Math.floor(ny * ney);\n\n        var buf = new ArrayBuffer(w * h * 4);\n        buf.width = w;\n        buf.height = h;\n\n        var imgd = new Uint32Array(buf);\n        for (var i = 0; i < imgd.length; i++) {\n            var color = Mx.pixel.getColorIndex(data[i]);\n            if (color) {\n                imgd[i] = color.color;\n            }\n        }\n\n        //render the buffered canvas onto the original canvas element\n        renderImage(Mx, ctx, buf, opacity, downscaling, smoothing, xd, yd, w, h);\n\n        // Return the image in case the caller wishes to cache it\n        return buf;\n    };\n\n    /**\n     * @param Mx\n     * @param buf\n     * @param {number} xmin\n     * @param {number} ymin\n     * @param {number} xmax\n     * @param {number} ymax\n     * @param {number} opacity\n     * @param {number} smoothing\n     * @param {string} downscaling  \"avg\", \"min\", \"max\", or \"minmax\"\n     * @param {number} rotationAngle  Angle of rotation in radians // TODO-MRA we might need to have very fixed rotations\n     * @private\n     */\n    mx.draw_image = function(Mx, buf, xmin, ymin, xmax, ymax, opacity, smoothing, downscaling, rotationAngle, strokeStyle, text) {\n\n        var view_xmin = Math.max(xmin, Mx.stk[Mx.level].xmin);\n        var view_xmax = Math.min(xmax, Mx.stk[Mx.level].xmax);\n        var view_ymin = Math.max(ymin, Mx.stk[Mx.level].ymin);\n        var view_ymax = Math.min(ymax, Mx.stk[Mx.level].ymax);\n\n        // On input xmin < xmax and ymin < ymax, so if the view\n        // values have become inverted that means the image it outside\n        // of the bounds established by Mx.stk[Mx.level]\n        if (view_xmax < view_xmin) {\n            return;\n        }\n        if (view_ymax < view_ymin) {\n            return;\n        }\n\n        if ((buf.width <= 1) || Math.abs(xmax - xmin) === 0) {\n            return;\n        }\n        if ((buf.height <= 1) || Math.abs(ymax - ymin) === 0) {\n            return;\n        }\n        var rx = buf.width / (xmax - xmin);\n        var ry = buf.height / (ymax - ymin);\n\n        // ul, lr are the upper-left/lower-right in view coordinates\n        // for receiving the rendered source-vuffer\n        var ul, lr;\n\n        // sx, sy, sw, sh are the source-buffer pixels\n        // that have been selected for rendering\n        var sy, sx, sw, sh;\n\n        // Determine the actual boundaries of the sub-source\n        // buffer being rendered; which may actually exeed the\n        // view box.  This is cleaned-up using clip()\n        var render_xmin, render_xmax, render_ymin, render_ymax;\n\n        // TODO-MGR handle rotation correctly for other origins\n        if (Mx.origin === 1) {\n            // regular x, regular y\n            if (!rotationAngle) {\n                sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n                sh = Math.min(buf.height - sy, Math.ceil((view_ymax - view_ymin) * ry) + 1);\n                sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n                sw = Math.min(buf.width - sx, Math.ceil((view_xmax - view_xmin) * rx) + 1);\n\n                // Now determine the specific view area\n                render_xmin = (sx / rx) + xmin;\n                render_xmax = ((sx + sw) / rx) + xmin;\n                render_ymin = ymax - ((sy + sh) / ry);\n                render_ymax = ymax - (sy / ry);\n\n                ul = mx.real_to_pixel(Mx, render_xmin, render_ymax);\n                lr = mx.real_to_pixel(Mx, render_xmax, render_ymin);\n            } else if (Math.abs(rotationAngle - (-Math.PI / 2)) < 1E-12) {\n                // The x-axis is now distributed against the height of the buffer\n                // and the y-axis against the width of the buffer\n                rx = buf.height / (xmax - xmin);\n                ry = buf.width / (ymax - ymin);\n\n                // The buffers x start and width is based upon the y-axis\n                sx = Math.max(0, Math.floor((view_ymin - ymin) * ry));\n                sw = Math.min(buf.width - sx, Math.ceil((view_ymax - view_ymin) * ry) + 1);\n                // The buffers y start and height is based upon the x-axis\n                sy = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n                sh = Math.min(buf.height - sy, Math.ceil((view_xmax - view_xmin) * rx) + 1);\n\n                // Given the calculated buffer boundary, we need to figure out back in \n                // plot coordinates where that is rendered in the view.  This is very confusing \n                // because the start x related to ratio-y and ymin and vice versa\n                render_ymin = (sx / ry) + ymin;\n                render_ymax = ((sx + sw) / ry) + ymin;\n                render_xmin = (sy / rx) + xmin;\n                render_xmax = ((sy + sh) / rx) + xmin;\n\n                ul = mx.real_to_pixel(Mx, render_xmin, render_ymax);\n                lr = mx.real_to_pixel(Mx, render_xmax, render_ymin);\n            } else {\n                throw new RangeError(`Rotation angle ${rotationAngle} rad not supported. Must be -Math.PI/2.`);\n            }\n        } else if (Mx.origin === 2) {\n            // inverted x, regular y\n            sy = Math.max(0, Math.floor((ymax - view_ymax) * ry));\n            sh = Math.min(buf.height - sy, Math.ceil((view_ymax - view_ymin) * ry) + 1);\n            sx = Math.max(0, Math.floor((view_xmax - xmax) * rx));\n            sw = Math.min(buf.width - sx, Math.floor((view_xmax - view_xmin) * rx));\n\n            render_xmin = xmax - ((sx + sw) / rx);\n            render_xmax = xmax - (sx / rx);\n            render_ymin = ymax - ((sy + sh) / ry);\n            render_ymax = ymax - (sy / ry);\n\n            ul = mx.real_to_pixel(Mx, render_xmax, render_ymax);\n            lr = mx.real_to_pixel(Mx, render_xmin, render_ymin);\n        } else if (Mx.origin === 3) {\n            // inverted x, inverted y\n            sy = Math.max(0, Math.floor((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.ceil((view_ymax - view_ymin) * ry) + 1);\n            sx = Math.max(0, Math.floor((view_xmax - xmax) * rx));\n            sw = Math.min(buf.width - sx, Math.ceil((view_xmax - view_xmin) * rx) + 1);\n\n            render_xmin = xmax - ((sx + sw) / rx);\n            render_xmax = xmax - (sx / rx);\n            render_ymin = (sy / ry) + ymin;\n            render_ymax = ((sy + sh) / ry) + ymin;\n\n            ul = mx.real_to_pixel(Mx, render_xmax, render_ymin);\n            lr = mx.real_to_pixel(Mx, render_xmin, render_ymax);\n        } else if (Mx.origin === 4) {\n            // regular x, inverted y\n            sy = Math.max(0, Math.floor((view_ymin - ymin) * ry));\n            sh = Math.min(buf.height - sy, Math.ceil((view_ymax - view_ymin) * ry) + 1);\n            sx = Math.max(0, Math.floor((view_xmin - xmin) * rx));\n            sw = Math.min(buf.width - sx, Math.ceil((view_xmax - view_xmin) * rx) + 1);\n\n            render_xmin = (sx / rx) + xmin;\n            render_xmax = ((sx + sw) / rx) + xmin;\n            render_ymin = (sy / ry) + ymin;\n            render_ymax = ((sy + sh) / ry) + ymin;\n\n            ul = mx.real_to_pixel(Mx, render_xmin, render_ymin);\n            lr = mx.real_to_pixel(Mx, render_xmax, render_ymax);\n        }\n\n        var iw = lr.x - ul.x;\n        var ih = lr.y - ul.y;\n\n        // Always include at least one pixel from the source\n        sw = Math.max(1, sw);\n        sh = Math.max(1, sh);\n\n        // See if smart smoothing is requested\n        if (typeof smoothing === \"number\") {\n            // calculate the ratio of displayed pixels over\n            // displayed data-points\n            var ratio = (Mx.r - Mx.l) / sw;\n            // if the ratio is greater than the smoothing value\n            // turn on smoothing\n            smoothing = (ratio <= smoothing);\n        }\n\n        //render the buffered canvas onto the original canvas element\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.save();\n        ctx.beginPath();\n        ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n        ctx.clip();\n        renderImage(Mx, ctx, buf, opacity, downscaling, smoothing, ul.x, ul.y, iw, ih, sx, sy, sw, sh, rotationAngle);\n\n        if (strokeStyle) {\n            ctx.strokeStyle = strokeStyle;\n            ctx.strokeRect(ul.x, ul.y, iw, ih);\n        }\n        if (text) {\n            mx.text(Mx,\n                ul.x,\n                ul.y + Mx.text_h,\n                text,\n                Mx.fg\n            );\n        }\n        ctx.restore();\n    };\n\n    // Node: Export function\n    module.exports = mx;\n\n}());\n\n///////////////////////////////////////////////////////////////////////////////\n", "/**\n * @license\n * File: sigplot.layer1d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n\n    var Layer1D = function(plot) {\n        this.plot = plot;\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n        this.opacity = 1.0;\n        this.fillStyle = null;\n        this.preferred_origin = 1;\n\n        this.pointbufsize = 0;\n        this.xptr = null;\n        this.yptr = null;\n        this.xpoint = null; // PointArray backed by memory in xptr\n        this.ypoint = null; // PointArray backed by memory in yptr\n\n        this.options = {};\n    };\n\n    Layer1D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer1D\n         * @private\n         */\n        init: function(hcb, options) {\n            var Gx = this.plot._Gx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            this.offset = 0;\n            this.size = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n\n            if (!this.hcb.pipe) {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                } else {\n                    this.size = hcb.size;\n                }\n            } else {\n                if (hcb[\"class\"] === 2) {\n                    m.force1000(hcb);\n                    this.size = hcb.subsize;\n                }\n            }\n\n            if (options.framesize) {\n                this.size = options.framesize;\n            }\n\n            // pipe data requires a valid size on overlay, but\n            // other data can work without a valid size because\n            // the reload() function will correctly update the size\n            if (this.hcb.pipe && !this.size) {\n                throw \"1D layer could not determine appropriate size for pipe, use framesize option\";\n            }\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            this.xstart = hcb.xstart;\n            this.xdelta = hcb.xdelta;\n\n            if (this.size > 0) {\n                // a single data-point is not infintesimally small, so xmin/xmax\n                // are defined as the start of the data point, hence we subtract\n                // one from the size.  This logic works if xdelta is postive or\n                // negagive\n                var d = hcb.xstart + hcb.xdelta * (this.size - 1.0);\n                this.xmin = Math.min(hcb.xstart, d);\n                this.xmax = Math.max(hcb.xstart, d);\n            } else {\n                this.xmin = 0;\n                this.xmax = 0;\n            }\n\n            this.xlab = hcb.xunits;\n            this.ylab = hcb.yunits; // might be undefined\n\n            if (this.hcb.pipe) {\n                this.drawmode = \"scrolling\";\n                this.position = 0;\n                this.tle = options.tl;\n\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n\n                var self = this;\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            }\n        },\n\n        _onpipewrite: function() {\n            var ybuf = new m.PointArray(this.ybuf);\n\n            var tle = this.tle; // in scalars\n            if (tle === undefined) {\n                // if the transfer length wasn't set then we read\n                // all the elements that are available\n                tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n            }\n\n            // Calculate transfer length in scalars\n            var tl = tle * this.hcb.spa;\n            while (m.pavail(this.hcb) >= tl) {\n\n                if (this.drawmode === \"lefttoright\") {\n                    this.position = 0;\n                    ybuf.set(ybuf.subarray(0, this.size - tl), tl);\n                } else if (this.drawmode === \"righttoleft\") {\n                    this.position = this.size - tle;\n                    ybuf.set(ybuf.subarray(tl), 0);\n                } else if (this.drawmode === \"scrolling\") {\n                    // Nothing to do\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                // transfer length is adjusted to the remaining size \n                // before wrapping\n                var ngot = m.grabx(\n                    this.hcb, ybuf,\n                    Math.min(tle, this.size - this.position) * this.hcb.spa,\n                    this.position * this.hcb.spa\n                );\n                if (ngot === 0) {\n                    break;\n                }\n\n                // update the position\n                this.position = (this.position + tle) % this.size;\n\n                if (this.tle === undefined) {\n                    tle = Math.floor(m.pavail(this.hcb)) / this.hcb.spa;\n                }\n                tl = tle * this.hcb.spa;\n            }\n        },\n\n        get_data: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            var skip = this.skip;\n\n            var size;\n            if (HCB[\"class\"] === 2) {\n                size = HCB.subsize;\n            } else {\n                size = HCB.size;\n            }\n\n            var imin = 0;\n            var imax = 0;\n            if (Gx.index) {\n                imin = Math.floor(xmin);\n                imax = Math.floor(xmax + 0.5);\n            } else if (HCB.xdelta >= 0.0) {\n                imin = Math.floor((xmin - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmax - HCB.xstart) / HCB.xdelta + 0.5);\n            } else {\n\n                imin = Math.floor((xmax - HCB.xstart) / HCB.xdelta) - 1;\n                imax = Math.floor((xmin - HCB.xstart) / HCB.xdelta + 0.5);\n            }\n            imin = Math.max(0.0, imin);\n            imax = Math.min(size - 1, imax);\n\n            var npts = Math.max(0.0, Math.min(imax - imin + 1, Gx.bufmax));\n            if (HCB.xdelta < 0) {\n                imin = imax - npts + 1;\n            }\n\n            if ((imin >= this.imin) && (imin + npts <= this.imin + this.size) && (this.ybuf !== undefined)) {\n                // data already in buffers\n            } else if (this.modified) {\n                // modified data not yet saved off\n\n            } else if (HCB[\"class\"] <= 2) {\n                // load new data\n                var start = this.offset + imin;\n                var skip = this.skip;\n                this.ybufn = npts * Math.max(skip * m.PointArray.BYTES_PER_ELEMENT,\n                    m.PointArray.BYTES_PER_ELEMENT);\n                if ((this.ybuf === undefined) || (this.ybuf.byteLength < this.ybufn)) {\n                    this.ybuf = new ArrayBuffer(this.ybufn);\n                }\n                var ybuf = new m.PointArray(this.ybuf);\n                var ngot = m.grab(HCB, ybuf, start, npts);\n                this.imin = imin;\n                this.xstart = HCB.xstart + (imin) * this.xdelta;\n                this.size = ngot;\n            } else {\n                // type 3000, 4000, 5000\n                // TODO yeah right\n            }\n\n        },\n\n        change_settings: function(settings) {\n            if (settings.index !== undefined) {\n                if (settings.index) {\n                    this.xstart = 1.0;\n                    this.xdelta = 1.0;\n                    this.xmin = 1.0;\n                    this.xmax = this.size;\n                } else {\n                    this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                    this.xdelta = this.hcb.xdelta;\n                    var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                }\n            }\n\n            if (settings.drawmode !== undefined) {\n                this.drawmode = settings.drawmode;\n                // Reset the buffer\n                this.position = 0;\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n\n            if (settings.framesize !== undefined) {\n                this.size = settings.framesize;\n                this.xstart = this.hcb.xstart + (this.imin) * this.xdelta;\n                this.xdelta = this.hcb.xdelta;\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                this.ybuf = new ArrayBuffer(this.ybufn);\n            }\n        },\n\n        reload: function(data, hdrmod) {\n            if (this.hcb.pipe) {\n                throw \"reload cannot be used with pipe, use push instead\";\n            }\n            var axis_change = (this.hcb.dview.length !== data.length) || hdrmod;\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"xstart\" || k === \"xdelta\") {\n                        axis_change = true;\n                    }\n                }\n            }\n            this.hcb.setData(data);\n\n            // Setting these causes refresh() to refetch\n            this.imin = -1;\n            this.size = this.hcb.size;\n\n            var xmin = this.xmin;\n            var xmax = this.xmax;\n\n            if (axis_change) {\n                if (this.hcb[\"class\"] === 2) {\n                    m.force1000(this.hcb);\n                }\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.hcb.size - 1.0);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n                xmin = undefined;\n                xmax = undefined;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax\n            };\n        },\n\n        push: function(data, hdrmod, sync) {\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"type\") {\n                        this.hcb[\"class\"] = hdrmod[k] / 1000;\n                    }\n                }\n\n                if (hdrmod.subsize) {\n                    if (this.hcb[\"class\"] === 2) {\n                        m.force1000(this.hcb);\n                        this.size = this.hcb.subsize;\n                        // Reset the buffer\n                        this.position = null;\n                        this.ybufn = this.size * Math.max(this.skip * m.PointArray.BYTES_PER_ELEMENT, m.PointArray.BYTES_PER_ELEMENT);\n                        this.ybuf = new ArrayBuffer(this.ybufn);\n                    }\n                }\n\n                var d = this.hcb.xstart + this.hcb.xdelta * (this.size - 1.0);\n                this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return hdrmod ? true : false;\n\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            this.get_data(xmin, xmax);\n\n            var npts = Math.ceil(this.size);\n\n            var skip = this.skip;\n\n            if (npts === 0) {\n                return {\n                    num: 0,\n                    start: 0,\n                    end: 0\n                };\n            }\n\n            if (npts * m.PointArray.BYTES_PER_ELEMENT > this.pointbufsize) {\n                this.pointbufsize = npts * m.PointArray.BYTES_PER_ELEMENT;\n                this.xptr = new ArrayBuffer(this.pointbufsize);\n                this.yptr = new ArrayBuffer(this.pointbufsize);\n                this.xpoint = new m.PointArray(this.xptr);\n                this.ypoint = new m.PointArray(this.yptr);\n            }\n\n            var dbuf = new m.PointArray(this.ybuf);\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n            var mxmn;\n            // xsub isn't really used yet, so it can largely be ignored\n            if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                if (npts <= 0) {\n                    // This is a degenerate case when there are no points\n                    qmin = Gx.panxmin;\n                    qmax = Gx.panxmax;\n                } else if (Gx.cmode !== 5) {\n                    // Largely unused code since xsub isn't used\n                    this.xpoint = new m.PointArray(this.xbuf);\n                } else if (this.cx) {\n                    // This is the pre-dominate condition\n                    m.vmov(dbuf, skip, this.xpoint, 1, npts);\n                } else if (this.line !== 0) {\n                    // If we have been asked to plot Real vs. Imaginary\n                    // for real data and there is a line being drawn\n                    // we take the min x and max x and then plot it\n                    // later on against the first two ypoints...it's\n                    // not clear if this is correct or not, but since\n                    // it's a degenerate case it is tolerated\n                    mxmn = m.vmxmn(dbuf, npts);\n                    this.xpoint[0] = mxmn.smax;\n                    this.xpoint[1] = mxmn.smin;\n                    n1 = 0;\n                    n2 = 2;\n                    npts = 2;\n                } else {\n                    // Otherwise we just plot the y-values\n                    this.xpoint = dbuf;\n                }\n                if (npts > 0) {\n                    mxmn = m.vmxmn(this.xpoint, npts);\n                    qmax = mxmn.smax;\n                    qmin = mxmn.smin;\n                    n1 = 0;\n                    n2 = npts;\n                }\n            } else if (npts > 0) {\n                var xstart = this.xstart;\n                var xdelta = this.xdelta;\n                var d = npts;\n                if (Gx.index) {\n                    n1 = 0;\n                    n2 = npts - 1;\n                } else if (xdelta >= 0.0) {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                } else {\n                    n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                    n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                }\n\n                npts = n2 - n1 + 1;\n                if (npts < 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    npts = 0;\n                }\n                dbuf = new m.PointArray(this.ybuf).subarray(n1 * skip);\n                xstart = xstart + xdelta * (n1);\n                for (var i = 0; i < npts; i++) {\n                    if (Gx.index) {\n                        this.xpoint[i] = this.imin + i + 1;\n                    } else {\n                        this.xpoint[i] = xstart + i * xdelta;\n                    }\n                }\n            }\n\n            if (npts <= 0) {\n                m.log.debug(\"Nothing to plot\");\n                return {\n                    num: npts,\n                    start: n1,\n                    end: n2\n                };\n            }\n            if (this.cx) {\n                if (Gx.cmode === 1) {\n                    m.cvmag(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode === 2) {\n                    if (Gx.plab === 25) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                        m.vsmul(this.ypoint, 1.0 / (2 * Math.PI), this.ypoint, npts);\n                    } else if (Gx.plab !== 24) {\n                        m.cvpha(dbuf, this.ypoint, npts);\n                    } else {\n                        m.cvphad(dbuf, this.ypoint, npts);\n                    }\n                } else if (Gx.cmode === 3) {\n                    m.vmov(dbuf, skip, this.ypoint, 1, npts);\n                } else if (Gx.cmode >= 6) {\n                    m.cvmag2(dbuf, this.ypoint, npts);\n                } else if (Gx.cmode >= 4) {\n                    m.vmov(dbuf.subarray(1), skip, this.ypoint, 1, npts);\n                }\n            } else {\n                if (Gx.cmode === 5) { // I vs. R\n                    m.vfill(this.ypoint, 0, npts);\n                } else if ((Gx.cmode === 1) || (Gx.cmode >= 6)) { // Mag, log\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = Math.abs(dbuf[i]);\n                    }\n                } else {\n                    for (var i = 0; i < npts; i++) {\n                        this.ypoint[i] = dbuf[i];\n                    }\n                }\n            }\n\n            if (Gx.cmode >= 6) {\n                m.vlog10(this.ypoint, Gx.dbmin, this.ypoint);\n                var dbscale = 10.0;\n                if (Gx.cmode === 7) {\n                    dbscale = 20.0;\n                }\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    dbscale = dbscale / 2.0;\n                }\n                m.vsmul(this.ypoint, dbscale, this.ypoint);\n            }\n            mxmn = m.vmxmn(this.ypoint, npts);\n\n            qmax = mxmn.smax;\n            qmin = mxmn.smin;\n\n            var yran = qmax - qmin;\n            if (yran < 0.0) {\n                qmax = qmin;\n                qmin = qmax + yran;\n                yran = -yran;\n            }\n            if (yran <= 1.0e-20) {\n                qmin = qmin - 1.0;\n                qmax = qmax + 1.0;\n            } else {\n                // TODO move exansion of qmin/qmax nito\n                qmin = qmin - 0.02 * yran;\n                qmax = qmax + 0.02 * yran;\n            }\n\n            return {\n                num: npts,\n                start: n1,\n                end: n2,\n                panxmin: this.xmin,\n                panxmax: this.xmax,\n                panymin: qmin,\n                panymax: qmax\n            };\n        },\n\n        /**\n         * Get the pan-boundaries for the layer.\n         * \n         * @param {*} view \n         *   - a specific view to calculate the bounds against\n         */\n        get_pan_bounds: function(view) {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            // If we already have a view, the 1D\n            // plot will only attempt to figure-out the\n            // new pany using the current view-box\n            var xmin = this.xmin;\n            // Minic legacy XPLOT behavior; by default the \n            // pan boundaries are based off the first bufmax of\n            // points.\n            var xmax = Math.min(\n                xmin + (this.size * this.xdelta),\n                xmin + (Gx.bufmax * this.xdelta)\n            );\n\n            if (view) {\n                xmin = view.xmin;\n                xmax = view.xmax;\n            } else if (Gx.all && Gx.expand) {\n                // If we are expanding, then xmin/xmax need to be the full range\n                xmin = this.xmin;\n                xmax = this.xmax;\n            }\n\n            let panymin;\n            let panymax;\n            let num = 0;\n\n            while (xmin < xmax) {\n                let prep = this.prep(xmin, xmax);\n\n                panymin = (panymin === undefined) ? prep.panymin : Math.min(panymin, prep.panymin);\n                panymax = (panymax === undefined) ? prep.panymax : Math.max(panymax, prep.panymax);\n                num += prep.num;\n\n                if (Gx.all) {\n                    if (this.size === 0) {\n                        xmin = xmax;\n                    } else {\n                        if (Gx.index) {\n                            xmin = xmin + prep.num;\n                        } else {\n                            if (this.xdelta >= 0) {\n                                xmin = xmin + (prep.num * this.xdelta);\n                            } else {\n                                xmax = xmax + (prep.num * this.xdelta);\n                            }\n                        }\n                    }\n                } else {\n                    xmin = xmax;\n                }\n            }\n\n            if (panymin === undefined) {\n                panymin = 0;\n            }\n            if (panymax === undefined) {\n                panymax = 0;\n            }\n            this.ymin = panymin;\n            this.ymax = panymax;\n\n            return {\n                num: num,\n                xmin: this.xmin,\n                xmax: this.xmax,\n                ymin: this.ymin,\n                ymax: this.ymax\n            };\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            var ic = this.color;\n            var symbol = this.symbol;\n            var rad = this.radius;\n            var mask = 0;\n            var line = 0;\n            var traceoptions = {};\n\n            if (this.fillStyle) {\n                traceoptions.fillStyle = this.fillStyle;\n            } else if (Gx.fillStyle) {\n                traceoptions.fillStyle = Gx.fillStyle;\n            }\n            if (this.options) {\n                traceoptions.highlight = this.options.highlight;\n                traceoptions.noclip = this.options.noclip;\n            }\n\n            if (this.line === 0) {\n                line = 0;\n            } else {\n                line = 1;\n                if (this.thick > 0) {\n                    line = this.thick;\n                } else if (this.thick < 0) {\n                    line = Math.abs(this.thick);\n                    traceoptions.dashed = true;\n                }\n                if (this.line === 1) {\n                    traceoptions.vertsym = true;\n                }\n                if (this.line === 2) {\n                    traceoptions.horzsym = true;\n                }\n                if (this.line === 4) {\n                    traceoptions.horzsym = true;\n                    traceoptions.vertsym = true;\n                }\n            }\n\n            var segment = (Gx.segment) && (Gx.cmode !== 5) && (this.xsub > 0) && (mask === 0);\n            var xdelta = this.xdelta;\n\n            var xmin;\n            var xmax;\n            if (this.xdata) {\n                xmin = this.xmin;\n                xmax = this.xmax;\n            } else {\n                xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n                xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n                if (xmin >= xmax) { // no data but do scaling\n                    Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                    Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                }\n            }\n\n            if ((line === 0) && (symbol === 0)) {\n                // Nothing to draw\n                return {\n                    num: 0,\n                };\n            }\n\n            let panymin;\n            let panymax;\n            let num = 0;\n\n            while (xmin < xmax) {\n                //if (Gx.all) {\n                // TODO allow interrupt of all by mouse clicks\n                //}\n\n                // sigplot_prep fills in this.xptr and this.yptr (both m.PointArray)\n                // with the data to be plotted\n\n                var pts = this.prep(xmin, xmax);\n\n                panymin = (panymin === undefined) ? pts.panymin : Math.min(panymin, pts.panymin);\n                panymax = (panymax === undefined) ? pts.panymax : Math.max(panymax, pts.panymax);\n                num += pts.num;\n\n                if (pts.num > 0) {\n                    if (segment) {\n                        // TODO\n                    } else {\n                        mx.trace(Mx,\n                            ic,\n                            new m.PointArray(this.xptr),\n                            new m.PointArray(this.yptr),\n                            pts.num,\n                            pts.start,\n                            1,\n                            line,\n                            symbol,\n                            rad,\n                            traceoptions);\n                    }\n                }\n\n                if (this.size === 0) {\n                    xmin = xmax;\n                } else {\n                    if (Gx.index) {\n                        xmin = xmin + pts.num;\n                    } else {\n                        if (xdelta >= 0) {\n                            xmin = xmin + (this.size * xdelta);\n                        } else {\n                            xmax = xmax + (this.size * xdelta);\n                        }\n                    }\n                }\n            }\n\n            if ((this.position) && (this.drawmode === \"scrolling\")) {\n                var pnt = mx.real_to_pixel(Mx, this.position * this.xdelta, 0);\n                if ((pnt.x > Mx.l) && (pnt.x < Mx.r)) {\n                    mx.draw_line(Mx, \"white\", pnt.x, Mx.t, pnt.x, Mx.b);\n                }\n            }\n\n            this.ymin = panymin;\n            this.ymax = panymax;\n\n            return {\n                num: num,\n                xmin: this.xmin,\n                xmax: this.xmax,\n                ymin: this.ymin,\n                ymax: this.ymax\n            };\n        },\n\n        /**\n         * Add a highlight to a specific layer.\n         *\n         * @param {Number}\n         *            n the layer to add the highlight to\n         * @param highlight\n         *            the highlight to add\n         * @param {Number}\n         *            highlight.xstart x value to start the highlight\n         *            at\n         * @param {Number}\n         *            highlight.xend the maximum x value to end the highlight\n         *            at\n         * @param {String}\n         *            hightlight.color the color to use for the highlight\n         *\n         * @param {String}\n         *            hightlight.id the id for the highlight\n         */\n        add_highlight: function(highlight) {\n            if (!this.options.highlight) {\n                this.options.highlight = [];\n            }\n            // Check for nans\n\n            var xmin = highlight.xstart;\n            var xmax = highlight.xend;\n            var min_nan = isNaN(xmin);\n            var max_nan = isNaN(xmax);\n\n            if ((min_nan === true) || (xmin === null) || (xmin === undefined)) {\n\n                this.options.highlight = [];\n            }\n            if ((max_nan === true) || (xmax === null) || (xmax === undefined)) {\n\n                this.options.highlight = [];\n            }\n\n            if (highlight instanceof Array) {\n                this.options.highlight.push.apply(\n                    this.options.highlight, highlight);\n            } else {\n                this.options.highlight.push(highlight);\n            }\n            this.plot.refresh();\n        },\n\n        /**\n         * Remove a highlight from the layer.\n         *\n         * @param {String} {Object}\n         *             the id of the highlight to remove\n         *             or the highlight object itself\n         */\n        remove_highlight: function(highlight) {\n            if (this.options.highlight) {\n                var i = this.options.highlight.length;\n                while (i--) {\n                    if ((highlight === this.options.highlight[i]) || (highlight === this.options.highlight[i].id)) {\n                        this.options.highlight.splice(i, 1);\n                    }\n                }\n                this.plot.refresh();\n            }\n        },\n\n        get_highlights: function() {\n            if (this.options.highlight) {\n                return this.options.highlight.slice(0);\n            } else {\n                return [];\n            }\n        },\n\n        /**\n         * Clear all highlights from the layer.\n         */\n        clear_highlights: function() {\n            if (this.options.highlight) {\n                this.options.highlight = undefined;\n                this.plot.refresh();\n            }\n        }\n    };\n\n    /**\n     * Color positions for the various layers\n     *\n     * These magic numbers were conjured up by a wizard somewhere.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var mixc = [0, 53, 27, 80, 13, 40, 67, 93, 7, 60, 33, 87, 20, 47, 73, 100];\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer1D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (hcb[\"class\"] === 2) {\n            m.force1000(hcb);\n        }\n        hcb.buf_type = \"D\";\n\n        // If the input is type 2000, each row becomes\n        // it's own layer\n        var n1 = 0;\n        var n2 = 1;\n        if ((hcb[\"class\"] === 2) && (hcb.size > 0)) {\n            var num_rows = hcb.size / hcb.subsize;\n            n2 = Math.min(num_rows, 16 - Gx.lyr.length);\n        }\n\n        // Extract the layer_name before enter the loop\n        var layer_name_override = layerOptions[\"name\"];\n        delete layerOptions[\"name\"];\n\n        var layers = [];\n        for (var i = n1; i < n2; i++) {\n            // This is logic from within sigplot.for LOAD_FILES\n            var layer = new Layer1D(plot);\n            layer.init(hcb, layerOptions);\n\n            // Provide a default color for the layer\n            var n = (Gx.lyr.length) % mixc.length;\n            layer.color = mx.getcolor(Mx, m.Mc.colormap[3].colors, mixc[n]);\n\n            // Provide the layer name\n            if (hcb[\"class\"] === 2) {\n                if (layer_name_override !== undefined) {\n                    // If you get an array of names, pull the name\n                    // from this list...if we run out of names before\n                    // we run out of layers fall back\n                    if (Array.isArray(layer_name_override)) {\n                        layer.name = layer_name_override[i];\n                    } else {\n                        layer.name = layer_name_override;\n                        layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                    }\n                }\n                // If a name hasn't been assigned yet\n                if (!layer.name) {\n                    if (hcb.file_name) {\n                        layer.name = m.trim_name(hcb.file_name);\n                    } else {\n                        layer.name = \"layer_\" + Gx.lyr.length;\n                    }\n                    layer.name = layer.name + \".\" + mx.pad((i + 1).toString(), 3, \"0\");\n                }\n                layer.offset = i * hcb.subsize;\n            } else {\n                if (layer_name_override !== undefined) {\n                    layer.name = layer_name_override;\n                } else if (hcb.file_name) {\n                    layer.name = m.trim_name(hcb.file_name);\n                } else {\n                    layer.name = \"layer_\" + Gx.lyr.length;\n                }\n                layer.offset = 0;\n            }\n\n            for (var layerOption in layerOptions) {\n                if (layer[layerOption] !== undefined) {\n                    layer[layerOption] = layerOptions[layerOption];\n                }\n            }\n            if (plot.add_layer(layer)) {\n                layers.push(layer);\n            }\n        }\n\n        return layers;\n    };\n\n    module.exports = Layer1D;\n\n}());\n", "/**\n * @license\n * File: sigplot.layer2d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n    var Layer2D = function(plot) {\n        this.plot = plot;\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.ystart = 0.0;\n        this.ydelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.drawmode = \"scrolling\"; // \"falling\", \"rising\"\n        this.hcb = undefined; // index in Gx.HCB\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n\n        this.preferred_origin = 4;\n        this.opacity = 1;\n        this.xcompression = plot._Gx.xcompression; // default is Gx.xcompression\n        this.downscale = plot._Gx.rasterDownscale;\n\n        // LPB is kinda odd right now, since we read the entire file into memory anyways...\n        // given that often we are loading from an HREF so there is no downside to this...\n        // however, we keep LPB around (for now) so that the scaling behaves identical to\n        // the original code\n        this.lpb = undefined;\n\n        this.yc = 1; // y-compression factor...not yet used\n\n        this.options = {};\n    };\n\n    Layer2D.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer2D\n         * @private\n         */\n        init: function(hcb) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            if (this.hcb.pipe) {\n                var self = this;\n                this.position = 0;\n                this.frame = 0;\n\n                if (this.drawdirection !== \"horizontal\") {\n                    this.lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                } else {\n                    this.lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.r - Mx.l)));\n                }\n\n                m.addPipeWriteListener(this.hcb, function() {\n                    self._onpipewrite();\n                });\n            } else {\n                this.lps = this.hcb.lps || Math.ceil(hcb.size);\n            }\n\n            this.offset = 0;\n            this.xbufn = 0;\n            this.ybufn = 0;\n\n            if (hcb[\"class\"] <= 2) {\n                this.xsub = -1;\n                this.ysub = 1;\n                this.cx = (hcb.format[0] === 'C');\n            } else {\n                // TODO\n            }\n\n            this.skip = 1;\n            if (this.cx) {\n                this.skip = 2;\n            }\n\n            this.init_axes();\n        },\n\n        init_axes: function() {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            if (Gx.index) {\n                this.xstart = 1.0;\n                this.xdelta = 1.0;\n                this.xmin = 1.0;\n\n                this.ystart = 1.0;\n                this.ydelta = 1.0;\n                this.ymin = 1.0;\n                if (this.drawdirection !== \"horizontal\") {\n                    this.xmax = this.hcb.subsize;\n                    this.ymax = this.size;\n                } else {\n                    this.xmax = this.size;\n                    this.ymax = this.hcb.subsize;\n                }\n            } else {\n                if (this.drawdirection !== \"horizontal\") {\n                    this.xstart = this.hcb.xstart;\n                    this.xdelta = this.hcb.xdelta;\n                    var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                    this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                    this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                    this.ystart = this.hcb.ystart;\n                    this.ydelta = this.hcb.ydelta;\n                    var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                    this.ymin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                    this.ymax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n                } else {\n                    this.ystart = this.hcb.xstart;\n                    this.ydelta = this.hcb.xdelta;\n                    var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                    this.ymin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                    this.ymax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                    this.xstart = this.hcb.ystart;\n                    this.xdelta = this.hcb.ydelta;\n                    var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                    this.xmin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                    this.xmax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n                }\n            }\n\n            // TODO make this work with force 1000 applied\n            this.xframe = this.hcb.subsize;\n            this.yframe = (this.lps * this.hcb.subsize) / this.xframe;\n\n            if (this.lpb === 0) {\n                this.lpb = this.yframe;\n            }\n            if (!this.lpb || (this.lpb <= 0)) {\n                this.lpb = 16;\n            }\n            this.lpb = Math.max(1, this.lpb / this.yc) * this.yc;\n\n            if (this.drawdirection !== \"horizontal\") {\n                this.xlab = this.hcb.xunits;\n                this.ylab = this.hcb.yunits; // might be undefined\n            } else {\n                this.xlab = this.hcb.yunits;\n                this.ylab = this.hcb.xunits; // might be undefined\n            }\n\n            if ((this.drawmode === \"falling\" || this.drawdirection === \"horizontal\")) {\n                this.plot._Mx.origin = 1;\n                this.preferred_origin = 1;\n            } else {\n                this.plot._Mx.origin = 4;\n                this.preferred_origin = 4;\n            }\n        },\n\n        _onpipewrite: function() {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            while (m.pavail(this.hcb) >= (this.hcb.subsize * this.hcb.spa)) {\n\n                // if we aren't scrolling, than update the values\n                // so that the axis scrolls with the data.  The below\n                // code might seem counter intuitive, but given the\n                // the behavior of other rendering code it is configured\n                // to have ymin always be the history (i.e prior to ystart)\n                // and ystart is always the relative \"now\" which is equivalent\n                // to ymax\n                if (this.drawmode !== \"scrolling\") {\n                    this.hcb.ystart += this.hcb.ydelta;\n                    this.ystart = this.hcb.ystart;\n                    this.ymin = this.hcb.ystart - (this.hcb.ydelta * (this.lps));\n                    this.ymax = this.hcb.ystart;\n                }\n\n                if ((this.drawmode === \"falling\") && (this.drawdirection !== \"horizontal\")) {\n                    this.position = 0;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, 1);\n                    }\n                } else if ((this.drawmode === \"rising\") && (this.drawdirection !== \"horizontal\")) {\n                    this.position = this.lps - 1;\n                    if (this.img) {\n                        mx.shift_image_rows(Mx, this.img, -1);\n                    }\n                } else if (this.drawmode === \"scrolling\") {\n                    var ylength = Math.abs(this.ymax - this.ymin);\n                    this.ystart = 0;\n                    this.ymin = 0;\n                    this.ymax = ylength;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n                } else {\n                    throw \"Invalid draw mode\";\n                }\n\n                if (!this.buf) {\n                    // the layer isn't setup correctly yet\n                    return;\n                }\n\n                // grab one row worth of data\n                var ngot = m.grabx(this.hcb, this.buf, this.hcb.subsize * this.hcb.spa);\n                if (ngot === 0) { // shouldn't happen because of the pavail check\n                    m.log.error(\"Internal error\");\n                    return;\n                }\n\n                var zpoint = new m.PointArray(this.hcb.subsize);\n                if (this.cx) {\n                    if (Gx.cmode === 1) {\n                        m.cvmag(this.buf, zpoint, zpoint.length);\n                    } else if (Gx.cmode === 2) {\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                            m.vsmul(zpoint, 1.0 / (2 * Math.PI), zpoint, zpoint.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, zpoint, zpoint.length);\n                        } else {\n                            m.cvphad(this.buf, zpoint, zpoint.length);\n                        }\n                    } else if (Gx.cmode === 3) {\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) {\n                        m.vmov(this.buf.subarray(1), this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, zpoint);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, zpoint, 1, zpoint.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(zpoint, 0, zpoint.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, zpoint);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, zpoint);\n                    }\n                }\n\n                var min = zpoint[0];\n                var max = zpoint[0];\n                for (var i = 0; i < zpoint.length; i++) {\n                    if (zpoint[i] < min) {\n                        min = zpoint[i];\n                    }\n                    if (zpoint[i] > max) {\n                        max = zpoint[i];\n                    }\n                }\n\n                var zmin, zmax;\n                if (Gx.autol === 1) {\n                    zmin = min;\n                    zmax = max;\n                } else if (Gx.autol > 1) {\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                } else if (Gx.autol < 0) {\n                    // -1 means autol wasn't set so default to\n                    // 5 like the original XRTRASTER; however,\n                    // don't actually override Gx.autol since\n                    // other layers may behave differently\n                    var fac = 1.0 / (Math.max(5, 1));\n                    zmin = Gx.zmin * fac + min * (1.0 - fac);\n                    zmax = Gx.zmax * fac + max * (1.0 - fac);\n                }\n\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = zmin;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = zmax;\n                }\n                if (Gx.p_cuts) {\n                    if (this.drawmode === \"scrolling\") {\n                        //fill in the next row of data.\n                        var start_write = this.position * this.hcb.subsize;\n                        var stop_write = start_write + this.hcb.subsize;\n                        var b = 0;\n                        for (var i = start_write; i < stop_write; i++) {\n                            this.zbuf[i] = zpoint[b];\n                            b++;\n                        }\n\n                    }\n                    if (this.drawmode === \"falling\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = (this.lps - 1) * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(0, cut_off);\n                        this.zbuf = [];\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        tmp = [];\n                    }\n                    if (this.drawmode === \"rising\") {\n                        //shift and fill in the next row of data.\n                        var cut_off = this.lps * this.hcb.subsize;\n                        var tmp = this.zbuf.slice(this.hcb.subsize, cut_off);\n                        this.zbuf = [];\n                        this.zbuf.push.apply(this.zbuf, tmp);\n                        for (var i = 0; i < this.hcb.subsize; i++) {\n                            this.zbuf.push(zpoint[i]);\n                        }\n                        tmp = [];\n                    }\n                }\n\n                if (this.img) {\n                    if (this.drawdirection !== \"horizontal\") {\n                        mx.update_image_row(Mx, this.img, zpoint, this.position, Gx.zmin, Gx.zmax, this.xcompression);\n                    } else {\n                        mx.update_image_col(Mx, this.img, zpoint, this.position, Gx.zmin, Gx.zmax, this.xcompression);\n                    }\n                }\n                this.frame += 1;\n                if (this.drawmode === \"scrolling\") {\n                    this.position = (this.position + 1) % this.lps;\n                }\n\n                if (Mx.level === 0) {\n                    Gx.panymin = this.ymin;\n                    Gx.panymax = this.ymax;\n                    Mx.stk[0].ymin = this.ymin;\n                    Mx.stk[0].ymax = this.ymax;\n                }\n            }\n        },\n\n        get_data: function() {\n            var HCB = this.hcb;\n\n            if (!this.buf) {\n                if (this.hcb.pipe) {\n                    // For pipes, we allocate buf and zbuf to only hold one line of\n                    // data\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    // Otherwise, we allocate for the entire image\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n            }\n\n            if (!this.hcb.pipe) {\n                m.grab(HCB, this.buf, 0, HCB.subsize);\n            }\n        },\n\n        /**\n         * Provisional API\n         *\n         * @private\n         * @param x\n         * @param y\n         */\n        get_z: function(x, y) {\n            var ix = Math.floor(x / this.hcb.xdelta);\n            var iy = Math.floor(y / this.hcb.ydelta);\n            var zidx = (iy * this.hcb.subsize) + ix;\n            return this.zbuf[zidx];\n        },\n\n        change_settings: function(settings) {\n            var Gx = this.plot._Gx;\n            if (settings.subsize) {\n                this.hcb.subsize = settings.subsize;\n                this.hcb.ape = settings.subsize;\n                this.hcb.size = this.hcb.dview.length / (this.hcb.spa * this.hcb.ape);\n                this.lps = Math.ceil(this.hcb.size);\n                var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                this.ymin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                this.ymax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n            }\n            if (settings.cmode !== undefined) {\n                this.img = undefined;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n            if ((settings.zmin !== undefined) ||\n                (settings.zmax !== undefined) ||\n                (settings.autoz !== undefined)) {\n                this.img = undefined;\n            }\n            if (settings.drawmode !== undefined) {\n                this.drawmode = settings.drawmode;\n            }\n            if (settings.drawdirection !== undefined) {\n                this.drawdirection = settings.drawdirection;\n            }\n            // There are a variety of settings, that when changed \n            // require us to recompute the image and many internal settings\n            if ((settings.drawmode !== undefined) || (settings.xmin !== undefined) ||\n                (settings.xmax !== undefined) || (settings.xdelta !== undefined) ||\n                (settings.xstart !== undefined) || (settings.drawdirection !== undefined)) {\n                // Reset the buffer\n                this.position = 0;\n                this.frame = 0;\n                if (this.hcb.pipe) {\n                    this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.hcb.subsize);\n                } else {\n                    this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                    this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                }\n                this.img = undefined;\n\n\n                this.init_axes();\n            }\n            if (settings.opacity !== undefined) {\n                this.opacity = settings.opacity;\n            }\n            if (settings.p_cuts !== undefined) {\n                var p_cuts = Gx.p_cuts;\n                if (settings.p_cuts === null) {\n                    p_cuts = !p_cuts;\n                } else {\n                    p_cuts = settings.p_cuts;\n                }\n\n                // If p_cuts are enabled from streams, we need to keep the entire zbuf in memory\n                if (this.hcb.pipe) {\n                    if (p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n                    }\n                }\n            }\n\n            if (settings.xcmp !== undefined) {\n                if (settings.xcmp === \"smooth\") {\n                    this.xcompression = 0;\n                } else if (settings.xcmp === \"avg\") {\n                    this.xcompression = 1;\n                } else if (settings.xcmp === \"min\") {\n                    this.xcompression = 2;\n                } else if (settings.xcmp === \"max\") {\n                    this.xcompression = 3;\n                } else if (settings.xcmp === \"first\") {\n                    this.xcompression = 4;\n                } else if (settings.xcmp === \"maxabs\") {\n                    this.xcompression = 5;\n                } else {\n                    this.xcompression = settings.xcmp;\n                }\n            }\n\n            if (settings.name !== undefined) {\n                this.name = settings.name;\n            }\n\n            if (settings.downscale !== undefined) {\n                this.downscale = settings.downscale;\n            }\n        },\n\n        reload: function(data, hdrmod) {\n            if (this.hcb.pipe) {\n                throw \"reload cannot be used with pipe, use push instead\";\n            }\n            var axis_change = (this.hcb.dview.length !== data.length) || hdrmod;\n            if (hdrmod) {\n                for (var k in hdrmod) {\n                    this.hcb[k] = hdrmod[k];\n                    if (k === \"xstart\" || k === \"xdelta\" | k === \"ystart\" || k === \"ydelta\" || k === \"subsize\") {\n                        axis_change = true;\n                    }\n                }\n            }\n            if (Array.isArray(data) && Array.isArray(data[0])) {\n                this.hcb.type = 2000;\n                this.hcb[\"class\"] = 2;\n                this.hcb.subsize = data[0].length;\n                this.hcb.size = data.length;\n                axis_change = true;\n            }\n            this.hcb.setData(data);\n\n            // Setting these causes refresh() to refetch\n            this.init(this.hcb);\n            this.img = null;\n            this.buf = null;\n\n            var xmin = this.xmin;\n            var xmax = this.xmax;\n\n            if (axis_change) {\n                var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                this.xmin = Math.min(this.hcb.xstart, d);\n                this.xmax = Math.max(this.hcb.xstart, d);\n                this.xdelta = this.hcb.xdelta;\n                this.xstart = this.hcb.xstart;\n                xmin = undefined;\n                xmax = undefined;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax\n            };\n        },\n\n        push: function(data, hdrmod, sync) {\n            var Gx = this.plot._Gx;\n            var rescale = false;\n            var timestamp = null;\n            if (hdrmod) {\n                // handle timestamps in a unique manner\n                if (hdrmod.timestamp) {\n                    timestamp = hdrmod.timestamp;\n                    delete hdrmod[\"timestamp\"];\n                }\n\n                // If the subsize changes, we need to invalidate the buffer and image\n                if ((hdrmod.subsize) && (hdrmod.subsize !== this.hcb.subsize)) {\n                    this.hcb.subsize = hdrmod.subsize;\n                    if (this.hcb.pipe && !Gx.p_cuts) {\n                        this.buf = this.hcb.createArray(null, 0, this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.hcb.subsize);\n                        this.img = undefined;\n                    } else {\n                        this.buf = this.hcb.createArray(null, 0, this.lps * this.hcb.subsize * this.hcb.spa);\n                        this.zbuf = new m.PointArray(this.lps * this.hcb.subsize);\n                        this.img = undefined;\n                    }\n                    rescale = true;\n                }\n\n                for (var k in hdrmod) {\n                    if (this.hcb[k] !== hdrmod[k]) {\n                        this.hcb[k] = hdrmod[k];\n                        if (k === \"type\") {\n                            this.hcb[\"class\"] = hdrmod[k] / 1000;\n                        }\n                        rescale = true;\n                    }\n                }\n\n                if (hdrmod.lps) {\n                    this.lps = hdrmod.lps;\n                }\n\n                if (rescale) {\n                    var d = this.hcb.xstart + (this.hcb.xdelta * this.hcb.subsize);\n                    this.xmin = Math.min(this.hcb.xstart, d);\n                    this.xmax = Math.max(this.hcb.xstart, d);\n                    this.xdelta = this.hcb.xdelta;\n                    this.xstart = this.hcb.xstart;\n\n                    this.ystart = this.hcb.ystart;\n                    this.ydelta = this.hcb.ydelta;\n                    var d = this.hcb.ystart + (this.hcb.ydelta * this.lps);\n                    this.ymin = Math.min(this.hcb.ystart, d);\n                    this.ymax = Math.max(this.hcb.ystart, d);\n                }\n\n            }\n\n            if ((this.hcb.yunits === 1) || (this.hcb.yunits === 4)) {\n                if ((!this.hcb[\"timecode\"]) && (timestamp)) {\n                    // if we don't have a timecode set, we can use\n                    // the timestamp and reset ystart\n                    this.hcb.timecode = m.j1970toj1950(timestamp);\n                    this.hcb.ystart = 0;\n                    rescale = true;\n                } else {\n                    // otherwise, we need to look at timecode, ystart,\n                    // and ydelta to see if the timestamp indicates\n                    // any data drops...and then zero-fill accordingly\n                    // TODO\n                }\n            }\n\n            if (data.length > 0) {\n                m.filad(this.hcb, data, sync);\n            }\n\n            return rescale;\n\n        },\n\n        get_pan_bounds: function(view) {\n            let prep = this.prep();\n\n            if (prep) {\n                return {\n                    num: prep.num,\n                    xmin: this.xmin,\n                    xmax: this.xmax,\n                    ymin: this.ymin,\n                    ymax: this.ymax\n                };\n            } else {\n                return {\n                    num: 0\n                };\n            }\n        },\n\n        prep: function(xmin, xmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var npts = this.lps;\n\n            var skip = this.skip;\n\n            var qmin = this.xmin;\n            var qmax = this.xmax;\n            var n1, n2;\n\n            var xsize = this.hcb.subsize;\n            if (this.xcompression > 0) {\n                if (this.drawdirection !== \"horizontal\") {\n                    xsize = Math.min(this.hcb.subsize, Math.ceil(Mx.r - Mx.l));\n                } else {\n                    xsize = Math.min(this.hcb.subsize, Math.ceil(Mx.t - Mx.b));\n                }\n            }\n\n            this.get_data();\n\n            if (!this.hcb.pipe) {\n                // if we aren't a pipe we do a full prep\n\n                if ((Gx.cmode === 5) || (this.xsub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var xstart = this.xstart;\n                    var xdelta = this.xdelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (xdelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - xstart) / xdelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - xstart) / xdelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (npts <= 0) {\n                    m.log.debug(\"Nothing to plot\");\n                    return;\n                }\n\n                if ((Gx.cmode === 5) || (this.ysub > 0)) {\n                    // TODO - is this mode supported in rasters?\n                } else if (npts > 0) {\n                    var ystart = this.ystart;\n                    var ydelta = this.ydelta;\n                    var d = npts;\n                    if (Gx.index) {\n                        n1 = 0;\n                        n2 = npts - 1;\n                    } else if (ydelta >= 0.0) {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta))) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) + 2.0)) - 1.0;\n                    } else {\n                        n1 = Math.max(1.0, Math.min(d, Math.round((xmax - ystart) / ydelta) - 1.0)) - 1.0;\n                        n2 = Math.max(1.0, Math.min(d, Math.round((xmin - ystart) / ydelta) + 2.0)) - 1.0;\n                    }\n\n                    npts = n2 - n1 + 1;\n                    if (npts < 0) {\n                        m.log.debug(\"Nothing to plot\");\n                        npts = 0;\n                    }\n                }\n\n                if (this.cx) {\n                    if (Gx.cmode === 1) { // mag\n                        m.cvmag(this.buf, this.zbuf, this.zbuf.length);\n                    } else if (Gx.cmode === 2) { // phase\n                        if (Gx.plab === 25) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                            m.vsmul(this.zbuf, 1.0 / (2 * Math.PI), this.zbuf, this.zbuf.length);\n                        } else if (Gx.plab !== 24) {\n                            m.cvpha(this.buf, this.zbuf, this.zbuf.length);\n                        } else {\n                            m.cvphad(this.buf, this.zbuf, this.zbuf.length);\n                        }\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vmov(this.buf.subarray(1), this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR - what does this mean for a raster?\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.cvmag2logscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                } else {\n                    if (Gx.cmode === 1) { // mag\n                        m.vabs(this.buf, this.zbuf);\n                    } else if (Gx.cmode === 2) { // phase\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 3) { // real\n                        m.vmov(this.buf, this.skip, this.zbuf, 1, this.zbuf.length);\n                    } else if (Gx.cmode === 4) { // imag\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 5) { // IR\n                        m.vfill(this.zbuf, 0, this.zbuf.length);\n                    } else if (Gx.cmode === 6) { // 10log\n                        m.vlogscale(this.buf, Gx.dbmin, 10.0, this.zbuf);\n                    } else if (Gx.cmode === 7) { // 20log\n                        m.vlogscale(this.buf, Gx.dbmin, 20.0, this.zbuf);\n                    }\n                }\n\n                // find z-min/z-max\n                // this is equivalent to setting XRASTER /LPB=0\n                var zpoint = this.zbuf;\n\n                var min = 0;\n                var max = 0;\n\n                if ((Gx.autol <= 0) || this.hcb.pipe) {\n                    // If autol is not used or the layer is rendering\n                    // a pipe, then use the basic z-scaling method\n                    if (zpoint.length > 0) {\n                        min = zpoint[0];\n                        max = zpoint[0];\n                        for (var i = 0; i < zpoint.length; i++) {\n                            if ((i / this.xframe) >= this.lpb) {\n                                break;\n                            }\n                            if (zpoint[i] < min) {\n                                min = zpoint[i];\n                            }\n                            if (zpoint[i] > max) {\n                                max = zpoint[i];\n                            }\n                        }\n                    }\n\n                    if (((Gx.autoz & 1) !== 0)) {\n                        if (Gx.zmin !== undefined) {\n                            Gx.zmin = Math.min(Gx.zmin, min);\n                        } else {\n                            Gx.zmin = min;\n                        }\n                    }\n                    if (((Gx.autoz & 2) !== 0)) {\n                        if (Gx.zmax !== undefined) {\n                            Gx.zmax = Math.min(Gx.zmax, max);\n                        } else {\n                            Gx.zmax = max;\n                        }\n                    }\n\n                    this.img = mx.create_image(Mx,\n                        this.zbuf,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        this.xcompression,\n                        this.drawdirection);\n                } else {\n                    // otherwise autol > 1\n                    var nny = this.hcb.size;\n                    var fac = 1.0 / (Math.max(Gx.autol, 1));\n\n                    // If the image isn't yet created, make one now\n                    if (!this.img) {\n                        this.img = mx.create_image(Mx,\n                            this.zbuf,\n                            this.hcb.subsize,\n                            xsize,\n                            this.lps,\n                            Gx.zmin + Gx.zoff,\n                            Gx.zmax + Gx.zoff,\n                            this.drawdirection);\n                    }\n\n                    Gx.zmin = 0;\n                    Gx.zmax = 0;\n                    if (zpoint.length > 0) {\n                        for (var yy = 0; yy < nny; yy++) {\n                            var noff = yy * this.xframe;\n                            var min = zpoint[noff];\n                            var max = zpoint[noff];\n                            for (var i = 0; i < this.xframe; i++) {\n                                min = Math.min(zpoint[noff + i], min);\n                                max = Math.max(zpoint[noff + i], max);\n                            }\n\n                            // Auto-scale this raster line\n                            if ((Gx.autoz !== 2) && (min !== undefined)) {\n                                Gx.zmin = (min * fac) + (Gx.zmin * (1.0 - fac));\n                            }\n                            if ((Gx.autoz !== 1) && (max !== undefined)) {\n                                Gx.zmax = (max * fac) + (Gx.zmax * (1.0 - fac));\n                            }\n\n                            // Render the row\n                            mx.update_image_row(Mx,\n                                this.img,\n                                zpoint.subarray(noff, noff + this.xframe),\n                                yy,\n                                Gx.zmin,\n                                Gx.zmax);\n\n                        }\n                    }\n                }\n            } else {\n                // Setup image for pipe-mode\n\n                if (!this.img) {\n                    if (Gx.zmin === undefined) {\n                        Gx.zmin = 0;\n                    }\n                    if (Gx.zmax === undefined) {\n                        Gx.zmax = 0;\n                    }\n                    this.img = mx.create_image(Mx,\n                        null,\n                        this.hcb.subsize,\n                        xsize,\n                        this.lps,\n                        Gx.zmin + Gx.zoff,\n                        Gx.zmax + Gx.zoff,\n                        this.xcompression,\n                        this.drawdirection);\n                }\n            }\n\n            this.img.cmode = Gx.cmode;\n            this.img.cmap = Gx.cmap;\n            this.img.origin = Mx.origin;\n\n            // Make the parts without data transparent\n            if (this.hcb.pipe && (this.frame < this.lps)) {\n                var imgd = new Uint32Array(this.img);\n                if (this.drawdirection !== \"horizontal\") {\n                    if (this.drawmode === \"rising\") {\n                        for (var i = 0; i < imgd.length - (this.frame * xsize); i++) {\n                            imgd[i] = 0;\n                        }\n                    } else {\n                        for (var i = this.frame * xsize; i < imgd.length; i++) {\n                            imgd[i] = 0;\n                        }\n                    }\n                } else {\n                    for (var j = this.frame; j < this.lps; j++) {\n                        for (var i = 0; i < this.img.height; i++) {\n                            imgd[(i * this.img.width) + j] = 0;\n                        }\n                    }\n                }\n            }\n\n            return {\n                num: npts,\n                panxmin: this.xmin,\n                panxmax: this.xmax,\n                panymin: this.ymin,\n                panymax: this.ymax\n            };\n        },\n\n        xCutData: function(ypos, zData) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n            var height = this.lps;\n            var width = this.xframe;\n            var i;\n\n            // By default, pipe mode doesn't keep historical data\n            // around unless p_cuts has been turned on.\n            if (this.hcb.pipe && !Gx.p_cuts) {\n                return null;\n            }\n\n            var x_cut_data;\n            if (this.drawdirection !== \"horizontal\") {\n                var row;\n\n                if (!this.hcb.pipe) {\n                    row = Math.floor((ypos - this.ystart) / this.ydelta);\n                } else {\n                    row = Math.floor((height * (Mx.ypos - Mx.t)) / (Mx.b - Mx.t));\n                }\n                if ((row < 0) || (row > this.lps)) {\n                    return null;\n                }\n                var start = row * width;\n                var finish = start + width;\n                if (zData || this.hcb.pipe) {\n                    x_cut_data = this.zbuf.slice(start, finish);\n                } else {\n                    x_cut_data = this.buf.slice(start, finish);\n                }\n            } else {\n                x_cut_data = [];\n\n                var col = Math.round((ypos - this.ystart) / this.ydelta);\n                for (i = col; i < (width * height); i += width) {\n                    if (zData || this.hcb.pipe) {\n                        x_cut_data.push(this.zbuf[i]);\n                    } else {\n                        x_cut_data.push(this.buf[i]);\n                    }\n                }\n            }\n\n            return x_cut_data;\n        },\n\n        /**\n         * Display an xCut\n         *\n         * @param ypos\n         *     the y-position to extract the x-cut, leave undefined to\n         *     leave xCut\n         */\n        xCut: function(ypos) {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            //display the x-cut of the raster\n            if (ypos !== undefined) {\n\n                // Stash important values\n                this.cut_stash = {};\n                this.cut_stash.ylabel = Gx.ylabel;\n                this.cut_stash.xlabel = Gx.xlabel;\n                this.cut_stash.level = Mx.level;\n                this.cut_stash.stk = JSON.parse(JSON.stringify(Mx.stk));\n                this.cut_stash.panymin = Gx.panymin;\n                this.cut_stash.panymax = Gx.panymax;\n                this.cut_stash.panxmin = Gx.panxmin;\n                this.cut_stash.panxmax = Gx.panxmax;\n\n                // Change Gx.lyr[0] to this.\n                var x_cut_data = this.xCutData(ypos);\n                if (!x_cut_data) {\n                    return;\n                }\n\n                //adjust for the values of the xcut\n                this.old_drawmode = this.drawmode;\n                this.old_autol = Gx.autol;\n                this.plot.change_settings({\n                    drawmode: \"undefined\",\n                    autol: -1\n                });\n\n                var cx = ((Gx.lyr.length > 0) && this.cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.xlab][0] !== \"None\") && (m.UNITS[Gx.xlab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.xlab][0];\n                } else {\n                    Gx.xlabel = \"Frequency\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN X_CUT MODE\";\n                Mx.origin = 1;\n\n                this.xcut_layer = this.plot.overlay_array(x_cut_data, {\n                    xstart: this.xstart,\n                    xdelta: this.xdelta\n                }, {\n                    name: \"x_cut_data\",\n                    line: 3\n                });\n\n                //do not display any other layers\n                var xcut_lyrn = this.plot.get_lyrn(this.xcut_layer);\n                for (var i = 0; i < Gx.lyr.length; i++) {\n                    if (i !== xcut_lyrn) {\n                        Gx.lyr[i].display = !Gx.lyr[i].display;\n                    }\n                }\n                Gx.x_cut_press_on = true;\n\n                // The y-axis is now the z-values\n                var mxmn = m.vmxmn(x_cut_data, this.xframe);\n                var ymax = mxmn.smax;\n                var ymin = mxmn.smin;\n                var yran = ymax - ymin;\n                if (yran < 0.0) {\n                    ymax = ymin;\n                    ymin = ymax + yran;\n                    yran = -yran;\n                }\n                if (yran <= 1.0e-20) {\n                    ymin = ymin - 1.0;\n                    ymax = ymax + 1.0;\n                } else {\n                    ymin = ymin - 0.02 * yran;\n                    ymax = ymax + 0.02 * yran;\n                }\n\n                Gx.panymin = mxmn.smin;\n                Gx.panymax = mxmn.smax;\n                for (var h = 1; h < Mx.level + 1; h++) {\n                    Mx.stk[h].ymin = ymin;\n                    Mx.stk[h].ymax = ymax;\n                    Mx.stk[h].yscl = (Mx.stk[h].ymax - Mx.stk[h].ymin) / (Mx.b - Mx.t);\n                }\n                this.plot.rescale();\n\n            } else if (Gx.x_cut_press_on) {\n                // ypos wasn't provided so turn x-cut off\n                Gx.x_cut_press_on = false;\n                for (var h = 0; h < Gx.lyr.length; h++) {\n                    if (h !== this.xcut_layer) {\n                        Gx.lyr[h].display = !Gx.lyr[h].display;\n                    }\n                    this.plot.deoverlay(this.xcut_layer);\n\n                    // Restore settings\n                    Gx.xlabel = this.cut_stash.xlabel;\n                    Gx.ylabel = this.cut_stash.ylabel;\n                    Mx.level = this.cut_stash.level;\n                    Mx.stk = JSON.parse(JSON.stringify(this.cut_stash.stk));\n                    Gx.panymin = this.cut_stash.panymin;\n                    Gx.panymax = this.cut_stash.panymax;\n                    Gx.panxmin = this.cut_stash.panxmin;\n                    Gx.panxmax = this.cut_stash.panxmax;\n                    this.cut_stash = undefined;\n\n\n                    this.plot.rescale();\n                    this.plot.refresh();\n                    this.xcut_layer = undefined;\n                    this.plot.change_settings({\n                        drawmode: this.old_drawmode,\n                        autol: this.old_autol\n                    });\n                }\n            }\n        },\n\n        yCutData: function(xpos, zData) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n            var height = this.lps;\n            var width = this.xframe;\n            var i = 0;\n\n            // By default, pipe mode doesn't keep historical data\n            // around unless p_cuts has been turned on.\n            if (this.hcb.pipe && !Gx.p_cuts) {\n                return null;\n            }\n\n            var y_cut_data;\n            if (this.drawdirection !== \"horizontal\") {\n                y_cut_data = [];\n                var col;\n                if (!this.hcb.pipe || zData) {\n                    col = Math.floor((xpos - this.xstart) / this.xdelta);\n                    if (zData) {\n                        for (i = col; i < (width * height); i += width) {\n                            y_cut_data.push(this.zbuf[i]);\n                        }\n                    } else {\n                        for (i = col; i < (width * height); i += width) {\n                            y_cut_data.push(this.buf[i]);\n                        }\n                    }\n                } else {\n                    col = Math.floor((width * (Mx.xpos - Mx.l)) / (Mx.r - Mx.l));\n                    for (i = col; i < (width * height); i += width) {\n                        y_cut_data.push(this.zbuf[i]);\n                    }\n                }\n            } else {\n                var row = Math.round((xpos - this.xstart) / this.xdelta);\n                if ((row < 0) || (row > this.lps)) {\n                    return;\n                }\n                var start = row * width;\n                var finish = start + width;\n                if (!this.hcb.pipe || zData) {\n                    y_cut_data = this.zbuf.slice(start, finish);\n                } else {\n                    y_cut_data = this.buf.slice(start, finish);\n                }\n            }\n\n            return y_cut_data;\n        },\n\n        /**\n         * Display an yCut\n         *\n         * @param xpos\n         *     the x-position to extract the y-cut, leave undefined to\n         *     leave yCut\n         */\n        yCut: function(xpos) {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n\n            //display the y-cut of the raster\n            if (xpos !== undefined) {\n                // Stash important values\n                this.cut_stash = {};\n                this.cut_stash.xlabel = Gx.xlabel;\n                this.cut_stash.ylabel = Gx.ylabel;\n                this.cut_stash.level = Mx.level;\n                this.cut_stash.stk = JSON.parse(JSON.stringify(Mx.stk));\n                this.cut_stash.ymax = Mx.stk[Mx.level].ymax;\n                this.cut_stash.panymin = Gx.panymin;\n                this.cut_stash.panymax = Gx.panymax;\n                this.cut_stash.panxmin = Gx.panxmin;\n                this.cut_stash.panxmax = Gx.panxmax;\n\n                var y_cut_data = this.yCutData(xpos);\n\n                //adjust for the values of the xcut\n                this.old_drawmode = this.drawmode;\n                this.old_autol = Gx.autol;\n\n                this.plot.change_settings({\n                    drawmode: \"undefined\",\n                    autol: -1\n                });\n\n\n                var cx = ((Gx.lyr.length > 0) && this.cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.ylab][0] !== \"None\") && (m.UNITS[Gx.ylab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.ylab][0];\n                } else {\n                    Gx.xlabel = \"Time\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN Y_CUT MODE\";\n                Mx.origin = 1;\n                this.ycut_layer = this.plot.overlay_array(y_cut_data, {\n                    xstart: this.ystart,\n                    xdelta: this.ydelta\n                }, {\n                    name: \"y_cut_data\",\n                    line: 3\n                });\n\n\n                //do not display any other layers\n                var ycut_lyrn = this.plot.get_lyrn(this.ycut_layer);\n                for (var k = 0; k < Gx.lyr.length; k++) {\n                    if (k !== ycut_lyrn) {\n                        Gx.lyr[k].display = !Gx.lyr[k].display;\n                    }\n                }\n\n                Gx.y_cut_press_on = true;\n\n                // The y-axis is now the z-values\n                var mxmn = m.vmxmn(y_cut_data, this.lps);\n                var ymax = mxmn.smax;\n                var ymin = mxmn.smin;\n                var yran = ymax - ymin;\n                if (yran < 0.0) {\n                    ymax = ymin;\n                    ymin = ymax + yran;\n                    yran = -yran;\n                }\n                if (yran <= 1.0e-20) {\n                    ymin = ymin - 1.0;\n                    ymax = ymax + 1.0;\n                } else {\n                    ymin = ymin - 0.02 * yran;\n                    ymax = ymax + 0.02 * yran;\n                }\n\n                Gx.panymin = mxmn.smin;\n                Gx.panymax = mxmn.smax;\n                for (var h = 1; h < Mx.level + 1; h++) {\n                    // the x-axis is now the yvalues\n                    Mx.stk[h].xmin = Mx.stk[h].ymin;\n                    Mx.stk[h].xmax = Mx.stk[h].ymax;\n                    Mx.stk[h].xscl = (Mx.stk[h].xmax - Mx.stk[h].xmin) / (Mx.r - Mx.t);\n\n                    // the y-axis is now the zvalues\n                    Mx.stk[h].ymin = ymin;\n                    Mx.stk[h].ymax = ymax;\n                    Mx.stk[h].yscl = (Mx.stk[h].ymax - Mx.stk[h].ymin) / (Mx.b - Mx.t);\n                }\n\n                this.plot.rescale();\n            } else if (Gx.y_cut_press_on) {\n                Gx.y_cut_press_on = false;\n                for (var j = 0; j < Gx.lyr.length; j++) {\n                    if (j !== this.ycut_layer) {\n                        Gx.lyr[j].display = !Gx.lyr[j].display;\n                    }\n                    this.plot.deoverlay(this.ycut_layer);\n\n                    // Restore settings\n                    Gx.xlabel = this.cut_stash.xlabel;\n                    Gx.ylabel = this.cut_stash.ylabel;\n                    Mx.level = this.cut_stash.level;\n                    Mx.stk = JSON.parse(JSON.stringify(this.cut_stash.stk));\n                    Gx.panymin = this.cut_stash.panymin;\n                    Gx.panymax = this.cut_stash.panymax;\n                    Gx.panxmin = this.cut_stash.panxmin;\n                    Gx.panxmax = this.cut_stash.panxmax;\n                    this.cut_stash = undefined;\n\n                    this.plot.rescale();\n                    this.plot.refresh();\n                    this.ycut_layer = undefined;\n                    this.plot.change_settings({\n                        drawmode: this.old_drawmode,\n                        autol: this.old_autol\n                    });\n                }\n            }\n        },\n\n        draw: function() {\n            var Mx = this.plot._Mx;\n            var Gx = this.plot._Gx;\n            var HCB = this.hcb;\n\n            if (this.hcb.pipe && this.img) {\n                var lps;\n                if (this.drawdirection !== \"horizontal\") {\n                    lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.b - Mx.t)));\n                } else {\n                    //lps = this.hcb.lps || Math.ceil(Math.max(1, (Mx.r - Mx.l)));\n                    lps = this.lps;\n                }\n                if ((lps !== this.lps) && this.buf) {\n                    var lps_delta = (lps - this.lps);\n                    this.lps = lps;\n                    if (this.position >= this.lps) { // if lps got resized make sure we don't go out of bounds\n                        this.position = 0;\n                    }\n\n                    if (this.drawmode === \"scrolling\") {\n                        // in scrolling mode, ymin should never change\n                        if (this.drawdirection !== \"horizontal\") {\n                            var d = HCB.ystart + (HCB.ydelta * this.lps);\n                            this.ymin = Math.min(HCB.ystart, d);\n                            this.ymax = Math.max(HCB.ystart, d);\n                            this.img = mx.resize_image_height(Mx, this.img, this.lps);\n                        }\n                    } else if (this.drawmode === \"falling\") {\n                        this.ymax = this.ymin + (HCB.ydelta * this.lps);\n                        this.img = mx.resize_image_height(Mx, this.img, this.lps);\n                    } else if (this.drawmode === \"rising\") {\n                        this.ymin = this.ymax - (HCB.ydelta * this.lps);\n                        // the img needs to be shifted\n                        if (lps_delta > 0) {\n                            this.img = mx.resize_image_height(Mx, this.img, this.lps);\n                            mx.shift_image_rows(Mx, this.img, lps_delta, true);\n                        } else {\n                            mx.shift_image_rows(Mx, this.img, lps_delta, true);\n                            this.img = mx.resize_image_height(Mx, this.img, this.lps);\n                        }\n                    }\n\n\n                    // reset the image since we now have more lines to render\n                    // TODO - can we preserve the image data rather than resetting?\n                    this.plot.rescale();\n                }\n            }\n\n            var xmin = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n            var xmax = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n            if (xmin >= xmax) { // no data but do scaling\n                Gx.panxmin = Math.min(Gx.panxmin, this.xmin);\n                Gx.panxmax = Math.max(Gx.panxmax, this.xmax);\n                return;\n            }\n            var ymin = Math.max(this.ymin, Mx.stk[Mx.level].ymin);\n            var ymax = Math.min(this.ymax, Mx.stk[Mx.level].ymax);\n\n            var w = Math.abs(xmax - xmin) + 1;\n            var h = Math.abs(ymax - ymin) + 1;\n\n            w = Math.floor(w / HCB.xdelta);\n            h = Math.floor(h / HCB.ydelta);\n\n            w = Math.min(w, HCB.subsize);\n            h = Math.min(h, HCB.size);\n\n            var ul = mx.real_to_pixel(Mx, xmin, ymin);\n            var lr = mx.real_to_pixel(Mx, xmax, ymax);\n\n            var iw = lr.x - ul.x;\n            var ih = lr.y - ul.y;\n\n            var rx = iw / w;\n            var ry = ih / h;\n\n            Gx.xe = Math.max(1, Math.round(rx));\n            Gx.ye = Math.max(1, Math.round(ry));\n\n            // we might need to prep in certian situations\n            if ((!this.img) || (!this.buf) || (Gx.cmode !== this.img.cmode) || (Mx.origin !== this.img.origin)) {\n                this.prep(xmin, xmax);\n            }\n\n            // if there is an image, render it\n            if (this.img) {\n                mx.draw_image(Mx, this.img, this.xmin, this.ymin, this.xmax, this.ymax, this.opacity, Gx.rasterSmoothing, this.downscale);\n            }\n\n            // render the scrolling pipe line\n            if (this.position !== null && this.drawmode === \"scrolling\") {\n                var pnt;\n                if (this.drawdirection !== \"horizontal\") {\n                    pnt = mx.real_to_pixel(Mx, 0, this.position * this.ydelta);\n                    if ((pnt.y > Mx.t) && (pnt.y < Mx.b)) {\n                        mx.draw_line(Mx, \"white\", Mx.l, pnt.y, Mx.r, pnt.y);\n                    }\n                } else {\n                    pnt = mx.real_to_pixel(Mx, this.position * this.xdelta, 0);\n                    if ((pnt.x > Mx.l) && (pnt.x < Mx.r)) {\n                        mx.draw_line(Mx, \"white\", pnt.x, Mx.t, pnt.x, Mx.b);\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer2D.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        hcb.buf_type = \"D\";\n        if (!hcb.ystart) {\n            hcb.ystart = 0.0;\n        }\n        if (!hcb.ydelta) {\n            hcb.ydelta = 1.0;\n        }\n\n        var layer = new Layer2D(plot);\n        layer.init(hcb);\n\n        if (hcb.file_name) {\n            layer.name = m.trim_name(hcb.file_name);\n        } else {\n            layer.name = \"layer_\" + Gx.lyr.length;\n        }\n\n        layer.change_settings(layerOptions);\n\n        var layers = [];\n        if (plot.add_layer(layer)) {\n            layers.push(layer);\n        }\n\n        return layers;\n    };\n\n    module.exports = Layer2D;\n\n}());\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "var events = require('events')\nvar inherits = require('inherits')\n\nmodule.exports = LRU\n\nfunction LRU (opts) {\n  if (!(this instanceof LRU)) return new LRU(opts)\n  if (typeof opts === 'number') opts = {max: opts}\n  if (!opts) opts = {}\n  events.EventEmitter.call(this)\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n  this.max = opts.max || 1000\n  this.maxAge = opts.maxAge || 0\n}\n\ninherits(LRU, events.EventEmitter)\n\nObject.defineProperty(LRU.prototype, 'keys', {\n  get: function () { return Object.keys(this.cache) }\n})\n\nLRU.prototype.clear = function () {\n  this.cache = {}\n  this.head = this.tail = null\n  this.length = 0\n}\n\nLRU.prototype.remove = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n  delete this.cache[key]\n  this._unlink(key, element.prev, element.next)\n  return element.value\n}\n\nLRU.prototype._unlink = function (key, prev, next) {\n  this.length--\n\n  if (this.length === 0) {\n    this.head = this.tail = null\n  } else {\n    if (this.head === key) {\n      this.head = prev\n      this.cache[this.head].next = null\n    } else if (this.tail === key) {\n      this.tail = next\n      this.cache[this.tail].prev = null\n    } else {\n      this.cache[prev].next = next\n      this.cache[next].prev = prev\n    }\n  }\n}\n\nLRU.prototype.peek = function (key) {\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n  return element.value\n}\n\nLRU.prototype.set = function (key, value) {\n  if (typeof key !== 'string') key = '' + key\n\n  var element\n\n  if (this.cache.hasOwnProperty(key)) {\n    element = this.cache[key]\n    element.value = value\n    if (this.maxAge) element.modified = Date.now()\n\n    // If it's already the head, there's nothing more to do:\n    if (key === this.head) return value\n    this._unlink(key, element.prev, element.next)\n  } else {\n    element = {value: value, modified: 0, next: null, prev: null}\n    if (this.maxAge) element.modified = Date.now()\n    this.cache[key] = element\n\n    // Eviction is only possible if the key didn't already exist:\n    if (this.length === this.max) this.evict()\n  }\n\n  this.length++\n  element.next = null\n  element.prev = this.head\n\n  if (this.head) this.cache[this.head].next = key\n  this.head = key\n\n  if (!this.tail) this.tail = key\n  return value\n}\n\nLRU.prototype._checkAge = function (key, element) {\n  if (this.maxAge && (Date.now() - element.modified) > this.maxAge) {\n    this.remove(key)\n    this.emit('evict', {key: key, value: element.value})\n    return false\n  }\n  return true\n}\n\nLRU.prototype.get = function (key) {\n  if (typeof key !== 'string') key = '' + key\n  if (!this.cache.hasOwnProperty(key)) return\n\n  var element = this.cache[key]\n\n  if (!this._checkAge(key, element)) return\n\n  if (this.head !== key) {\n    if (key === this.tail) {\n      this.tail = element.next\n      this.cache[this.tail].prev = null\n    } else {\n      // Set prev.next -> element.next:\n      this.cache[element.prev].next = element.next\n    }\n\n    // Set element.next.prev -> element.prev:\n    this.cache[element.next].prev = element.prev\n\n    // Element is the new head\n    this.cache[this.head].next = key\n    element.prev = this.head\n    element.next = null\n    this.head = key\n  }\n\n  return element.value\n}\n\nLRU.prototype.evict = function () {\n  if (!this.tail) return\n  var key = this.tail\n  var value = this.remove(this.tail)\n  this.emit('evict', {key: key, value: value})\n}\n", "/**\n * @license\n * File: sigplot.layer1d.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var common = require(\"./common\");\n    var LRU = require(\"lru\");\n\n    /**\n     * @constructor\n     * @param plot\n     */\n\n    var Layer1DSDS = function(plot) {\n        this.plot = plot;\n        this.options = {};\n        this.size = 0;\n        this.color = 0;\n        this.line = 3; \n        this.thick = 1;\n        this.opacity = 1.0;\n        this.fillStyle = null;\n        this.symbol = 0;\n        this.radius = 3;\n        this.display = true;\n        this.xptr = null;\n        this.yptr = null;\n        this.xpoint = null; // PointArray backed by memory in xptr\n        this.ypoint = null; // PointArray backed by memory in yptr\n        this.server_data = null;\n        this.ymax = -1;\n        this.ymin = 0;\n        this.localpanymin = 0;\n        this.localpanymax = -1;\n        this.xmax = -1;\n        this.xmin = 0;\n        this.localpanxmin = 0;\n        this.localpanxmax = -1;\n        this.xlab = 0;\n        this.ylab = 0;\n        this.mode = \"lds\";\n        this.xypos_index = 0;\n        this.y_value_change = false;\n        this.pendingurl = \"\";\n    };\n\n    Layer1DSDS.prototype = {\n\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf Layer1D\n         * @private\n         */\n        init: function(hcb, options) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            this.hcb = hcb;\n            this.hcb.buf_type = \"I\";\n\n            if (hcb[\"file_type\"] === 2000) {\n                m.force1000(hcb);\n                this.size = hcb.subsize;\n            } else {\n                this.size = hcb.size;\n            }\n            if (this.mode ===\"lds\" || this.mode===\"xcut\") {\n                this.xmin = this.hcb.xstart;\n                this.xmax = this.hcb.xstart+ this.hcb.xdelta*this.size; //If size is subsize for 2000 files then this logic should work. \n            }\n            else if (this.mode === \"ycut\") { // In y cut mode this 1D plot will have its x axis be the y axis of the original 2D file. \n                this.xmin = this.hcb.ystart;\n                if (hcb[\"file_type\"] === 2000) {\n                    this.xmax = this.hcb.ystart + this.hcb.ydelta*this.hcb.size;\n                } else {\n                    this.xmax = this.hcb.ystart + this.hcb.ydelta*(this.hcb.size/this.hcb.subsize);\n                }\n            }\n            this.set_pan_values();\n\n            this.cache = new LRU(20);\n\n            //De-Bounce this function\n            this.debounceSend = common.debounce(function(oReq) {\n                oReq.send(null);\n            }, 100,false);\n\n        },\n\n        get_data: function() {\n\n        },\n\n        change_settings: function(settings) {\n            var Gx = this.plot._Gx;\n            if (settings.cmode !== undefined) { // If setting a new cmode then reset y values. \n \n                if (((Gx.autoz & 1) !== 0)) {\n                    this.ymin = 0;\n                    this.localpanymin = 0;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    this.ymax = -1;\n                    this.localpanymax = -1;\n                }\n            }\n        },\n\n        reload: function(data, hdrmod) {\n\n        },\n\n        push: function(data, hdrmod, sync) {\n        },\n\n        set_pan_values() {\n\n            if (this.localpanxmin > this.localpanxmax) {\n                this.localpanxmin = this.xmin;\n                this.localpanxmax = this.xmax;\n            } else {\n                this.localpanxmin = Math.min(this.localpanxmin, this.xmin);\n                this.localpanxmax = Math.max(this.localpanxmax, this.xmax);\n            }\n\n            if (this.localpanymin > this.localpanymax) {\n                this.localpanymin = this.ymin;\n                this.localpanymax = this.ymax;\n            } else {\n                this.localpanymin = Math.min(this.localpanymin, this.ymin);\n                this.localpanymax = Math.max(this.localpanymax, this.ymax);\n            }\n\n        },\n\n        prep: function(xmin,xmax) {\n\n        },\n\n        make_request_url: function(x1,y1,x2,y2,zmin,zmax) {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n            var url;\n\n            var urlsplit = this.hcb.url.split(\"/sds/hdr/\");\n            var url = \"\";\n\n            if (this.mode===\"lds\" ) {\n                url = urlsplit[0]+\"/sds/lds/\" +\n                    x1 + \"/\" +\n                    x2 + \"/\" +\n                    Math.round(Mx.r-Mx.l) + \"/\" +\n                    Math.round(Mx.b-Mx.t) + \"/\" +\n                    urlsplit[1];\n            } else if (this.mode===\"xcut\" ) {\n                url = urlsplit[0]+\"/sds/rdsxcut/\" +\n                    x1 + \"/\" +\n                    this.xypos_index + \"/\" +\n                    x2 + \"/\" +\n                    Math.round(this.xypos_index+1) + \"/\" +\n                    Math.round(Mx.r-Mx.l) + \"/\" +\n                    Math.round(Mx.b-Mx.t) + \"/\" +\n                    urlsplit[1];\n            } else if (this.mode===\"ycut\" ) {\n                url = urlsplit[0]+\"/sds/rdsycut/\" +\n                    this.xypos_index + \"/\" +\n                    y1 + \"/\" +\n                    Math.round(this.xypos_index +1) + \"/\" +\n                    y2 + \"/\" +\n                    Math.round(Mx.r-Mx.l) + \"/\" +\n                    Math.round(Mx.b-Mx.t) + \"/\" +\n                    urlsplit[1];\n            }\n\n            if (zmin !== undefined) {\n                if (url.includes(\"?\")) {\n                    url = url+\"&zmin=\" + zmin;\n                } else {\n                    url = url+\"?zmin=\" + zmin;\n                }\n                \n            }\n            if (zmax !== undefined) {\n                if (url.includes(\"?\")) {\n                    url = url+\"&zmax=\" + zmax;\n                } else {\n                    url = url+\"?zmax=\" + zmax;\n                }\n            }\n\n            if (Gx.cmode !== undefined) {\n                var cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n                if (url.includes(\"?\")) {\n                    url = url+\"&cxmode=\" + cxm[Gx.cmode-1];\n                } else {\n                    url = url+\"?cxmode=\" + cxm[Gx.cmode-1];\n                }\n            }\n            return url;\n        },\n\n        send_request_to_server: function(url) {\n            if (this.pendingurl === url) {\n                return;\n            }\n            var oReq;\n            oReq = new XMLHttpRequest();\n            oReq.open(\"GET\", url, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType('text\\/plain; charset=x-user-defined');\n\n            var that = this;\n            oReq.onload = function(oEvent) {\n                // `this` will be oReq within this context\n                that.load_data_from_server(url, this, oEvent);\n            };\n            oReq.onerror = function(oEvent) {\n            };\n            this.debounceSend(oReq);\n            this.pendingurl = url;\n        },\n\n        load_data_from_server: function(url, oReq, oEvent) {\n            var Mx = this.plot._Mx;\n            \n            if (oReq.readyState === 4) {\n                if ((oReq.status === 200) || (oReq.status === 0)) { // status = 0 is necessary for file URL\n                    var Mx = this.plot._Mx;\n                    var Gx = this.plot._Gx;\n                    var arrayBuffer = null; // Note: not oReq.responseText\n                    if (oReq.response) {\n                        arrayBuffer = oReq.response;\n                    }\n                    \n                    this.server_data = new Int16Array(arrayBuffer);\n\n                    var ymin = parseFloat(oReq.getResponseHeader(\"Zmin\"));\n                    var ymax = parseFloat(oReq.getResponseHeader(\"Zmax\"));\n                    this.ymin = ymin;\n                    this.ymax = ymax;\n                    this.set_pan_values();\n\n                    //cache the data for later\n                    arrayBuffer.zmin = this.ymin;\n                    arrayBuffer.zmax = this.ymax;\n                    this.cache.set(url, arrayBuffer);\n                    this.plot.refresh();\n \n                }\n            }\n\n        },\n\n        process_plot_data: function() {\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var numPixels = this.server_data.length/2;\n            this.xptr = new ArrayBuffer(numPixels*2);\n            this.yptr = new ArrayBuffer(numPixels*2);\n            this.xpoint = new Int16Array(this.xptr);\n            this.ypoint = new Int16Array(this.yptr);\n\n\n            // lds service returns int16 pixels with a list of all x values followed by all y values. \n            m.vmov(this.server_data,1,this.xpoint,1,numPixels);\n            m.vmov(this.server_data.subarray(numPixels),1,this.ypoint,1,numPixels);\n\n            var traceoptions = {};\n\n            if (this.fillStyle) {\n                traceoptions.fillStyle = this.fillStyle;\n            } else if (Gx.fillStyle) {\n                traceoptions.fillStyle = Gx.fillStyle;\n            }\n            if (this.options) {\n                traceoptions.highlight = this.options.highlight;\n                traceoptions.noclip = this.options.noclip;\n            }\n            var line = 0;\n            if (this.line === 0) {\n                line = 0;\n            } else {\n                line = 1;\n                if (this.thick > 0) {\n                    line = this.thick;\n                } else if (this.thick < 0) {\n                    line = Math.abs(this.thick);\n                    traceoptions.dashed = true;\n                }\n                if (this.line === 1) {\n                    traceoptions.vertsym = true;\n                }\n                if (this.line === 2) {\n                    traceoptions.horzsym = true;\n                }\n                if (this.line === 4) {\n                    traceoptions.horzsym = true;\n                    traceoptions.vertsym = true;\n                }\n            }\n            traceoptions.pixels = true;\n            mx.trace(Mx,\n                this.color,\n                this.xpoint,\n                this.ypoint,\n                this.xpoint.length,\n                0,\n                1,\n                line,\n                this.symbol,\n                this.radius,\n                traceoptions);\n            \n        },\n        \n        get_pan_bounds: function(view) {\n            var cacheData = this.get_data_from_cache();\n            if (cacheData.plotData) {\n                this.ymin = cacheData.plotData.zmin;\n                this.ymax = cacheData.plotData.zmax;\n                this.set_pan_values();\n            }\n            var xmin,xmax,ymin,ymax;\n            if (this.localpanxmin<this.localpanxmax) {\n                xmin = this.localpanxmin;\n                xmax = this.localpanxmax;\n            }\n            if (this.localpanymin <this.localpanymax) {\n                ymin = this.localpanymin;\n                ymax = this.localpanymax;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax,\n                ymin: ymin,\n                ymax: ymax\n            };\n        },\n\n        get_data_from_cache() {\n            var Mx = this.plot._Mx;\n\n            var x1 =  Math.round((Mx.stk[Mx.level].xmin - this.xmin)/this.hcb.xdelta) ;\n            var x2 = Math.round((Mx.stk[Mx.level].xmax - this.xmin)/this.hcb.xdelta) ;\n            // y1 and y2 are only used for y cut mode, where the y of the original file has been moved to x \n            var y1 =  Math.round((Mx.stk[Mx.level].xmin - this.xmin)/this.hcb.ydelta) ;\n            var y2 = Math.round((Mx.stk[Mx.level].xmax - this.xmin)/this.hcb.ydelta) ;\n            var ymin;\n            var ymax;\n            if (Mx.stk[Mx.level].ymin < Mx.stk[Mx.level].ymax) {\n                ymin = Mx.stk[Mx.level].ymin;\n                ymax = Mx.stk[Mx.level].ymax;\n            }\n            var url;\n            url = this.make_request_url(x1,y1,x2,y2,ymin,ymax);\n            var plotData = this.cache.get(url);\n            if (!(plotData)) {\n                // The ymin/ymax are optional parameters, so another url might already be cached with the same data\n                var urlb = this.make_request_url(x1,y1,x2,y2,undefined,undefined);\n                var plotData = this.cache.get(urlb);\n                if (plotData) {\n                    if (plotData.zmin !== ymin || plotData.zmax !== ymax ) { //If the y limits don't match then don't use this data. \n                        plotData = undefined;\n                    }\n                }\n            }\n            return {\n                url: url,\n                plotData: plotData\n            };\n        },\n\n        draw: function() {\n            var cacheData = this.get_data_from_cache();\n\n            if (cacheData.plotData) {\n                this.server_data = new Int16Array(cacheData.plotData);\n\n                this.ymin = cacheData.plotData.zmin;\n                this.ymax = cacheData.plotData.zmax;\n                this.set_pan_values();\n                this.process_plot_data();\n                return {\n                    xmin: this.xmin,\n                    xmax: this.xmax,\n                    ymin: this.ymin,\n                    ymax: this.ymax\n                };\n\n            } else { // We don't already have this data so we need to ask for it.\n                this.send_request_to_server(cacheData.url);\n            }\n\n            \n        },\n    };\n\n    /**\n     * Color positions for the various layers\n     *\n     * These magic numbers were conjured up by a wizard somewhere.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var mixc = [0, 53, 27, 80, 13, 40, 67, 93, 7, 60, 33, 87, 20, 47, 73, 100];\n\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @private\n     */\n    Layer1DSDS.overlay = function(plot, hcb, layerOptions) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // If doing xy cut mode not sure if this will caused an unwanted effect. \n        if (hcb[\"class\"] === 2) {\n            m.force1000(hcb);\n        }\n        hcb.buf_type = \"I\";\n\n        // Extract the layer_name before enter the loop\n        var layer_name_override = layerOptions[\"name\"];\n        delete layerOptions[\"name\"];\n\n        var layers = [];\n        // This is logic from within sigplot.for LOAD_FILES\n        var layer = new Layer1DSDS(plot);\n        \n\n        // Provide a default color for the layer\n        var n = (Gx.lyr.length) % mixc.length;\n        layer.color = mx.getcolor(Mx, m.Mc.colormap[3].colors, mixc[n]);\n\n        // Provide the layer name\n\n        if (layer_name_override !== undefined) {\n            layer.name = layer_name_override;\n        } else if (hcb.file_name) {\n            layer.name = m.trim_name(hcb.file_name);\n        } else {\n            layer.name = \"layer_\" + Gx.lyr.length;\n        }\n        layer.offset = 0;\n\n\n        for (var layerOption in layerOptions) {\n            if (layer[layerOption] !== undefined) {\n                layer[layerOption] = layerOptions[layerOption];\n            }\n        }\n\n        layer.init(hcb, layerOptions);\n        \n        if (plot.add_layer(layer)) {\n            layers.push(layer);\n        }\n    \n\n        return layers;\n    };\n\n    module.exports = Layer1DSDS;\n\n}());\n", "/**\n * @license\n * File: sigplot.layer2dSDS.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License\n */\n\n/* global module */\n/* global require */\n\n(function () {\n    const m = require(\"./m\");\n    const mx = require(\"./mx\");\n    const common = require(\"./common\");\n\n    const decimationModeLookup = {\n        1: 1,\n        2: 2,\n        4: 3,\n        8: 4,\n        16: 5,\n        32: 6,\n        64: 7,\n        128: 8,\n        256: 9,\n        512: 10,\n    };\n\n    const decimationPossibilities = [512, 256, 128, 64, 32, 16, 8, 4, 2, 1];\n\n    /**\n     * @constructor\n     * @param plot\n     */\n    const LayerSDS = function (plot) {\n        this.plot = plot;\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.ystart = 0.0;\n        this.ydelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n        this.modified = false;\n\n        this.preferred_origin = 4; // TODO Raster is normally 4\n        this.opacity = 1;\n        this.xcompression = plot._Gx.xcompression; // default is Gx.xcompression\n\n        // LPB is kinda odd right now, since we read the entire file into memory anyways...\n        // given that often we are loading from an HREF so there is no downside to this...\n        // however, we keep LPB around (for now) so that the scaling behaves identical to\n        // the original code\n        this.lpb = undefined;\n\n        this.yc = 1; // y-compression factor...not yet used\n\n        this.options = {};\n        this.pendingURLs = {};\n    };\n\n    LayerSDS.prototype = {\n        /**\n         * Initializes the layer to display the provided data.\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @param lyrn\n         *          the index of the added layer\n         *\n         * @memberOf LayerSDS\n         * @private\n         */\n        init: function (hcb) {\n            //De-Bounce this function\n            this.debounceSend = common.debounce(\n                function (oReq) {\n                    oReq.send(null);\n                },\n                100,\n                false\n            );\n\n            // Get Header Params from URL\n            this.hcb = hcb;\n            this.hcb.buf_type = \"D\";\n\n            if (hcb.file_type === 1000) {\n                this.lps = this.hcb.lps || Math.ceil(hcb.size / hcb.subsize);\n            } else {\n                this.lps = this.hcb.lps || Math.ceil(hcb.size);\n            }\n\n            this.hcb.class = 2;\n            const LRU = require(\"lru\");\n\n            this.cache = new LRU(500);\n\n            this.init_axes();\n        },\n\n        init_axes: function () {\n            const Gx = this.plot._Gx;\n\n            if (Gx.index) {\n                this.xstart = 1.0;\n                this.xdelta = 1.0;\n                this.xmin = 1.0;\n\n                this.ystart = 1.0;\n                this.ydelta = 1.0;\n                this.ymin = 1.0;\n                if (this.hcb.file_type === 1000) {\n                    this.ymax = this.hcb.size / this.hcb.subsize;\n                } else {\n                    if (this.drawdirection !== \"horizontal\") {\n                        this.xmax = this.hcb.subsize;\n                        this.ymax = this.size;\n                    } else {\n                        this.xmax = this.size;\n                        this.ymax = this.hcb.subsize;\n                    }\n                }\n            } else {\n                let d;\n                if (this.drawdirection !== \"horizontal\") {\n                    this.xstart = this.hcb.xstart;\n                    this.xdelta = this.hcb.xdelta;\n                    d = this.hcb.xstart + this.hcb.xdelta * this.hcb.subsize;\n                    this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                    this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                    this.ystart = this.hcb.ystart;\n                    this.ydelta = this.hcb.ydelta;\n                    d = this.hcb.ystart + this.hcb.ydelta * this.lps;\n                    this.ymin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                    this.ymax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n                } else {\n                    this.ystart = this.hcb.xstart;\n                    this.ydelta = this.hcb.xdelta;\n                    d = this.hcb.xstart + this.hcb.xdelta * this.hcb.subsize;\n                    this.ymin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                    this.ymax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n                    this.xstart = this.hcb.ystart;\n                    this.xdelta = this.hcb.ydelta;\n                    d = this.hcb.ystart + this.hcb.ydelta * this.lps;\n                    this.xmin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                    this.xmax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n                }\n            }\n\n            // TODO make this work with force 1000 applied\n            this.xframe = this.hcb.subsize;\n            this.yframe = (this.lps * this.hcb.subsize) / this.xframe;\n\n            if (this.lpb === 0) {\n                this.lpb = this.yframe;\n            }\n            if (!this.lpb || this.lpb <= 0) {\n                this.lpb = 16;\n            }\n            this.lpb = Math.max(1, this.lpb / this.yc) * this.yc;\n\n            if (this.drawdirection !== \"horizontal\") {\n                this.xlab = this.hcb.xunits;\n                this.ylab = this.hcb.yunits; // might be undefined\n            } else {\n                this.xlab = this.hcb.yunits;\n                this.ylab = this.hcb.xunits; // might be undefined\n            }\n\n            if (this.drawdirection === \"horizontal\") {\n                this.plot._Mx.origin = 1;\n                this.preferred_origin = 1;\n            } else {\n                this.plot._Mx.origin = 4;\n                this.preferred_origin = 4;\n            }\n        },\n\n        get_data: function () {},\n\n        /**\n         * Provisional API\n         *\n         * @private\n         * @param x\n         * @param y\n         */\n        get_z: function (x, y) {},\n\n        change_settings: function (settings) {\n            const Gx = this.plot._Gx;\n            if (settings.subsize) {\n                this.hcb.subsize = settings.subsize;\n                this.hcb.ape = settings.subsize;\n                if (this.hcb.file_type === 1000) {\n                    this.lps = Math.ceil(this.hcb.size / this.hcb.subsize);\n                } else {\n                    this.lps = Math.ceil(this.hcb.size);\n                }\n                let d = this.hcb.xstart + this.hcb.xdelta * this.hcb.subsize;\n                this.xmin = this.hcb.xmin || Math.min(this.hcb.xstart, d);\n                this.xmax = this.hcb.xmax || Math.max(this.hcb.xstart, d);\n\n                d = this.hcb.ystart + this.hcb.ydelta * this.lps;\n                this.ymin = this.hcb.ymin || Math.min(this.hcb.ystart, d);\n                this.ymax = this.hcb.ymax || Math.max(this.hcb.ystart, d);\n            }\n            if (settings.debug) {\n                this.debug = settings.debug;\n            }\n\n            if (settings.cmode !== undefined) {\n                this.img = undefined;\n                if ((Gx.autoz & 1) !== 0) {\n                    Gx.zmin = undefined;\n                }\n                if ((Gx.autoz & 2) !== 0) {\n                    Gx.zmax = undefined;\n                }\n            }\n\n            if (settings.drawdirection !== undefined) {\n                this.drawdirection = settings.drawdirection;\n            }\n\n            if (settings.origin !== undefined) {\n                this.plot._Mx.origin = settings.origin;\n                this.preferred_origin = settings.origin;\n            }\n\n            if (this.drawdirection === \"horizontal\") {\n                this.plot._Mx.origin = 1;\n                this.preferred_origin = 1;\n                this.init_axes();\n            }\n\n            if (settings.xcmp !== undefined) {\n                if (settings.xcmp === \"smooth\") {\n                    this.xcompression = 0;\n                } else if (settings.xcmp === \"avg\") {\n                    this.xcompression = 1;\n                } else if (settings.xcmp === \"min\") {\n                    this.xcompression = 2;\n                } else if (settings.xcmp === \"max\") {\n                    this.xcompression = 3;\n                } else if (settings.xcmp === \"first\") {\n                    this.xcompression = 4;\n                } else if (settings.xcmp === \"maxabs\") {\n                    this.xcompression = 5;\n                } else {\n                    this.xcompression = settings.xcmp;\n                }\n            }\n\n            if (settings.usetiles !== undefined) {\n                this.usetiles = settings.usetiles;\n            }\n\n            if (settings.opacity !== undefined) {\n                this.opacity = settings.opacity;\n            }\n        },\n\n        reload: function (data, hdrmod) {},\n\n        prep: function (xmin, xmax) {\n            return this.lps;\n        },\n\n        get_pan_bounds: function (view) {\n            let xmin, xmax, ymin, ymax;\n            if (this.xmin < this.xmax) {\n                xmin = this.xmin;\n                xmax = this.xmax;\n            }\n            if (this.ymin < this.ymax) {\n                ymin = this.ymin;\n                ymax = this.ymax;\n            }\n\n            return {\n                xmin: xmin,\n                xmax: xmax,\n                ymin: ymin,\n                ymax: ymax,\n            };\n        },\n\n        load_tile: function (url, oReq, oEvent) {\n            if (oReq.readyState === 4) {\n                if (oReq.status === 200 || oReq.status === 0) {\n                    // status = 0 is necessary for file URL\n\n                    let arrayBuffer = null;\n                    if (oReq.response) {\n                        arrayBuffer = oReq.response;\n                    }\n\n                    const xmin = parseFloat(oReq.getResponseHeader(\"Xmin\"));\n                    const xmax = parseFloat(oReq.getResponseHeader(\"Xmax\"));\n                    const ymin = parseFloat(oReq.getResponseHeader(\"Ymin\"));\n                    const ymax = parseFloat(oReq.getResponseHeader(\"Ymax\"));\n                    arrayBuffer.width = oReq.getResponseHeader(\"Outxsize\");\n                    arrayBuffer.height = oReq.getResponseHeader(\"Outysize\");\n                    arrayBuffer.contents = \"rgba\";\n                    arrayBuffer.xmin = xmin;\n                    arrayBuffer.ymin = ymin;\n                    arrayBuffer.xmax = xmax;\n                    arrayBuffer.ymax = ymax;\n                    this.cache.set(url, arrayBuffer); // store the data in the cache\n\n                    delete this.pendingURLs[url]; // Remove this url as pending\n                    this.plot.refresh(); // refresh the plot will cause this tile to be drawn\n                }\n            }\n        },\n\n        /**\n         * Build SDS Tile API URL\n         *\n         * @param {number} tileXsize\n         * @param {number} tileYsize\n         * @param {number} decx\n         * @param {number} decy\n         * @param {number} tileX\n         * @param {number} tileY\n         * @returns {string}\n         */\n        make_tile_request_url: function (\n            tileXsize,\n            tileYsize,\n            decx,\n            decy,\n            tileX,\n            tileY\n        ) {\n            const Gx = this.plot._Gx;\n            const cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n            const xcmp = [\"first\", \"mean\", \"min\", \"max\", \"first\", \"absmax\"];\n\n            const urlsplit = this.hcb.url.split(\"/sds/hdr/\");\n            let url =\n                urlsplit[0] +\n                \"/sds/rdstile/\" +\n                tileXsize +\n                \"/\" +\n                tileYsize +\n                \"/\" +\n                decx +\n                \"/\" +\n                decy +\n                \"/\" +\n                tileX +\n                \"/\" +\n                tileY +\n                \"/\" +\n                urlsplit[1] +\n                \"?outfmt=RGBA\" +\n                \"&colormap=\" +\n                m.Mc.colormap[Gx.cmap].name +\n                \"&subsize=\" +\n                this.hcb.subsize;\n\n            if (Gx.zmin !== undefined) {\n                url = url + \"&zmin=\" + Gx.zmin;\n            }\n            if (Gx.zmax !== undefined) {\n                url = url + \"&zmax=\" + Gx.zmax;\n            }\n\n            if (Gx.cmode !== undefined) {\n                url = url + \"&cxmode=\" + cxm[Gx.cmode - 1];\n            }\n\n            if (this.xcompression !== undefined) {\n                url = url + \"&transform=\" + xcmp[this.xcompression];\n            }\n            return url;\n        },\n\n        /**\n         * Performs the HTTP GET to Sigplot Data Service\n         * for the requested tile\n         *\n         * @param url\n         */\n        sendTileRequest: function (url) {\n            if (this.pendingURLs[url]) {\n                return;\n            }\n\n            const oReq = new XMLHttpRequest();\n            this.pendingURLs[url] = oReq;\n\n            oReq.open(\"GET\", url, true);\n            oReq.responseType = \"arraybuffer\";\n            oReq.overrideMimeType(\"text/plain; charset=x-user-defined\");\n\n            const that = this;\n            oReq.onload = function (oEvent) {\n                // `this` will be oReq within this context\n                that.load_tile(url, this, oEvent);\n            };\n            oReq.onerror = function (oEvent) {};\n            oReq.send(null);\n            // this.debounceSend(oReq);\n        },\n\n        draw: function () {\n            const Mx = this.plot._Mx;\n            const Gx = this.plot._Gx;\n            const HCB = this.hcb;\n\n            let horizontal_min, horizontal_max, vertical_min, vertical_max;\n            if (this.drawdirection !== \"horizontal\") {\n                horizontal_min = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n                horizontal_max = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n                if (horizontal_min >= horizontal_max) {\n                    // no data\n                    return;\n                }\n                vertical_min = Math.max(this.ymin, Mx.stk[Mx.level].ymin);\n                vertical_max = Math.min(this.ymax, Mx.stk[Mx.level].ymax);\n            } else {\n                horizontal_min = Math.max(this.ymin, Mx.stk[Mx.level].ymin);\n                horizontal_max = Math.min(this.ymax, Mx.stk[Mx.level].ymax);\n                if (horizontal_min >= horizontal_max) {\n                    // no data\n                    return;\n                }\n                vertical_min = Math.max(this.xmin, Mx.stk[Mx.level].xmin);\n                vertical_max = Math.min(this.xmax, Mx.stk[Mx.level].xmax);\n            }\n\n            let w, h;\n            if (this.drawmode !== \"horizontal\") {\n                w = Math.abs(horizontal_max - horizontal_min);\n                h = Math.abs(vertical_max - vertical_min);\n            } else {\n                w = Math.abs(vertical_max - vertical_min);\n                h = Math.abs(horizontal_max - horizontal_min);\n            }\n\n            // Convert w/h to elements\n            w = Math.ceil(w / HCB.xdelta);\n            h = Math.ceil(h / HCB.ydelta);\n\n            // Make sure w/h remain within limits\n            w = Math.min(w, HCB.subsize);\n            if (HCB.file_type === 1000) {\n                h = Math.min(h, HCB.size / HCB.subsize);\n            } else {\n                h = Math.min(h, HCB.size);\n            }\n\n            // figure out the upper-left and lower-right pixel coordinates\n            let ul, lr, out_x_pixel_size, out_y_pixel_size;\n            if (this.drawdirection !== \"horizontal\") {\n                ul = mx.real_to_pixel(Mx, horizontal_min, vertical_min);\n                lr = mx.real_to_pixel(Mx, horizontal_max, vertical_max);\n\n                // Figure out the pixel width and height\n                out_x_pixel_size = Math.abs(lr.x - ul.x);\n                out_y_pixel_size = Math.abs(lr.y - ul.y);\n            } else {\n                lr = mx.real_to_pixel(Mx, vertical_min, horizontal_min);\n                ul = mx.real_to_pixel(Mx, vertical_max, horizontal_max);\n\n                // Figure out the pixel width and height\n                out_y_pixel_size = Math.abs(lr.x - ul.x);\n                out_x_pixel_size = Math.abs(lr.y - ul.y);\n            }\n\n            // Index values of horizontal_max, horizontal_min, vertical_max, vertical_min\n            const x1 = Math.floor((horizontal_min - HCB.xstart) / HCB.xdelta);\n            const y1 = Math.floor((vertical_min - HCB.ystart) / HCB.ydelta);\n\n            const x2 = x1 + w;\n            const y2 = y1 + h;\n\n            const rotationAngle =\n                this.drawdirection === \"horizontal\" ? -Math.PI / 2 : null;\n            if (this.usetiles) {\n                const maxtileXsize = Math.min(\n                    Math.max(Math.ceil(out_x_pixel_size / 300) * 100, 100),\n                    500\n                );\n                const maxtileYsize = Math.min(\n                    Math.max(Math.ceil(out_y_pixel_size / 300) * 100, 100),\n                    500\n                );\n                const requestedDecx = Math.max(1, w / out_x_pixel_size);\n                const requestedDecy = Math.max(1, h / out_y_pixel_size);\n                let i = 0;\n                while (decimationPossibilities[i] > requestedDecx) {\n                    i++;\n                }\n                const decfactorx = decimationPossibilities[i];\n                i = 0;\n                while (decimationPossibilities[i] > requestedDecy) {\n                    i++;\n                }\n                const decfactory = decimationPossibilities[i];\n\n                const decx = decimationModeLookup[decfactorx];\n                const decy = decimationModeLookup[decfactory];\n\n                const tilexsize = maxtileXsize * decfactorx;\n                const tileysize = maxtileYsize * decfactory;\n\n                const maxcol = Math.ceil(HCB.subsize / tilexsize);\n                const maxrow = Math.ceil(HCB.size / tileysize);\n\n                // x1,x2,y1,y2 are index relative\n                const firstcolumn = Math.max(0, Math.floor(x1 / tilexsize));\n                const firstrow = Math.max(0, Math.floor(y1 / tileysize));\n                const lastcolumn = Math.min(maxcol, Math.ceil(x2 / tilexsize) + 1);\n                const lastrow = Math.min(maxrow, Math.ceil(y2 / tileysize) + 1);\n\n                for (let tileY = firstrow; tileY < lastrow; tileY++) {\n                    for (let tileX = firstcolumn; tileX < lastcolumn; tileX++) {\n                        const url = this.make_tile_request_url(\n                            maxtileXsize,\n                            maxtileYsize,\n                            decx,\n                            decy,\n                            tileX,\n                            tileY\n                        );\n                        const img = this.cache.get(url);\n                        if (img) {\n                            //Get the data from this tile out of the cache and plot it.\n                            let strokeStyle, text;\n                            if (this.debug) {\n                                strokeStyle = Mx.fg;\n                                text =\n                                    tileX.toString() + \",\" + tileY.toString();\n                            }\n                            if (this.drawdirection !== \"horizontal\") {\n                                mx.draw_image(\n                                    Mx,\n                                    img,\n                                    img.xmin, // horizontal_min\n                                    img.ymin, // vertical_min\n                                    img.xmax, // horizontal_max\n                                    img.ymax, // vertical_max\n                                    this.opacity,\n                                    false,\n                                    true,\n                                    rotationAngle,\n                                    strokeStyle,\n                                    text\n                                );\n                            } else {\n                                mx.draw_image(\n                                    Mx,\n                                    img,\n                                    img.ymin, // horizontal_min\n                                    img.xmin, // vertical_min\n                                    img.ymax, // horizontal_max\n                                    img.xmax, // vertical_max\n                                    this.opacity,\n                                    false,\n                                    true,\n                                    rotationAngle,\n                                    strokeStyle,\n                                    text\n                                );\n                            }\n                        } else {\n                            // Don't already have the data for this tile to request it from the server.\n                            this.sendTileRequest(url);\n                        }\n                    }\n                }\n            } else {\n                const oReq = new XMLHttpRequest();\n                const [sds_host, filepath] = this.hcb.url.split(\"/sds/hdr/\");\n\n                const base_url = `${sds_host}/sds`;\n                const url_params = `rds/${x1}/${y1}/${x2}/${y2}/${out_x_pixel_size}/${out_y_pixel_size}/${filepath}`;\n\n                let query_string = `?outfmt=RGBA&colormap=${\n                    m.Mc.colormap[Gx.cmap].name\n                }&subsize=${HCB.subsize}`;\n                if (Gx.zmin !== undefined) {\n                    query_string = `${query_string}&zmin=${Gx.zmin}`;\n                }\n                if (Gx.zmax !== undefined) {\n                    query_string = `${query_string}&zmax=${Gx.zmax}`;\n                }\n\n                if (Gx.cmode !== undefined) {\n                    const cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n                    query_string = `${query_string}&cxmode=${\n                        cxm[Gx.cmode - 1]\n                    }`;\n                }\n\n                if (this.xcompression !== undefined) {\n                    const xcmp = [\n                        \"first\",\n                        \"mean\",\n                        \"min\",\n                        \"max\",\n                        \"first\",\n                        \"absmax\",\n                    ];\n                    query_string = `${query_string}&transform=${\n                        xcmp[this.xcompression]\n                    }`;\n                }\n\n                const url = `${base_url}/${url_params}${query_string}`;\n                const img = this.cache.get(url);\n                if (img) {\n                    if (this.drawdirection !== \"horizontal\") {\n                        mx.draw_image(\n                            Mx,\n                            img,\n                            horizontal_min, // xmin\n                            vertical_min, // ymin\n                            horizontal_max, // xmax\n                            vertical_max, // ymax\n                            this.opacity,\n                            false,\n                            true,\n                            rotationAngle\n                        );\n                    } else {\n                        mx.draw_image(\n                            Mx,\n                            img,\n                            vertical_min, // xmin\n                            horizontal_min, // ymin\n                            vertical_max, // xmax\n                            horizontal_max, // ymax\n                            this.opacity,\n                            false,\n                            true,\n                            rotationAngle\n                        );\n                    }\n                } else {\n                    oReq.open(\"GET\", url, true);\n                    oReq.responseType = \"arraybuffer\";\n                    oReq.overrideMimeType(\"text/plain; charset=x-user-defined\");\n\n                    const that = this;\n                    oReq.onload = function (oEvent) {\n                        if (oReq.readyState === 4) {\n                            if (oReq.status === 200 || oReq.status === 0) {\n                                // status = 0 is necessary for file URL\n                                const zmin = oReq.getResponseHeader(\"Zmin\");\n                                const zmax = oReq.getResponseHeader(\"Zmax\");\n\n                                if (Mx.level === 0 && Gx.zmin === undefined) {\n                                    if ((Gx.autoz & 1) !== 0) {\n                                        Gx.zmin = zmin;\n                                    }\n                                }\n                                if (Mx.level === 0 && Gx.zmax === undefined) {\n                                    if ((Gx.autoz & 2) !== 0) {\n                                        Gx.zmax = zmax;\n                                    }\n                                }\n                                let arrayBuffer = null; // Note: not oReq.responseText\n                                if (oReq.response) {\n                                    arrayBuffer = oReq.response;\n                                }\n\n                                //let imgd = new Uint8ClampedArray(arrayBuffer);\n                                arrayBuffer.width = out_x_pixel_size;\n                                arrayBuffer.height = out_y_pixel_size;\n                                arrayBuffer.contents = \"rgba\";\n                                that.cache.set(url, arrayBuffer);\n                                if (that.drawdirection !== \"horizontal\") {\n                                    mx.draw_image(\n                                        Mx,\n                                        arrayBuffer,\n                                        horizontal_min, // xmin\n                                        vertical_min, // ymin\n                                        horizontal_max, // xmax\n                                        vertical_max, // ymax\n                                        that.opacity,\n                                        false,\n                                        true,\n                                        rotationAngle\n                                    );\n                                } else {\n                                    mx.draw_image(\n                                        Mx,\n                                        arrayBuffer,\n                                        vertical_min, // xmin\n                                        horizontal_min, // ymin\n                                        vertical_max, // xmax\n                                        horizontal_max, // ymax\n                                        that.opacity,\n                                        false,\n                                        true,\n                                        rotationAngle\n                                    );\n                                }\n                            }\n                        }\n                    };\n                    oReq.onerror = function (oEvent) {};\n\n                    this.debounceSend(oReq);\n                }\n            }\n            return {\n                xmin: this.xmin,\n                xmax: this.xmax,\n                ymin: this.ymin,\n                ymax: this.ymax,\n            };\n        },\n\n        /**\n         * Display an xCut for a given Y (axis) value\n         *\n         * @param {number?} ypos  the y-position to extract the x-cut, leave undefined to\n         *                       leave xCut\n         */\n        xCut: function (ypos) {\n            const Mx = this.plot._Mx;\n            const Gx = this.plot._Gx;\n\n            // display the x-cut of the raster\n            if (ypos !== undefined) {\n                // stash important values\n                this.cut_stash = {\n                    ylabel: Gx.ylabel,\n                    xlabel: Gx.xlabel,\n                    xlab: Gx.xlab,\n                    ylab: Gx.ylab,\n                    level: Mx.level,\n                    stk: JSON.parse(JSON.stringify(Mx.stk)),\n                    panymin: Gx.panymin,\n                    panymax: Gx.panymax,\n                    panxmin: Gx.panxmin,\n                    panxmax: Gx.panxmax,\n                };\n\n                const row = Math.round((ypos - this.ystart) / this.ydelta);\n                if (row < 0 || row > this.lps) {\n                    return;\n                }\n\n                // Adjust the zoom stack to adjust y values to be undefined.\n                for (let stk_num = 0; stk_num < Mx.stk.length; stk_num++) {\n                    Mx.stk[stk_num].ymin = undefined;\n                    Mx.stk[stk_num].ymax = undefined;\n                }\n                Gx.panymax = undefined;\n                Gx.panymin = undefined;\n\n                let name, mode;\n                if (this.drawdirection !== \"horizontal\") {\n                    name = \"x_cut_data\";\n                    mode = \"xcut\";\n                } else {\n                    name = \"y_cut_data\";\n                    mode = \"ycut\";\n                }\n\n                var cx = ((Gx.lyr.length > 0) && this.cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.xlab][0] !== \"None\") && (m.UNITS[Gx.xlab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.xlab][0];\n                } else {\n                    Gx.xlabel = \"Frequency\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN X_CUT MODE\";\n                Mx.origin = 1;\n\n                this.xcut_layer = this.plot.overlay_href(\n                    this.hcb.url,\n                    null,\n                    {\n                        name: name,\n                        layerType: \"1DSDS\",\n                        mode: mode,\n                        xypos_index: row,\n                        bottom_level: Mx.level,\n                    },\n                    {}\n                );\n                Mx.origin = 1;\n\n                // do not display any other layers\n                const xcut_lyrn = this.plot.get_lyrn(this.xcut_layer);\n                for (let i = 0; i < Gx.lyr.length; i++) {\n                    if (i !== xcut_lyrn) {\n                        Gx.lyr[i].display = !Gx.lyr[i].display;\n                    }\n                }\n                Gx.x_cut_press_on = true;\n                this.plot.rescale();\n            } else if (Gx.x_cut_press_on) {\n                // ypos wasn't provided so turn x-cut off\n                Gx.x_cut_press_on = false;\n                const xcut_lyrn = this.plot.get_lyrn(this.xcut_layer);\n                for (let h = 0; h < Gx.lyr.length; h++) {\n                    if (h !== xcut_lyrn) {\n                        Gx.lyr[h].display = !Gx.lyr[h].display;\n                    }\n                    this.plot.deoverlay(this.xcut_layer);\n\n                    // Restore settings\n                    Gx.xlab = this.cut_stash.xlab;\n                    Gx.ylab = this.cut_stash.ylab;\n                    Gx.xlabel = this.cut_stash.xlabel;\n                    Gx.ylabel = this.cut_stash.ylabel;\n                    Mx.level = this.cut_stash.level;\n                    Mx.stk = JSON.parse(JSON.stringify(this.cut_stash.stk));\n                    Gx.panymin = this.cut_stash.panymin;\n                    Gx.panymax = this.cut_stash.panymax;\n                    Gx.panxmin = this.cut_stash.panxmin;\n                    Gx.panxmax = this.cut_stash.panxmax;\n                    this.cut_stash = undefined;\n                    Mx.origin = 4;\n\n                    this.plot.rescale();\n                    this.plot.refresh();\n                    this.xcut_layer = undefined;\n                    this.plot.change_settings({\n                        drawmode: this.old_drawmode,\n                        autol: this.old_autol,\n                    });\n                }\n            }\n        },\n\n        /**\n         * Display an yCut for a given X (axis) value\n         *\n         * @param {number?} xpos  the x-position to extract the y-cut, leave undefined to\n         *                        leave yCut\n         */\n        yCut: function (xpos) {\n            const Mx = this.plot._Mx;\n            const Gx = this.plot._Gx;\n\n            //display the y-cut of the raster\n            if (xpos !== undefined) {\n                // Stash important values\n                this.cut_stash = {\n                    xlabel: Gx.xlabel,\n                    ylabel: Gx.ylabel,\n                    xlab: Gx.xlab,\n                    ylab: Gx.ylab,\n                    level: Mx.level,\n                    stk: JSON.parse(JSON.stringify(Mx.stk)),\n                    ymax: Mx.stk[Mx.level].ymax,\n                    panymin: Gx.panymin,\n                    panymax: Gx.panymax,\n                    panxmin: Gx.panxmin,\n                    panxmax: Gx.panxmax,\n                };\n\n                const column = Math.round((xpos - this.xstart) / this.xdelta);\n                if (column < 0) {\n                    //TODO - Check if column is out or max range.\n                    return;\n                }\n\n                //Adjust the zoom stack to move y vales to x and adjust y values to be undefined.\n                for (let stk_num = 0; stk_num < Mx.stk.length; stk_num++) {\n                    Mx.stk[stk_num].xmin = Mx.stk[stk_num].ymin;\n                    Mx.stk[stk_num].xmax = Mx.stk[stk_num].ymax;\n                    Mx.stk[stk_num].xscl = Mx.stk[stk_num].yscl;\n                    Mx.stk[stk_num].ymin = undefined;\n                    Mx.stk[stk_num].ymax = undefined;\n                    Mx.stk[stk_num].yscl = undefined;\n                }\n                Gx.panymax = undefined;\n                Gx.panymin = undefined;\n\n                let name, mode;\n                if (this.drawdirection !== \"horizontal\") {\n                    name = \"y_cut_data\";\n                    mode = \"ycut\";\n                } else {\n                    name = \"x_cut_data\";\n                    mode = \"xcut\";\n                }\n\n                var cx = ((Gx.lyr.length > 0) && this.cx);\n                if (Gx.cmode === 1) {\n                    Gx.ylabel = m.UNITS[28][0];\n                } else if (Gx.cmode === 2) {\n                    Gx.ylabel = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    Gx.ylabel = m.UNITS[21][0];\n                } else if (Gx.cmode === 4) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 5) {\n                    Gx.ylabel = m.UNITS[22][0];\n                } else if (Gx.cmode === 6) {\n                    Gx.ylabel = m.UNITS[26][0];\n                } else if (Gx.cmode === 7) {\n                    Gx.ylabel = m.UNITS[27][0];\n                } else {\n                    Gx.ylabel = \"Intensity\";\n                }\n\n                if ((m.UNITS[Gx.ylab][0] !== \"None\") && (m.UNITS[Gx.ylab][0] !== \"Unknown\")) {\n                    Gx.xlabel = m.UNITS[Gx.ylab][0];\n                } else {\n                    Gx.xlabel = \"Time\";\n                }\n                Gx.xlabel += \"    CURRENTLY IN Y_CUT MODE\";\n                Mx.origin = 1;\n\n                this.ycut_layer = this.plot.overlay_href(\n                    this.hcb.url,\n                    null,\n                    {\n                        name: name,\n                        layerType: \"1DSDS\",\n                        mode: mode,\n                        xypos_index: column,\n                        bottom_level: Mx.level,\n                    },\n                    {}\n                );\n                Mx.origin = 1;\n\n                //do not display any other layers\n                const ycut_lyrn = this.plot.get_lyrn(this.ycut_layer);\n                for (let k = 0; k < Gx.lyr.length; k++) {\n                    if (k !== ycut_lyrn) {\n                        Gx.lyr[k].display = !Gx.lyr[k].display;\n                    }\n                }\n\n                Gx.y_cut_press_on = true;\n            } else if (Gx.y_cut_press_on) {\n                Gx.y_cut_press_on = false;\n                for (let j = 0; j < Gx.lyr.length; j++) {\n                    if (j !== this.ycut_layer) {\n                        Gx.lyr[j].display = !Gx.lyr[j].display;\n                    }\n                    this.plot.deoverlay(this.ycut_layer);\n\n                    // Restore settings\n                    Gx.xlab = this.cut_stash.xlab;\n                    Gx.ylab = this.cut_stash.ylab;\n                    Gx.xlabel = this.cut_stash.xlabel;\n                    Gx.ylabel = this.cut_stash.ylabel;\n                    Mx.level = this.cut_stash.level;\n                    Mx.stk = JSON.parse(JSON.stringify(this.cut_stash.stk));\n                    Gx.panymin = this.cut_stash.panymin;\n                    Gx.panymax = this.cut_stash.panymax;\n                    Gx.panxmin = this.cut_stash.panxmin;\n                    Gx.panxmax = this.cut_stash.panxmax;\n                    this.cut_stash = undefined;\n                    Mx.origin = 4;\n                    this.plot.rescale();\n                    this.plot.refresh();\n                    this.ycut_layer = undefined;\n                    this.plot.change_settings({\n                        drawmode: this.old_drawmode,\n                        autol: this.old_autol,\n                    });\n                }\n            }\n        },\n    };\n\n    /**\n     * Factory to overlay the given file onto the given plot.\n     *\n     * @param {Plot} plot   SigPlot plot object\n     * @param {BlueHeader} hcb  Header object from bluefile/matfile\n     * @param {object?} layerOptions  Options specific to this layer\n     * @returns {array}   Array of Layers\n     *\n     * @private\n     */\n    LayerSDS.overlay = function (plot, hcb, layerOptions) {\n        const Gx = plot._Gx;\n        hcb.buf_type = \"D\";\n\n        const layer = new LayerSDS(plot);\n        layer.init(hcb);\n\n        if (hcb.file_name) {\n            layer.name = m.trim_name(hcb.file_name);\n        } else {\n            layer.name = \"layer_\" + Gx.lyr.length;\n        }\n\n        layer.change_settings(layerOptions);\n\n        const layers = [];\n        if (plot.add_layer(layer)) {\n            layers.push(layer);\n        }\n\n        return layers;\n    };\n\n    module.exports = LayerSDS;\n})();\n", "/**\n * @license\n * File: sigplot.plugin.js\n * Copyright (c) 2012-2019, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var mx = require(\"./mx\");\n    var common = require(\"./common\");\n\n    class Plugin {\n        /**\n         * Plugins implement pluginConstructor to define properties (via this.defineProperty)\n         * and any local variables.\n         */\n        pluginConstructor() {}\n\n        /**\n         * pluginInit is called afer the plugin has been added to\n         * a plot.\n         * \n         * @param {object} plot\n         *     The plot the plugin was added to.\n         */\n        pluginInit() {}\n\n        /**\n         * pluginDispose is called after then plugin has been removed\n         * from a plot.\n         */\n        pluginDispose() {}\n\n        /**\n         * pluginRefresh is called whenever the plugin need to redraw.\n         * \n         * Plugins should render their current state to this.canvas.  The canvas\n         * is entirely under the control of the plugin can can be cleared or\n         * completely filled\n         */\n        pluginRefresh() {}\n\n        /**\n         * pluginGetMenu is called to obtain the menu structure for the\n         * plugin.\n         * \n         * If a plugin does not have a menu, it does not need to implement this.\n         */\n        pluginGetMenu() {}\n\n        /**\n         * Construct the plugin.\n         * \n         * @param {object} properties\n         *     The properties for this plugin.\n         */\n        constructor(properties) {\n            this.initial_properties = properties;\n            this.properties = {};\n\n            this._plot = undefined;\n            this._canvas = undefined;\n\n            // All plugins have a display Property\n            this.defineProperty(\"display\", {\n                defaultValue: true,\n                refreshOnChange: true,\n                help: \"changes if the plugin is rendered on the plot or not\"\n            });\n\n            this.pluginSetup();\n\n            return this;\n        }\n\n        /**\n         * Called when the plugin is added to the plot.\n         *  @param plot\n         *      The plot the plugin is attahced to \n         *  @param canvas\n         *      The canvas the plugin should render to\n         */\n        init(plot, canvas) {\n            if (this._plot) {\n                throw \"Plugins can only be added to one plot at a time\";\n            }\n            this._plot = plot;\n            this._canvas = canvas;\n            this.properties = {};\n\n            // When a plugin is added to a plot, it's properties are reset\n            // to the initial values provided during construction.  This\n            // avoids confusion when a plugin is constructed, added to a plot\n            // has it's state modified, then removed from a plot, and added\n            // back to a plot\n            this.resetProperties(this.initial_properties);\n\n            this.pluginInit();\n        }\n\n        /**\n         * Get's the plot\n         */\n        get plot() {\n            return this._plot;\n        }\n\n        get Mx() {\n            return (this._plot) ? this._plot._Mx : null;\n        }\n\n        get Gx() {\n            return (this._plot) ? this._plot._Gx : null;\n        }\n\n        get canvas() {\n            return this._canvas;\n        }\n\n        get Context() {\n            return (this._canvas) ? this._canvas.getContext(\"2d\") : null;\n        }\n\n        /**\n         * Called when the plugin is removed from the plot.\n         */\n        dispose() {\n            this.pluginDispose();\n\n            this._plot = undefined;\n            this._canvas = undefined;\n            this.properties = {};\n        }\n\n        /**\n         * Refresh is called when the plugin needs to redraw itself.\n         */\n        refresh() {\n            if (!this._plot || !this._canvas) {\n                return;\n            }\n            if (!this.properties.display) {\n                return;\n            }\n            this.pluginRefresh(this.canvas);\n        }\n\n        /**\n         * Provides the menu for the plugin\n         *\n         * @returns\n         *    A mx.menu compatible object or a function that creates one\n         */\n        menu() {\n            return this.pluginGetMenu();\n        }\n\n        /**\n         * Defines a new Property that the Plugin exposes.\n         * \n         * @param {string} PropertyName \n         * @param {object} definition \n         */\n        defineProperty(PropertyName, definition) {\n            if (this.definedproperties === undefined) {\n                this.definedproperties = {};\n            }\n\n            definition = definition || {};\n\n            this.definedproperties[PropertyName] = definition;\n\n            // Fluentize the API\n            this[PropertyName] = function() {\n                if (!arguments.length) {\n                    return this.properties[PropertyName];\n                }\n\n                if (definition.readonly) {\n                    throw \"property \" + PropertyName + \" is readonly\";\n                }\n\n                if (this.properties[PropertyName] !== arguments[0]) {\n                    this.properties[PropertyName] = arguments[0];\n                    if (definition.callback) {\n                        definition.callback(arguments[0]);\n                    }\n                    if (definition.refreshOnChange) {\n                        this.refresh();\n                    }\n                    return this;\n                }\n            };\n        }\n\n        resetProperties(overrides) {\n            for (let propName in this.definedproperties) {\n                this.properties[propName] = this.definedproperties[propName].defaultValue;\n            }\n            this.assignProperties(overrides);\n        }\n\n        /**\n         * Updates the Plugin's properties with new values.\n         * \n         * @param {object} properties \n         */\n        assignProperties(properties) {\n            let refresh = false;\n            for (let propName in properties) {\n                // don't let the user define new properties\n                if (!this.definedproperties.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                // if the values are the same nothing to do\n                if (this.properties[propName] === properties[propName]) {\n                    continue;\n                }\n\n                if (this.definedproperties[propName].readonly) {\n                    throw \"property \" + propName + \" is readonly\";\n                }\n\n                // set the Property\n                this.properties[propName] = properties[propName];\n                // make the callback if necessary\n                if (this.definedproperties[propName].callback) {\n                    this.definedproperties[propName].callback(properties[propName]);\n                }\n                // if a refresh is necessary, call it later\n                if (this.definedproperties[propName].refreshOnChange === true) {\n                    refresh = true;\n                }\n            }\n            // refresh if necessary\n            if (refresh) {\n                this.refresh();\n            }\n        }\n\n        /**\n         * Register to receive a plugin specific event\n         *\n         * @param type\n         *    The type of event\n         * @param fn\n         *    The function callback\n         *  @param context\n         *     Context that will be provided to the callback\n         */\n        on(type, fn, context) {\n            if (!this._events) {\n                this._events = {};\n            }\n            if (!this._events[type]) {\n                this._events[type] = [];\n            }\n            if (context === this) {\n                // Less memory footprint.\n                context = undefined;\n            }\n            this._events[type].push({\n                cb: fn,\n                ctx: context\n            });\n        }\n\n        /**\n         * Emit a plugin event.\n         */\n        emit(type, data) {\n            var event = Object.assign({}, data, {\n                type: type,\n                target: this\n            });\n            if (this._events) {\n                var listeners = this._events[type];\n                if (listeners) {\n                    for (var i = 0, len = listeners.length; i < len; i++) {\n                        var l = listeners[i];\n                        l.cb.call(l.ctx || this, event);\n                    }\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Unregister callback for a plugin specific event\n         *\n         * @param type\n         *    The type of event\n         * @param fn\n         *    The function callback\n         *  @param context\n         *     Context that will be provided to the callback\n         */\n        off(type, fn, context) {\n            var listeners,\n                i,\n                len;\n            if (!type) {\n                // clear all listeners if called without arguments\n                delete this._events;\n            }\n            if (!this._events) {\n                return;\n            }\n            listeners = this._events[type];\n            if (!listeners) {\n                return;\n            }\n            if (context === this) {\n                context = undefined;\n            }\n            if (listeners) {\n                // find fn and remove it\n                for (i = 0, len = listeners.length; i < len; i++) {\n                    var l = listeners[i];\n                    if (l.ctx !== context) {\n                        continue;\n                    }\n                    if (l.fn === fn) {\n                        listeners.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n            return this;\n        }\n\n        /**\n         * Add a listener to a Plot event\n         */\n        addListener(what, callback) {\n            if (!this.Mx) {\n                throw \"listeners cannot be added until pluginInit is called\";\n            }\n            mx.addEventListener(this.Mx, what, callback, false);\n        }\n\n        /**\n         * Remove a listener from the Plot\n         */\n        removeListener(what, callback) {\n            if (!this.Mx) {\n                throw \"listeners cannot be removed until pluginInit is called\";\n            }\n            mx.removeEventListener(this.Mx, what, callback, false);\n        }\n    }\n\n    module.exports = {\n        Plugin: Plugin\n    };\n}());\n", "/**\n * @license\n * File: sigplot.accordion.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* global module */\n/* global require */\n(function() {\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var plugin = require(\"./sigplot.plugin\");\n    /**\n     * @constructor\n     * @param options\n     * @returns {AccordionPlugin}\n     */\n    class AccordionPlugin extends plugin.Plugin {\n        pluginSetup() {\n            this.defineProperty(\"center_line_style\", {\n                defaultValue: {},\n                refreshOnChange: true\n            });\n            this.defineProperty(\"edge_line_style\", {\n                defaultValue: {},\n                refreshOnChange: true\n            });\n            this.defineProperty(\"fill_style\", {\n                defaultValue: {},\n                refreshOnChange: true\n            });\n            this.defineProperty(\"direction\", {\n                defaultValue: \"vertical\",\n                refreshOnChange: true\n            });\n            this.defineProperty(\"mode\", {\n                defaultValue: \"absolute\",\n                refreshOnChange: true\n            });\n            this.defineProperty(\"draw_center_line\", {\n                defaultValue: true,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"prevent_drag\", {\n                defaultValue: false,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"prevent_move\", {\n                defaultValue: false,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"prevent_resize\", {\n                defaultValue: false,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"discrete_widths\", {\n                defaultValue: undefined,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"min_width\", {\n                defaultValue: undefined,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"max_width\", {\n                defaultValue: undefined,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"shade_area\", {\n                defaultValue: undefined,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"draw_edge_lines\", {\n                defaultValue: true,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"draw_center_line\", {\n                defaultValue: true,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"center\", {\n                refreshOnChange: true,\n                callback: (value) => {\n                    this._onCenterChange(value);\n                },\n                help: \"center of the accordion in plot units (not pixels)\"\n            });\n            this.defineProperty(\"highlight\", {\n                refreshOnChange: true,\n                help: \"highlight the center of the accordion\"\n            });\n            this.defineProperty(\"edge_highlight\", {\n                refreshOnChange: true,\n                help: \"highlight the edges of the accordion\"\n            });\n            this.defineProperty(\"width\", {\n                refreshOnChange: true,\n                callback: (value) => {\n                    this._onWidthChange(value);\n                },\n                help: \"width of the accordion in plot units (not pixels)\"\n            });\n            this.defineProperty(\"center_location\", {\n                refreshOnChange: true,\n                help: \"center of the accordion in pixels\"\n            });\n            this.defineProperty(\"loc_1\", {\n                refreshOnChange: true,\n                help: \"location of one of the accordion bars in pixels\"\n            });\n            this.defineProperty(\"loc_2\", {\n                refreshOnChange: true,\n                help: \"location of one of the accordion bars in pixels\"\n            });\n            this.defineProperty(\"text\", {\n                defaultValue: null,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"textFont\", {\n                defaultValue: null,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"textStokeStyle\", {\n                defaultValue: null,\n                refreshOnChange: true\n            });\n            this.defineProperty(\"textPosition\", {\n                defaultValue: {\n                    horizontal: \"middle\",\n                    vertical: \"middle\"\n                },\n                refreshOnChange: true\n            });\n        }\n\n        pluginInit() {\n            this.addListener(\"mmove\", (evt) => {\n                this._onMouseMove(evt);\n            });\n            this.addListener(\"mdown\", (evt) => {\n                this._onMouseDown(evt);\n            });\n            document.addEventListener(\"mouseup\", () => {\n                this._onDocMouseUp();\n            }, false);\n        }\n\n        pluginDispose() {}\n\n        pluginRefresh() {\n            if ((this.properties.center === undefined) || (this.properties.width === undefined)) {\n                return;\n            }\n            let Mx = this.Mx;\n            let ctx = this.Context;\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n            let center_pxl;\n            if (this.properties.mode === \"absolute\") {\n                center_pxl = mx.real_to_pixel(Mx, this.properties.center, this.properties.center);\n            } else if (this.properties.mode === \"relative\") {\n                if (this.properties.direction === \"vertical\") {\n                    let c = Mx.stk[0].x1 + (Mx.stk[0].x2 - Mx.stk[0].x1) * this.properties.center;\n                    center_pxl = mx.real_to_pixel(Mx, mx.pixel_to_real(Mx, c, c).x, mx.pixel_to_real(Mx, c, c).y);\n                } else if (this.properties.direction === \"horizontal\") {\n                    let c = Mx.stk[0].y1 + (Mx.stk[0].y2 - Mx.stk[0].y1) * this.properties.center;\n                    center_pxl = mx.real_to_pixel(Mx, mx.pixel_to_real(Mx, c, c).x, mx.pixel_to_real(Mx, c, c).y);\n                }\n            }\n\n            let pxl_1, pxl_2;\n            if (this.properties.mode === \"absolute\") {\n                pxl_1 = mx.real_to_pixel(Mx, this.properties.center - (this.properties.width / 2), this.properties.center - (this.properties.width / 2));\n                pxl_2 = mx.real_to_pixel(Mx, this.properties.center + (this.properties.width / 2), this.properties.center + (this.properties.width / 2));\n            } else if (this.properties.mode === 'relative') {\n                let w = Mx.stk[0].x2 - Mx.stk[0].x1;\n                let h = Mx.stk[0].y2 - Mx.stk[0].y1;\n                pxl_1 = {\n                    x: center_pxl.x - (this.properties.width * w / 2),\n                    y: center_pxl.y - (this.properties.width * h / 2)\n                };\n                pxl_2 = {\n                    x: center_pxl.x + (this.properties.width * w / 2),\n                    y: center_pxl.y + (this.properties.width * h / 2)\n                };\n            }\n            if (this.properties.direction === \"vertical\") {\n                this.properties.center_location = center_pxl.x;\n                this.properties.loc_1 = Math.max(Mx.l, pxl_1.x);\n                this.properties.loc_2 = Math.min(Mx.r, pxl_2.x);\n            } else if (this.properties.direction === \"horizontal\") {\n                this.properties.center_location = center_pxl.y;\n                this.properties.loc_1 = Math.max(Mx.t, pxl_2.y);\n                this.properties.loc_2 = Math.min(Mx.b, pxl_1.y);\n            }\n\n            if (this.properties.shade_area && (Math.abs(this.properties.loc_2 - this.properties.loc_1) > 0)) {\n                let oldAlpha = ctx.globalAlpha;\n                ctx.globalAlpha = (this.properties.fill_style.opacity !== undefined) ? this.properties.fill_style.opacity : 0.4;\n                ctx.fillStyle = (this.properties.fill_style.fillStyle !== undefined) ? this.properties.fill_style.fillStyle : Mx.hi;\n                if (this.properties.direction === \"vertical\") {\n                    ctx.fillRect(this.properties.loc_1, Mx.t, this.properties.loc_2 - this.properties.loc_1, Mx.b - Mx.t);\n                } else if (this.properties.direction === \"horizontal\") {\n                    ctx.fillRect(Mx.l, this.properties.loc_1, Mx.r - Mx.l, this.properties.loc_2 - this.properties.loc_1);\n                }\n                ctx.globalAlpha = oldAlpha;\n            }\n\n            if (this.properties.draw_edge_lines || this.properties.edge_highlight || this.edge_dragging) {\n                ctx.lineWidth = (this.properties.edge_line_style.lineWidth !== undefined) ? this.properties.edge_line_style.lineWidth : 1;\n                ctx.lineCap = (this.properties.edge_line_style.lineCap !== undefined) ? this.properties.edge_line_style.lineCap : \"square\";\n                ctx.strokeStyle = (this.properties.edge_line_style.strokeStyle !== undefined) ? this.properties.edge_line_style.strokeStyle : Mx.fg;\n                if (this.edge_dragging || this.properties.edge_highlight) {\n                    ctx.lineWidth = Math.ceil(ctx.lineWidth * 1.2);\n                }\n                if (this.properties.direction === \"vertical\") {\n                    ctx.beginPath();\n                    ctx.moveTo(this.properties.loc_1 + 0.5, Mx.t);\n                    ctx.lineTo(this.properties.loc_1 + 0.5, Mx.b);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.moveTo(this.properties.loc_2 + 0.5, Mx.t);\n                    ctx.lineTo(this.properties.loc_2 + 0.5, Mx.b);\n                    ctx.stroke();\n                } else if (this.properties.direction === \"horizontal\") {\n                    ctx.beginPath();\n                    ctx.moveTo(Mx.l, this.properties.loc_1 + 0.5);\n                    ctx.lineTo(Mx.r, this.properties.loc_1 + 0.5);\n                    ctx.stroke();\n                    ctx.beginPath();\n                    ctx.moveTo(Mx.l, this.properties.loc_2 + 0.5);\n                    ctx.lineTo(Mx.r, this.properties.loc_2 + 0.5);\n                    ctx.stroke();\n                }\n            }\n\n            if (this.properties.draw_center_line) {\n                ctx.lineWidth = (this.properties.center_line_style.lineWidth !== undefined) ? this.properties.center_line_style.lineWidth : 1;\n                ctx.lineCap = (this.properties.center_line_style.lineCap !== undefined) ? this.properties.center_line_style.lineCap : \"square\";\n                ctx.strokeStyle = (this.properties.center_line_style.strokeStyle !== undefined) ? this.properties.center_line_style.strokeStyle : Mx.fg;\n                if (this.dragging || this.properties.highlight) {\n                    ctx.lineWidth = Math.ceil(ctx.lineWidth * 1.2);\n                }\n                if (this.properties.direction === \"vertical\") {\n                    ctx.beginPath();\n                    ctx.moveTo(this.properties.center_location + 0.5, Mx.t);\n                    ctx.lineTo(this.properties.center_location + 0.5, Mx.b);\n                    ctx.stroke();\n                } else if (this.properties.direction === \"horizontal\") {\n                    ctx.beginPath();\n                    ctx.moveTo(Mx.l, this.properties.center_location + 0.5);\n                    ctx.lineTo(Mx.r, this.properties.center_location + 0.5);\n                    ctx.stroke();\n                }\n            }\n\n            // Render text\n            if (this.properties.text) {\n                ctx.save();\n                ctx.font = this.properties.textFont || Mx.text_h + \"px Courier New, monospace\";\n                ctx.globalAlpha = 1;\n                //ctx.textAlign = \"end\";\n                ctx.fillStyle = this.properties.textStrokeStyle || Mx.fg;\n\n                // the capital M is typically the same height and width\n                let text_w = ctx.measureText(\"M\").width;\n                let text_h = text_w;\n\n                let x, y;\n                if (this.properties.direction === \"vertical\") {\n                    if (this.properties.textPosition.horizontal === \"left\") {\n                        ctx.textAlign = \"end\";\n                        x = this.properties.center_location - Mx.text_w;\n                    } else if (this.properties.textPosition.horizontal === \"right\") {\n                        x = this.properties.center_location + Mx.text_w;\n                    } else if (this.properties.textPosition.horizontal === \"middle\") {\n                        ctx.textAlign = \"center\";\n                        x = this.properties.center_location;\n                    }\n\n                    if (this.properties.textPosition.vertical === \"top\") {\n                        y = Mx.t + text_h * 2;\n                    } else if (this.properties.textPosition.vertical === \"middle\") {\n                        y = Math.floor(Mx.t + Mx.b) / 2;\n                    } else if (this.properties.textPosition.vertical === \"bottom\") {\n                        y = Mx.b - text_h;\n                    }\n                } else if (this.properties.direction === \"horizontal\") {\n                    if (this.properties.textPosition.horizontal === \"left\") {\n                        x = Mx.l + Mx.text_w;\n                    } else if (this.properties.textPosition.horizontal === \"right\") {\n                        ctx.textAlign = \"end\";\n                        x = Mx.r - Mx.text_w;\n                    } else if (this.properties.textPosition.horizontal === \"middle\") {\n                        ctx.textAlign = \"center\";\n                        x = Math.floor(Mx.r + Mx.l) / 2;\n                    }\n\n                    if (this.properties.textPosition.vertical === \"top\") {\n                        y = this.properties.center_location - text_h;\n                    } else if (this.properties.textPosition.vertical === \"middle\") {\n                        y = this.properties.center_location;\n                    } else if (this.properties.textPosition.vertical === \"bottom\") {\n                        y = this.properties.center_location + text_h * 2;\n                    }\n                }\n\n                ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n                ctx.clip();\n\n                ctx.fillText(this.properties.text, x, y);\n                ctx.restore();\n            }\n        }\n\n        mimic(acc) {\n            if (acc instanceof AccordionPlugin) {\n                acc.on(\"change\", (evt) => {\n                    this.properties.width = evt.width;\n                    this.properties.center = evt.center;\n                    this.plot.redraw();\n                });\n            }\n        }\n\n        _onMouseMove(evt) {\n            const Mx = this.Mx;\n\n            // Ignore if the slider isn't even visible\n            if (this.properties.center_location === undefined) {\n                return;\n            }\n            // Or if the user wants to prevent a drag operation\n            if (this.properties.prevent_drag) {\n                return;\n            }\n            // Ignore if the mouse is outside of the plot area\n            if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                this.properties.highlight = false;\n                return;\n            }\n            if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                this.properties.highlight = false;\n                return;\n            }\n            // If the mouse is close, \"highlight\" the line\n            let lineWidth = (this.properties.center_line_style.lineWidth !== undefined) ? this.properties.center_line_style.lineWidth : 1;\n            let elineWidth = (this.properties.edge_line_style.lineWidth !== undefined) ? this.properties.edge_line_style.lineWidth : 1;\n            if (!this.dragging && !this.edge_dragging) {\n                if (Mx.warpbox) {\n                    return;\n                } // Don't highlight if a warpbox is being drawn\n                if (this.properties.direction === \"vertical\") {\n                    if (!this.properties.prevent_move) {\n                        if (Math.abs(this.properties.center_location - evt.xpos) < (lineWidth + 5)) {\n                            this.properties.highlight = true;\n                        } else {\n                            this.properties.highlight = false;\n                        }\n                    }\n                    if (!this.properties.prevent_resize) {\n                        if ((Math.abs(this.properties.loc_1 - evt.xpos) < (elineWidth + 5)) || (Math.abs(this.properties.loc_2 - evt.xpos) < (elineWidth + 5))) {\n                            this.properties.edge_highlight = true;\n                        } else {\n                            this.properties.edge_highlight = false;\n                        }\n                    }\n                } else if (this.properties.direction === \"horizontal\") {\n                    if (!this.properties.prevent_move) {\n                        if (Math.abs(this.properties.center_location - evt.ypos) < (lineWidth + 5)) {\n                            this.properties.highlight = true;\n                        } else {\n                            this.properties.highlight = false;\n                        }\n                    }\n                    if (!this.properties.prevent_resize) {\n                        if ((Math.abs(this.properties.loc_1 - evt.ypos) < (elineWidth + 5)) || (Math.abs(this.properties.loc_2 - evt.ypos) < (elineWidth + 5))) {\n                            this.properties.edge_highlight = true;\n                        } else {\n                            this.properties.edge_highlight = false;\n                        }\n                    }\n                }\n                return;\n            }\n            if (this.dragging) {\n                // If we are dragging, update the slider location\n                var pos = mx.pixel_to_real(Mx, evt.xpos, evt.ypos);\n                if (this.properties.direction === \"vertical\") {\n                    this.properties.center_location = evt.xpos;\n                    if (this.properties.mode === 'absolute') {\n                        this.properties.center = pos.x;\n                    } else if (this.properties.mode === 'relative') {\n                        this.properties.center = (evt.xpos - Mx.l) / (Mx.r - Mx.l);\n                    }\n                } else if (this.properties.direction === \"horizontal\") {\n                    this.properties.center_location = evt.ypos;\n                    if (this.properties.mode === 'absolute') {\n                        this.properties.center = pos.y;\n                    } else if (this.properties.mode === 'relative') {\n                        this.properties.center = (evt.ypos - Mx.t) / (Mx.b - Mx.t);\n                    }\n                }\n            }\n            if (this.edge_dragging) {\n                // If we are dragging, update the slider location\n                var pos = mx.pixel_to_real(Mx, evt.xpos, evt.ypos);\n                if (this.properties.direction === \"vertical\") {\n                    if (this.properties.mode === 'absolute') {\n                        this.properties.width = 2 * Math.abs(this.properties.center - pos.x);\n                    } else if (this.properties.mode === 'relative') {\n                        this.properties.width = (2 * Math.abs(this.properties.center_location - evt.xpos)) / (Mx.r - Mx.l);\n                    }\n                } else if (this.properties.direction === \"horizontal\") {\n                    if (this.properties.mode === 'absolute') {\n                        this.properties.width = 2 * Math.abs(this.properties.center - pos.y);\n                    } else if (this.properties.mode === 'relative') {\n                        this.properties.width = (2 * Math.abs(this.properties.center_location - evt.ypos)) / (Mx.b - Mx.t);\n                    }\n                }\n                // See if the width needs to be constrained\n                if (this.properties.discrete_widths) {\n                    // If the user wants to restrict the accordion to a set of\n                    // discrete widths, find the closest match\n                    let nearestIdx = 0;\n                    let minDiff = Math.abs(this.properties.width - this.properties.discrete_widths[0]);\n                    let tmpDiff = 0;\n                    for (let idx = 1; idx < this.properties.discrete_widths.length; idx++) {\n                        tmpDiff = Math.abs(this.properties.width - this.properties.discrete_widths[idx]);\n                        if (tmpDiff < minDiff) {\n                            nearestIdx = idx;\n                            minDiff = tmpDiff;\n                        }\n                    }\n                    // Otherwise, apply min_width/max_width if defined\n                    if (this.properties.min_width) {\n                        this.properties.width = Math.max(this.properties.width, this.properties.min_width);\n                    }\n                    if (this.properties.max_width) {\n                        this.properties.width = Math.min(this.properties.width, this.properties.max_width);\n                    }\n                }\n            }\n            // Refresh the plot\n            if (this.plot) {\n                this.plot.refresh(); // rate limit?\n            }\n            // Prevent any other plot default action at this point\n            evt.preventDefault();\n        }\n\n        _onMouseDown(evt) {\n            const Mx = this.Mx;\n\n            if (this.properties.center_location === undefined) {\n                return;\n            }\n            if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                return;\n            }\n            if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                return;\n            }\n            if (this.properties.prevent_drag) {\n                return;\n            }\n            let lineWidth = (this.properties.center_line_style.lineWidth !== undefined) ? this.properties.center_line_style.lineWidth : 1;\n            let elineWidth = (this.properties.edge_line_style.lineWidth !== undefined) ? this.properties.edge_line_style.lineWidth : 1;\n            if (this.properties.direction === \"vertical\") {\n                // prefer edge drag over center drag\n                if ((Math.abs(this.properties.loc_1 - evt.xpos) < (elineWidth + 5)) || (Math.abs(this.properties.loc_2 - evt.xpos) < (elineWidth + 5))) {\n                    this.edge_dragging = !this.properties.prevent_resize;\n                    evt.preventDefault();\n                } else if (Math.abs(this.properties.center_location - evt.xpos) < (lineWidth + 5)) {\n                    this.dragging = !this.properties.prevent_move;\n                    evt.preventDefault();\n                }\n            } else if (this.properties.direction === \"horizontal\") {\n                if ((Math.abs(this.properties.loc_1 - evt.ypos) < (elineWidth + 5)) || (Math.abs(this.properties.loc_2 - evt.ypos) < (elineWidth + 5))) {\n                    this.edge_dragging = !this.properties.prevent_resize;\n                    evt.preventDefault();\n                } else if (Math.abs(this.properties.center_location - evt.ypos) < (lineWidth + 5)) {\n                    this.dragging = !this.properties.prevent_move;\n                    evt.preventDefault();\n                }\n            }\n        }\n\n        _onDocMouseUp() {\n            const Mx = this.Mx;\n\n            // only emit an event if we are actually dragging\n            if (!this.dragging || !this.edge_dragging) {\n                return;\n            }\n\n            // We are no longer dragging\n            this.dragging = false;\n            this.edge_dragging = false;\n\n            // Issue a slider tag event\n            let evt = document.createEvent('Event');\n            evt.initEvent('accordiontag', true, true);\n            evt.center = this.properties.center;\n            evt.width = this.properties.width;\n            mx.dispatchEvent(Mx, evt);\n            this.emit('change', {\n                center: this.properties.center,\n                width: this.properties.width\n            });\n        }\n\n        _onCenterChange(center) {\n            if (this.plot) {\n                var Mx = this.Mx;\n                // Issue a slider tag event\n                var evt = document.createEvent('Event');\n                evt.initEvent('accordiontag', true, true);\n                this.emit('change', {\n                    center: this.properties.center,\n                    width: this.properties.width\n                });\n                evt.center = this.properties.center;\n                evt.width = this.properties.width;\n                mx.dispatchEvent(Mx, evt);\n                this.plot.redraw();\n            }\n        }\n\n        _onWidthChange(width) {\n            if (this.plot) {\n                var Mx = this.Mx;\n                // Issue a slider tag event\n                var evt = document.createEvent('Event');\n                evt.initEvent('accordiontag', true, true);\n                this.emit('change', {\n                    center: this.properties.center,\n                    width: this.properties.width\n                });\n                evt.center = this.properties.center;\n                evt.width = this.properties.width;\n                mx.dispatchEvent(Mx, evt);\n                this.plot.redraw();\n            }\n        }\n\n        /**\n         * @deprecated use .center(value)\n         */\n        set_center(width) {\n            this.center(width);\n        }\n\n        /**\n         * @deprecated use .width(value)\n         */\n        set_width(width) {\n            this.width(width);\n        }\n\n        /**\n         * @deprecated use .highlight(value) instead\n         */\n        set_highlight(ishighlight) {\n            this.highlight(ishighlight);\n        }\n\n        /**\n         * @deprecated use .edge_highlight(value) instead\n         */\n        set_edge_highlight(ishighlight) {\n            this.edge_highlight(ishighlight);\n        }\n\n        /**\n         * @deprecated use .display(value)\n         */\n        set_visible(isVisible) {\n            this.display(false);\n        }\n\n        /**\n         * @deprecated use .mode(value)\n         */\n        set_mode(mode) {\n            this.mode(mode);\n        }\n\n        /**\n         * @deprecated use .center()\n         */\n        get_center() { // In real units\n            return this.properties.center();\n        }\n\n        /**\n         * @deprecated use .width()\n         */\n        get_width() { // Pixels\n            return this.properties.width();\n        }\n    }\n\n    module.exports = AccordionPlugin;\n}());\n", "/**\n * @license\n * File: sigplot.annotations.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    /**\n     * @constructor\n     * @param options\n     * @returns {AnnotationPlugin}\n     */\n    var AnnotationPlugin = function(options) {\n        this.options = (options === undefined) ? {} : options;\n\n        if (this.options.display === undefined) {\n            this.options.display = true;\n        }\n\n        this.options.textBaseline = this.options.textBaseline || \"alphabetic\";\n        this.options.textAlign = this.options.textAlign || \"left\";\n\n        this.annotations = [];\n    };\n\n    AnnotationPlugin.prototype = {\n        init: function(plot) {\n            var self = this;\n            this.plot = plot;\n            var Mx = this.plot._Mx;\n\n            this.onmousemove = function(evt) {\n                // Ignore if there are no annotations\n                if (self.annotations.length === 0) {\n                    return;\n                }\n\n                // Or if the user wants to prevent hover actions\n                if (self.options.prevent_hover) {\n                    return;\n                }\n\n                // Ignore if the mouse is outside of the plot area, clear the highlights\n                if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                    self.set_highlight(false);\n                    return;\n                }\n                if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                    self.set_highlight(false);\n                    return;\n                }\n\n                // If the mouse is close to an annotation, highlight it\n                var need_refresh = false;\n                for (var i = 0; i < self.annotations.length; i++) {\n                    var annotation = self.annotations[i];\n\n                    var pxl = {\n                        x: undefined,\n                        y: undefined\n                    };\n                    // Perserve the legacy API for now\n                    if (annotation.absolute_placement) {\n                        pxl.x = annotation.x;\n                        pxl.y = annotation.y;\n                    }\n                    // Provide the new API\n                    if (annotation.pxl_x !== undefined) {\n                        pxl.x = annotation.pxl_x;\n                    }\n                    if (annotation.pxl_y !== undefined) {\n                        pxl.y = annotation.pxl_y;\n                    }\n                    var res = mx.real_to_pixel(Mx, annotation.x, annotation.y);\n                    if (pxl.x === undefined) {\n                        pxl.x = res.x;\n                    }\n\n                    if (pxl.y === undefined) {\n                        pxl.y = res.y;\n                    }\n\n                    var rect_upperleft = {\n                        x: pxl.x,\n                        y: pxl.y\n                    };\n                    if ((annotation.value instanceof HTMLImageElement) ||\n                        (annotation.value instanceof HTMLCanvasElement) ||\n                        ((typeof HTMLVideoElement !== 'undefined') && annotation.value instanceof HTMLVideoElement)) {\n                        // For image, pxl.x and pxl.y are center\n                        rect_upperleft.x -= annotation.width / 2;\n                        rect_upperleft.y -= annotation.height / 2;\n                    } else {\n                        // For text, pxl.x and pxl.y are lower left corner\n                        rect_upperleft.y -= annotation.height;\n                    }\n\n                    if (mx.inrect(evt.xpos, evt.ypos, rect_upperleft.x, rect_upperleft.y, annotation.width, annotation.height)) {\n                        if (!annotation.highlight) {\n                            self.set_highlight(true, [annotation], pxl.x, pxl.y);\n                            need_refresh = true;\n                        }\n                    } else {\n                        if (annotation.highlight) {\n                            self.set_highlight(false, [annotation]);\n                            need_refresh = true;\n                        }\n                        annotation.selected = undefined;\n                    }\n                }\n\n                // Refresh the plot\n                if (self.plot && need_refresh) {\n                    self.plot.refresh(); // todo - add call to refresh only the plugin layer itself\n                }\n            };\n            this.plot.addListener(\"mmove\", this.onmousemove);\n\n            this.onmousedown = function(evt) {\n                for (var i = 0; i < self.annotations.length; i++) {\n                    // leverage the fact that annotation.highlight is\n                    // set when the mouse is over the annotation\n                    if (self.annotations[i].highlight) {\n                        self.annotations[i].selected = true;\n                    }\n                }\n            };\n            this.plot.addListener(\"mdown\", this.onmousedown);\n\n            this.onmouseup = function(evt) {\n                for (var i = 0; i < self.annotations.length; i++) {\n                    // leverage the fact that annotation.highlight is\n                    // set when the mouse is over the annotation\n                    if (self.annotations[i].selected) {\n                        // Issue a highlight event\n                        var evt = document.createEvent('Event');\n                        evt.initEvent('annotationclick', true, true);\n                        evt.annotation = self.annotations[i];\n                        var executeDefault = mx.dispatchEvent(self.plot._Mx, evt);\n                        if ((executeDefault) && (self.annotations[i].onclick)) {\n                            self.annotations[i].onclick();\n                        }\n                    }\n                    self.annotations[i].selected = undefined;\n                }\n            };\n            document.addEventListener(\"mouseup\", this.onmouseup, false);\n        },\n\n        set_highlight: function(state, annotations, x, y) {\n            var _annotations = annotations || this.annotations;\n            for (var i = 0; i < _annotations.length; i++) {\n                // Issue a highlight event\n                var evt = document.createEvent('Event');\n                evt.initEvent('annotationhighlight', true, true);\n                evt.annotation = _annotations[i];\n                evt.state = state;\n                evt.x = x;\n                evt.y = y;\n                var executeDefault = mx.dispatchEvent(this.plot._Mx, evt);\n                if (executeDefault) {\n                    _annotations[i].highlight = state;\n                }\n            }\n        },\n\n        menu: function() {\n            var _display_handler = (function(self) {\n                return function() {\n                    self.options.display = !self.options.display;\n                    self.plot.redraw();\n                };\n            }(this));\n\n            var _clearall_handler = (function(self) {\n                return function() {\n                    self.annotations = [];\n                    self.plot.redraw();\n                };\n            }(this));\n\n            return {\n                text: \"Annotations...\",\n                menu: {\n                    title: \"ANNOTATIONS\",\n                    items: [{\n                        text: \"Display\",\n                        checked: this.options.display,\n                        style: \"checkbox\",\n                        handler: _display_handler\n                    }, {\n                        text: \"Clear All\",\n                        handler: _clearall_handler\n                    }]\n                }\n            };\n        },\n\n        add_annotation: function(annotation) {\n            this.annotations.push(annotation);\n\n            this.plot.redraw();\n            return this.annotations.length;\n        },\n\n        clear_annotations: function() {\n            this.annotations = [];\n\n            this.plot.redraw();\n        },\n\n        refresh: function(canvas) {\n            if (!this.options.display) {\n                return;\n            }\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n            var ctx = canvas.getContext(\"2d\");\n            var self = this;\n\n            ctx.save();\n            // Ensure annotations are clipped at the plot borders\n            ctx.beginPath();\n            ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n            ctx.clip();\n\n            mx.onCanvas(Mx, canvas, function() {\n\n                // iterate backwards so we can remove from the end...in the future\n                // if we decide to have annotations auto-remove\n                for (var i = self.annotations.length - 1; i >= 0; i--) {\n                    var annotation = self.annotations[i];\n\n                    var pxl = {\n                        x: undefined,\n                        y: undefined\n                    };\n                    // Perserve the legacy API for now\n                    if (annotation.absolute_placement) {\n                        pxl.x = annotation.x;\n                        pxl.y = annotation.y;\n                    }\n                    // Provide the new API\n                    if (annotation.pxl_x !== undefined) {\n                        pxl.x = annotation.pxl_x;\n                    }\n                    if (annotation.pxl_y !== undefined) {\n                        pxl.y = annotation.pxl_y;\n                    }\n                    var res = mx.real_to_pixel(Mx, annotation.x, annotation.y);\n                    if (pxl.x === undefined) {\n                        pxl.x = res.x;\n                    }\n\n                    if (pxl.y === undefined) {\n                        pxl.y = res.y;\n                    }\n\n                    if (!mx.inrect(pxl.x, pxl.y, Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t)) {\n                        // do we want to auto-remove?\n                        //self.annotations.splice(i,1);\n                        continue;\n                    }\n\n                    if ((annotation.value instanceof HTMLImageElement) ||\n                        (annotation.value instanceof HTMLCanvasElement) ||\n                        ((typeof HTMLVideoElement !== 'undefined') && annotation.value instanceof HTMLVideoElement)) {\n                        annotation.width = annotation.value.width;\n                        annotation.height = annotation.value.height;\n                        ctx.drawImage(annotation.value, pxl.x - (annotation.width / 2), pxl.y - (annotation.height / 2));\n                    } else {\n                        // Setup the text styles\n                        ctx.font = annotation.font || \"bold italic 20px new century schoolbook\";\n                        if (!annotation.highlight) {\n                            ctx.fillStyle = annotation.color || Mx.fg;\n                        } else {\n                            ctx.fillStyle = annotation.highlight_color || Mx.hi;\n                        }\n                        ctx.globalAlpha = 1;\n                        // Measure the text\n                        annotation.width = ctx.measureText(annotation.value).width;\n                        annotation.height = ctx.measureText(\"M\").width; // approximation of height\n\n                        // Render the text\n                        ctx.textBaseline = annotation.textBaseline || self.options.textBaseline;\n                        ctx.textAlign = annotation.textAlign || self.options.textAlign;\n                        ctx.fillText(annotation.value, pxl.x, pxl.y);\n                    }\n\n\n                    if (annotation.highlight && annotation.popup) {\n                        mx.render_message_box(Mx, annotation.popup, pxl.x + 5, pxl.y + 5, annotation.popupTextColor);\n                    }\n                }\n\n            });\n\n            ctx.restore();\n        },\n\n        dispose: function() {\n            this.plot = undefined;\n            this.annotations = undefined;\n        }\n    };\n\n    module.exports = AnnotationPlugin;\n\n}());\n", "/**\n * @license\n * File: sigplot.boxes.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var _ = require(\"underscore\");\n    var common = require(\"./common\");\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n\n    class BoxesPlugin {\n\n        /**\n         * @constructor\n         * \n         * @param {Object} options - options for the plugin\n         * @param {Boolean} options.display - controls if boxes should be displayed or hidden\n         * @param {Boolean} options.enableSelect - controls if boxes can be selected with the mouse\n         * @param {Boolean} options.enableMove - controls if boxes can be moved with the mouse\n         * @param {Boolean} options.enableResize - controls if boxes can be resized with the mouse\n         * @param {Number} options.lineWidth - the line width (in pixels) for drawing the box\n         * @param {Number} options.alpha - the transparency for drawing the box fill\n         * @param {Boolean} options.fill - if boxes should be filled or not\n         * @param {*} options.strokeStyle - the canvas style to be used for the line and box text\n         * @param {*} options.fillStyle - the canvas style to be used for the box fill\n         * @param {Boolean} options.absolutePlacement - if boxes x,y,w,h are in pixels instead of real coordinates\n         * \n         * @returns {BoxesPlugin}\n         */\n        constructor({\n            display = true,\n            enableSelect = false,\n            enableMove = false,\n            enableResize = false,\n            lineWidth = 1,\n            alpha = 0.5,\n            font,\n            fill = false,\n            strokeStyle,\n            fillStyle,\n            absolutePlacement = false\n        } = {}) {\n            this.options = {};\n\n            this.options.display = display;\n            this.options.enableSelect = enableSelect;\n            this.options.enableMove = enableMove;\n            this.options.enableResize = enableResize;\n            this.options.lineWidth = lineWidth;\n            this.options.alpha = alpha;\n            this.options.font = font;\n            this.options.fill = fill;\n            this.options.strokeStyle = strokeStyle;\n            this.options.fillStyle = fillStyle;\n            this.options.absolutePlacement = absolutePlacement;\n        }\n\n        /**\n         * Initializer called when plot.add_plugin() is used.\n         * This should not be called directly.\n         */\n        init(plot) {\n            this.plot = plot;\n            this.boxes = [];\n            this._clickTimer = null;\n\n            this._onMouseDown = this._onMouseDown.bind(this);\n            this._onMouseMove = this._onMouseMove.bind(this);\n            this._onMouseClick = this._onMouseClick.bind(this);\n\n            this.plot.addListener(\"mdown\", this._onMouseDown);\n            this.plot.addListener(\"mmove\", this._onMouseMove);\n            this.plot.addListener(\"mup\", this._onMouseClick);\n            this.plot.addListener(\"mdblclick\", this._onMouseClick);\n            // listen for document mouse up to handle situations where\n            // a user is dragging the mouse out of the plot area\n        }\n\n        //////////////////////////////////////////////////////////////////////\n        // Public Methods\n\n        /**\n         * Get/Set display property.\n         */\n        display(val) {\n            if (val === undefined) {\n                return this.options.display;\n            } else {\n                this.options.display = val;\n                this.plot.refresh();\n            }\n        }\n\n        /**\n         * Get/Set enableSelect property.\n         */\n        enableSelect(val) {\n            if (val === undefined) {\n                return this.options.enableSelect;\n            } else {\n                this.options.enableSelect = val;\n                if (this.options.enableSelect === false) {\n                    _.each(this.boxes, (box) => {\n                        box.selected = undefined;\n                    });\n                }\n                this.plot.refresh();\n            }\n        }\n\n        /**\n         * Get/Set enableMove property.\n         */\n        enableMove(val) {\n            if (val === undefined) {\n                return this.options.enableMove;\n            } else {\n                this.options.enableMove = val;\n                this.plot.refresh();\n            }\n        }\n\n        /**\n         * Get/Set enableResize property.\n         */\n        enableResize(val) {\n            if (val === undefined) {\n                return this.options.enableResize;\n            } else {\n                this.options.enableResize = val;\n                this.plot.refresh();\n            }\n        }\n\n        /**\n         * Get list of all boxes.\n         */\n        getBoxes() {\n            return this.boxes;\n        }\n\n        /**\n         * Add a new box.\n         *\n         * @param {Object} box - the box to add\n         \n         * @param {Number} box.x - upper left corner x position of box\n         * @param {Number} box.y - upper left corner y position of box\n         * @param {Number} box.w - the width of the box along the x-dimension\n         * @param {Number} box.h - the height of the box along the x-dimension\n         * @param {string} box.text - a text label for the box\n         * @param {Boolen} box.fill - true if you want the box to be filled in\n         * @param {string} box.fillStyle - the fillStyle to use, defaults to strokeStyle\n         * @param {string} box.strokeStyle - the strokeStyle to use, defaults to the default fore-ground color\n         * @param {Number} box.alpha - the alpha transparency to use\n         * @param {Number} box.lineWidth - the width for the box outline\n         * @param {Boolen} box.absolutePlacement - true if you want the box x,y,w,h coordinates to be pixel instead of real\n         * \n         * @returns the unique id for the box\n         */\n        addBox(box) {\n            const Mx = this.plot._Mx;\n\n            const _box = {\n                x: box.x,\n                y: box.y,\n                w: box.w,\n                h: box.h,\n                text: box.text,\n                id: common.uuidv4(),\n                fill: box.fill,\n                fillStyle: box.fillStyle,\n                alpha: box.alpha,\n                strokeStyle: box.strokeStyle,\n                lineWidth: box.lineWidth,\n                absolutePlacement: box.absolutePlacement,\n            };\n            // Handle deprecated options\n            if (box.absolute_placement) {\n                _box.absolutePlacement = box.absolute_placement;\n            }\n            this.boxes.push(_box);\n\n            this.plot.redraw();\n\n            const evt = document.createEvent('Event');\n            evt.box = _box;\n            evt.initEvent('boxadd', true, true);\n            mx.dispatchEvent(Mx, evt);\n\n            return _box.id;\n        }\n\n        /**\n         * Brings a box to the front of the z-order\n         * \n         * @param {string} id - the unique id of the box to remove\n         */\n        getSelectedBoxes() {\n            const selectedBoxes = [];\n            let box;\n            let ii;\n            for (ii = (this.boxes.length - 1); ii > -1; ii--) {\n                box = this.boxes[ii];\n                if (box.selected) {\n                    selectedBoxes.push(box);\n                }\n            }\n            return selectedBoxes;\n        }\n\n        /**\n         * Brings a box to the front of the z-order\n         * \n         * @param {string} id - the unique id of the box to remove\n         */\n        bringBoxToFront(id) {\n            let box;\n            let ii;\n            for (ii = (this.boxes.length - 1); ii > -1; ii--) {\n                box = this.boxes[ii];\n                if (box.id === id) {\n                    this.boxes.splice(ii, 1);\n                    this.boxes.push(box);\n                    break;\n                }\n            }\n        }\n\n        /**\n         * Sends a box to the back of the z-order\n         * \n         * @param {string} id - the unique id of the box to remove\n         */\n        sendBoxToBack(id) {\n            let box;\n            let ii;\n            for (ii = (this.boxes.length - 1); ii > -1; ii--) {\n                box = this.boxes[ii];\n                if (box.id === id) {\n                    this.boxes.splice(ii, 1);\n                    this.boxes.splice(0, 0, box);\n                    break;\n                }\n            }\n        }\n\n        /**\n         * Removes a box.\n         * \n         * @param {string} id - the unique id of the box to remove\n         */\n        removeBox(id) {\n            const Mx = this.plot._Mx;\n\n            let box;\n            let ii;\n            for (ii = (this.boxes.length - 1); ii > -1; ii--) {\n                box = this.boxes[ii];\n                if (box.id === id) {\n                    this.boxes.splice(ii, 1);\n\n                    const evt = document.createEvent('Event');\n                    evt.box = box;\n                    evt.initEvent('boxremove', true, true);\n                    mx.dispatchEvent(Mx, evt);\n                    // TODO - should we allow prevent default\n                    // to block a box removal?\n                    break;\n                }\n            }\n            this.plot.redraw();\n        }\n\n        /**\n         * Removes all boxes\n         */\n        clearBoxes() {\n            const Mx = this.plot._Mx;\n\n            let box;\n            let ii;\n            for (ii = (this.boxes.length - 1); ii > -1; ii--) {\n                box = this.boxes[ii];\n                this.boxes.splice(ii, 1);\n\n                const evt = document.createEvent('Event');\n                evt.box = box;\n                evt.initEvent('boxremove', true, true);\n                mx.dispatchEvent(Mx, evt);\n            }\n            this.plot.redraw();\n        }\n\n        //////////////////////////////////////////////////////////////////////\n        // Deprecated APIs\n        add_box(box) {\n            return this.addBox(box);\n        }\n\n        remove_box(id) {\n            return this.removeBox(id);\n        }\n\n        clear_boxes(box) {\n            return this.clearBoxes();\n        }\n\n        //////////////////////////////////////////////////////////////////////\n        // Internal Methods\n        _getControlPoints(box) {\n            // TODO verify this logic works correctly in all origins\n            const rect = mx.real_box_to_pixel(this.plot._Mx, box.x, box.y, box.w, box.h);\n\n            const ul = rect.ul;\n            const lr = rect.lr;\n            const ll = {\n                x: ul.x,\n                y: lr.y\n            };\n            const ur = {\n                x: lr.x,\n                y: ul.y\n            };\n            // mid-points\n            const um = {\n                x: (ul.x + lr.x) / 2,\n                y: ul.y\n            };\n            const lm = {\n                x: (ul.x + lr.x) / 2,\n                y: lr.y\n            };\n            const ml = {\n                x: ul.x,\n                y: (ul.y + lr.y) / 2\n            };\n            const mr = {\n                x: lr.x,\n                y: (ul.y + lr.y) / 2\n            };\n\n            return {\n                ul: ul,\n                lr: lr,\n                ll: ll,\n                ur: ur,\n                um: um,\n                lm: lm,\n                ml: ml,\n                mr: mr\n            };\n        }\n\n        // Checks if the xpos/ypos is within a box\n        _isWithinBox(xpos, ypos, box) {\n            const rect = mx.real_box_to_pixel(this.plot._Mx, box.x, box.y, box.w, box.h);\n\n            const in_x = (rect.ul.x <= xpos) && (xpos <= rect.lr.x);\n            const in_y = (rect.ul.y <= ypos) && (ypos <= rect.lr.y);\n\n            return (in_x && in_y);\n        }\n\n        // Checks if the xpos/ypos is over a box control point\n        _isOverControlPoint(xpos, ypos, box) {\n            const controlPoints = this._getControlPoints(box);\n            for (const [key, value] of Object.entries(controlPoints)) {\n                const dist_x = Math.abs(value.x - xpos);\n                const dist_y = Math.abs(value.y - ypos);\n                if ((dist_x < 5) && (dist_y < 5)) {\n                    return key;\n                }\n            }\n            return null;\n        }\n\n        // TODO convert this to using real-world coordinates\n        _selectBoxes(xpos, ypos, multi_select) {\n            // See if the mouse is within any boxes\n            const boxes_selected = [];\n            for (let ii = (this.boxes.length - 1); ii > -1; ii--) {\n                const box = this.boxes[ii];\n                const rect = mx.real_box_to_pixel(this.plot._Mx, box.x, box.y, box.w, box.h);\n\n                const in_x = (rect.ul.x <= xpos) && (xpos <= rect.lr.x);\n                const in_y = (rect.ul.y <= ypos) && (ypos <= rect.lr.y);\n                if ((multi_select || boxes_selected.length === 0) && (in_x && in_y)) {\n                    boxes_selected.push(box);\n                    if (this.options.enableSelect) {\n                        box.selected = true;\n                    }\n                } else if (multi_select || this._isOverControlPoint(xpos, ypos, box)) {\n                    boxes_selected.push(box);\n                    if (this.options.enableSelect) {\n                        box.selected = true;\n                    }\n                } else {\n                    box.selected = undefined;\n                }\n            }\n            return boxes_selected;\n        }\n\n        // Mouse down handler\n        _onMouseDown(evt) {\n            const Mx = this.plot._Mx;\n\n            // we never intercept middle mouse for boxes\n            if (evt.which === 2) {\n                return;\n            }\n\n            // If there are no boxes, nothing to do\n            if (this.boxes.length === 0) {\n                return;\n            }\n\n            // Or if the user wants to prevent a drag operation\n            if (!this.options.enableSelect && !this.options.enableMove && !this.options.enableResize) {\n                return;\n            }\n\n            // If the event is outside the plot entirely\n            // we can just skip it\n            if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                return;\n            }\n            if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                return;\n            }\n\n            // TODO - support multi-select\n            // TODO - should a boxselect event happen on mousedown\n            const boxes_selected = this._selectBoxes(evt.xpos, evt.ypos, false);\n            if (boxes_selected.length > 0) {\n                if (this.options.enableSelect) {\n                    boxes_selected[0].selected = true;\n                }\n                let controlPoint;\n                if (this.options.enableResize) {\n                    controlPoint = this._isOverControlPoint(evt.xpos, evt.ypos, boxes_selected[0]);\n                }\n                this._selected = {\n                    x: evt.x,\n                    y: evt.y,\n                    orig_box: Object.assign({}, boxes_selected[0]),\n                    box: boxes_selected[0],\n                    controlPoint: controlPoint,\n                    which: evt.which,\n                };\n\n                // Prevent a rubber box from being drawn\n                // but this also will prevent mtag events\n                // TODO think about that more\n                evt.preventDefault();\n            }\n        }\n\n        _onMouseMove(evt) {\n            const Mx = this.plot._Mx;\n\n            // Ignore if there are no boxes\n            if (this.boxes.length === 0) {\n                return;\n            }\n\n            // Or if the user wants to prevent a drag operation\n            if (!this.options.enableMove && !this.options.enableResize) {\n                return;\n            }\n\n            // Ignore if the mouse is outside of the plot area\n            if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                return;\n            }\n            if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                return;\n            }\n\n            // If we aren't dragging, then there is nothing else to do\n            if (this._selected && this._selected.which === 1) {\n                // If we are dragging, update the box size/location\n                const pos = mx.pixel_to_real(Mx, evt.xpos - this._selected.xpos, evt.ypos - this._selected.ypos);\n                const xdelta = (evt.x - this._selected.x);\n                const ydelta = (evt.y - this._selected.y);\n\n                if (this.options.enableMove) {\n                    if (!this._selected.controlPoint) {\n                        // we are moving the entire box by how much the mouse moved after mouse down\n                        this._selected.box.x = this._selected.orig_box.x + xdelta;\n                        this._selected.box.y = this._selected.orig_box.y + ydelta;\n                    }\n                }\n\n                if (this.options.enableResize) {\n                    if ((this._selected.controlPoint === \"ul\") || (this._selected.controlPoint === \"um\") || (this._selected.controlPoint === \"ur\")) {\n                        if ((Mx.origin === 1) || (Mx.origin === 2)) {\n                            // regular y\n                            this._selected.box.y = this._selected.orig_box.y + ydelta;\n                            this._selected.box.h = this._selected.orig_box.h + ydelta;\n                        } else {\n                            // inverted y\n                            this._selected.box.y = this._selected.orig_box.y + ydelta;\n                            this._selected.box.h = this._selected.orig_box.h - ydelta;\n                        }\n                    } else if ((this._selected.controlPoint === \"ll\") || (this._selected.controlPoint === \"lm\") || (this._selected.controlPoint === \"lr\")) {\n                        if ((Mx.origin === 1) || (Mx.origin === 2)) {\n                            // regular y\n                            this._selected.box.h = this._selected.orig_box.h - ydelta;\n                        } else {\n                            // inverted y\n                            this._selected.box.h = this._selected.orig_box.h + ydelta;\n                        }\n                    }\n\n                    if ((this._selected.controlPoint === \"ul\") || (this._selected.controlPoint === \"ml\") || (this._selected.controlPoint === \"ll\")) {\n                        if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                            // regular x\n                            this._selected.box.x = this._selected.orig_box.x + xdelta;\n                            this._selected.box.w = this._selected.orig_box.w - xdelta;\n                        } else {\n                            // inverted x\n                            this._selected.box.x = this._selected.orig_box.x + xdelta;\n                            this._selected.box.x = this._selected.orig_box.w - xdelta;\n                        }\n                    } else if ((this._selected.controlPoint === \"ur\") || (this._selected.controlPoint === \"mr\") || (this._selected.controlPoint === \"lr\")) {\n                        if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                            // regular x\n                            this._selected.box.w = this._selected.orig_box.w + xdelta;\n                        } else {\n                            // inverted x\n                            this._selected.box.w = this._selected.orig_box.w - xdelta;\n                        }\n                    }\n                }\n\n                // Refresh the plugin\n                this.plot.redraw();\n                // Prevent any other plot default action at this point\n                evt.preventDefault();\n            } else {\n                // If a box isn't currently selected, then when the mouse is over a\n                // control point highlight the box\n                let box, controlPoint, withinBox;\n                let ii;\n                let cursor = \"default\";\n                for (ii = 0; ii < this.boxes.length; ii++) {\n                    box = this.boxes[ii];\n                    withinBox = this._isWithinBox(evt.xpos, evt.ypos, box);\n\n                    // Check if we are within the box and move is enabled\n                    if (withinBox && this.options.enableMove) {\n                        cursor = \"move\";\n                    }\n\n                    // Then check for control points, which take priority over movement action\n                    controlPoint = this._isOverControlPoint(evt.xpos, evt.ypos, box);\n                    if (controlPoint && this.options.enableResize) {\n                        // TODO change cursor\n                        if ((controlPoint === 'ul') || (controlPoint === 'lr')) {\n                            cursor = \"nw-resize\";\n                        } else if ((controlPoint === 'll') || (controlPoint === 'ur')) {\n                            cursor = \"ne-resize\";\n                        } else if ((controlPoint === 'lm') || (controlPoint === 'um')) {\n                            cursor = \"ns-resize\";\n                        } else if ((controlPoint === 'ml') || (controlPoint === 'mr')) {\n                            cursor = \"ew-resize\";\n                        }\n                        box.highlight = true;\n                    } else if (!controlPoint && box.highlight) {\n                        box.highlight = undefined;\n                    }\n                }\n                if (cursor !== Mx.root.style.cursor) {\n                    Mx.root.style.cursor = cursor;\n                }\n                this.plot.redraw();\n            }\n        }\n\n        // Mouse click handler\n        _onMouseClick(evt) {\n            const Mx = this.plot._Mx;\n            let allowDefault = true;\n            // the box is handling this, so prevent default actions\n            if (this.options.enableSelect || this.options.enableMove || this.options.enableResize) {\n                if (!this._selected) {\n                    const boxes_selected = this._selectBoxes(evt.xpos, evt.ypos, false);\n                    if (boxes_selected.length > 0) {\n                        if (this.options.enableSelect) {\n                            boxes_selected[0].selected = true;\n                        }\n                        let controlPoint;\n                        if (this.options.enableResize) {\n                            controlPoint = this._isOverControlPoint(evt.xpos, evt.ypos, boxes_selected[0]);\n                        }\n                        this._selected = {\n                            x: evt.x,\n                            y: evt.y,\n                            orig_box: Object.assign({}, boxes_selected[0]),\n                            box: boxes_selected[0],\n                            controlPoint: controlPoint,\n                            which: evt.which,\n                        };\n                    }\n                }\n\n                const selected = this._selected;\n                if (!selected) {\n                    return;\n                }\n                this._selected = undefined;\n\n                const move_dist = mx.real_distance_to_pixel(\n                    this.plot._Mx,\n                    selected.orig_box.x,\n                    selected.orig_box.y,\n                    selected.box.x,\n                    selected.box.y\n                );\n\n                const size_dist = mx.real_distance_to_pixel(\n                    this.plot._Mx,\n                    selected.orig_box.x + selected.orig_box.w,\n                    selected.orig_box.y + selected.orig_box.h,\n                    selected.box.x + selected.box.w,\n                    selected.box.y + selected.box.h\n                );\n\n                if ((Math.abs(move_dist.x) > 3) || (Math.abs(move_dist.y) > 3) || (Math.abs(size_dist.x) > 3) || (Math.abs(size_dist.y) > 3)) {\n                    // If the control point has been dragged causing negative w/h adjust the box\n                    if (selected.box.w < 0) {\n                        if ((Mx.origin === 1) || (Mx.origin === 4)) {\n                            // Regular x\n                            selected.box.x = selected.box.x + selected.box.w;\n                            selected.box.w = Math.abs(selected.box.w);\n                        } else {\n                            // Inverted x\n                            selected.box.x = selected.box.x - selected.box.w;\n                            selected.box.w = Math.abs(selected.box.w);\n                        }\n                    }\n                    if (selected.box.h < 0) {\n                        if ((Mx.origin === 1) || (Mx.origin === 2)) {\n                            // Regular y\n                            selected.box.y = selected.box.y - selected.box.h;\n                            selected.box.h = Math.abs(selected.box.h);\n                        } else {\n                            // Inverted y\n                            selected.box.y = selected.box.y + selected.box.h;\n                            selected.box.h = Math.abs(selected.box.h);\n                        }\n                    }\n\n                    // Only issue box move if the box has moved\n                    const sevt = document.createEvent('Event');\n                    sevt.source = this;\n                    sevt.box = selected.box;\n                    sevt.action = evt.type;\n                    sevt.initEvent('boxmove', true, true);\n                    mx.dispatchEvent(Mx, sevt);\n                    evt.preventDefault();\n                    this.plot.redraw();\n                    return; // TODO should a boxmove also emit a boxselect?\n                } else {\n                    // Restore the original box x,y,w,h to avoid slight movement that doesn't cause boxmove\n                    // to change things\n                    selected.box.x = selected.orig_box.x;\n                    selected.box.y = selected.orig_box.y;\n                    selected.box.w = selected.orig_box.w;\n                    selected.box.h = selected.orig_box.h;\n                }\n\n                const selected_boxes = [selected.box];\n                if (this._clickTimer) {\n                    clearTimeout(this._clickTimer);\n                }\n\n                if ((selected_boxes.length > 0) && (this.options.enableSelect)) {\n                    // If a box is selected we need to stop other actions (i.e. unzoom)\n                    // that might be associated with the 'mup' event\n                    evt.preventDefault();\n                    allowDefault = false;\n                    this._clickTimer = setTimeout(() => {\n                        const sevt = document.createEvent('Event');\n                        sevt.source = this;\n                        sevt.boxes = selected_boxes;\n                        sevt.action = evt.type;\n                        sevt.which = evt.which;\n                        sevt.initEvent('boxselect', true, true);\n\n                        mx.dispatchEvent(Mx, sevt);\n\n                        this.plot.redraw();\n                    }, 200);\n                }\n            }\n            // After a click is finished, we no longer track the internal select state for move/drag\n            this._selected = undefined;\n            return allowDefault;\n        }\n\n        //////////////////////////////////////////////////////////////////////\n        // Implementation of Plugin API\n\n        /**\n         * Return the Plugin menu to be contributed to the SigPlot main menu.\n         */\n        menu() {\n            return {\n                text: \"Boxes...\",\n                menu: {\n                    title: \"BOXES\",\n                    items: [{\n                        text: \"Display\",\n                        checked: this.display(),\n                        style: \"checkbox\",\n                        handler: () => this.display(!this.display())\n                    }, {\n                        text: \"Enable Select\",\n                        checked: this.enableSelect(),\n                        style: \"checkbox\",\n                        handler: () => this.enableSelect(!this.enableSelect())\n                    }, {\n                        text: \"Enable Move\",\n                        checked: this.enableMove(),\n                        style: \"checkbox\",\n                        handler: () => this.enableMove(!this.enableMove())\n                    }, {\n                        text: \"Enable Resize\",\n                        checked: this.enableResize(),\n                        style: \"checkbox\",\n                        handler: () => this.enableResize(!this.enableResize())\n                    }, {\n                        text: \"Clear All\",\n                        handler: () => this.clearBoxes()\n                    }]\n                }\n            };\n        }\n\n        /**\n         * Refresh the plugin by drawing upon the plot canvas.\n         * \n         * @param {canvas} canvas \n         */\n        refresh(canvas) {\n            // Quick abort if we have nothing to do\n            if ((!this.options.display) || (this.boxes.length === 0)) {\n                return;\n            }\n\n            // Handy constants for short-hand access within refresh\n            const Gx = this.plot._Gx;\n            const Mx = this.plot._Mx;\n            const ctx = canvas.getContext(\"2d\");\n\n            if ((Gx.x_cut_press_on || Gx.y_cut_press_on)) {\n                return;\n            }\n\n            // Save off the current context\n            ctx.save();\n\n            // Clip all drawing to the plot area\n            ctx.beginPath();\n            ctx.rect(Mx.l, Mx.t, Mx.r - Mx.l, Mx.b - Mx.t);\n            ctx.clip();\n\n            // Draw the boxes themselves\n            //   Use for loop and variables outside of the loop scope\n            //   to ensure good performance across browsers the optimize poorly\n            let box;\n            let x, y, w, h;\n            let text_w;\n            let ii;\n            for (ii = 0; ii < this.boxes.length; ii++) {\n                box = this.boxes[ii];\n\n                if ((box.absolutePlacement === true) || (this.options.absolutePlacement === true)) {\n                    x = box.x + Mx.l;\n                    y = box.y + Mx.t;\n                    w = box.w;\n                    h = box.h;\n                } else {\n                    const rect = mx.real_box_to_pixel(this.plot._Mx, box.x, box.y, box.w, box.h);\n\n                    x = rect.ul.x;\n                    y = rect.ul.y;\n                    w = rect.w;\n                    h = rect.h;\n                }\n\n                ctx.strokeStyle = box.strokeStyle || this.options.strokeStyle || Mx.fg;\n                ctx.lineWidth = box.lineWidth || this.options.lineWidth;\n\n                // A highlighed box has a thicker line\n                if (box.highlight) {\n                    ctx.lineWidth += 2;\n                }\n\n                // If the line width is odd, add half a pixel offset so it renders\n                // cleanly\n                if (ctx.lineWidth % 2 === 1) {\n                    x += 0.5;\n                    y += 0.5;\n                }\n\n                // If the box needs to be filed, draw the fill first\n                if (box.fill || box.selected || this.options.fill) {\n                    ctx.globalAlpha = box.alpha || this.options.alpha;\n                    ctx.fillStyle = box.fillStyle || this.options.fillStyle || ctx.strokeStyle;\n                    ctx.fillRect(x, y, w, h);\n                    ctx.globalAlpha = 1;\n                }\n\n                // Now draw the box\n                ctx.strokeRect(x,\n                    y,\n                    w,\n                    h);\n\n                // Draw control points if necessary\n                if (this.options.enableResize) {\n                    ctx.strokeStyle = box.strokeStyle || this.options.strokeStyle || Mx.fg;\n                    ctx.fillStyle = box.strokeStyle || this.options.strokeStyle || Mx.fg;\n\n                    ctx.fillRect(x - 3, y - 3, 6, 6); // ul\n                    ctx.fillRect(x + w - 3, y - 3, 6, 6); // ur\n                    ctx.fillRect(x + w - 3, y + h - 3, 6, 6); // lr\n                    ctx.fillRect(x - 3, y + h - 3, 6, 6); // ll\n\n                    ctx.fillRect(x + (w / 2) - 3, y - 3, 6, 6); // um\n                    ctx.fillRect(x + (w / 2) - 3, y + h - 3, 6, 6); // lm\n                    ctx.fillRect(x - 3, y + (h / 2) - 3, 6, 6); // ml\n                    ctx.fillRect(x + w - 3, y + (h / 2) - 3, 6, 6); // mr\n                }\n\n                // Render text\n                if (box.text) {\n                    ctx.save();\n                    ctx.font = box.font || this.options.font || Mx.text_h + \"px Courier New, monospace\";\n                    ctx.globalAlpha = 1;\n                    ctx.textAlign = \"end\";\n                    ctx.fillStyle = box.strokeStyle || this.options.strokeStyle || Mx.fg;\n\n                    // the capital M is typically the same height and width\n                    let letter_w = ctx.measureText(\"M\").width;\n                    x = x - letter_w;\n                    y = y - (letter_w / 3);\n\n                    text_w = ctx.measureText(box.text).width;\n\n                    if ((x - text_w) < Mx.l) {\n                        x = (x + w);\n                    }\n\n                    ctx.fillText(box.text, x, y);\n                    ctx.restore();\n                }\n            }\n\n            ctx.restore();\n        }\n\n        dispose() {\n            this.plot.removeListener(\"mdown\", this._onMouseDown);\n            this.plot.removeListener(\"mmove\", this._onMouseMove);\n            this.plot.removeListener(\"mup\", this._onMouseClick);\n            this.plot.removeListener(\"mdblclick\", this._onMouseClick);\n            // listen for document mouse up to handle situations where\n            // a user is dragging the mouse out of the plot area\n\n            this.plot = undefined;\n            this.boxes = [];\n            if (this._clickTimer) {\n                clearTimeout(this._clickTimer);\n            }\n        }\n    }\n\n    module.exports = BoxesPlugin;\n\n}());\n", "/**\n * @license\n * File: sigplot.playback.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var common = require(\"./common\");\n\n    /**\n     * @constructor\n     * @param options\n     * @returns {PlaybackControlsPlugin}\n     */\n    var PlaybackControlsPlugin = function(options) {\n        this.options = {\n            display: true,\n            size: 25,\n            lineWidth: 2,\n            fillStyle: false\n        };\n        common.update(this.options, options);\n        this.state = \"paused\";\n        this.highlight = false;\n    };\n\n    PlaybackControlsPlugin.prototype = {\n        init: function(plot) {\n            this.plot = plot;\n\n            // Register for mouse events\n            var self = this;\n            var Mx = this.plot._Mx;\n            this.onmousemove = function(evt) {\n                if (Mx.warpbox) {\n                    return;\n                } // Don't highlight if a warpbox is being drawn\n\n                // Ignore if the mouse is outside of the control area\n                if (self.ismouseover(evt.xpos, evt.ypos)) {\n                    self.set_highlight(true);\n                } else {\n                    self.set_highlight(false);\n                }\n            };\n            this.plot.addListener(\"mmove\", this.onmousemove);\n\n            this.onmousedown = function(evt) {\n                if (Mx.warpbox) {\n                    return;\n                } // Don't handle if a warpbox is being drawn\n\n                // Ignore if the mouse is outside of the control area\n                if (self.ismouseover(evt.xpos, evt.ypos)) {\n                    evt.preventDefault();\n                }\n            };\n            // Prevents zooms and stuff from occuring\n            this.plot.addListener(\"mdown\", this.onmousedown);\n\n            this.onmouseclick = function(evt) {\n                if (Mx.warpbox) {\n                    return;\n                } // Don't handle if a warpbox is being drawn\n\n                // Ignore if the mouse is outside of the control area\n                if (self.ismouseover(evt.xpos, evt.ypos)) {\n                    self.toggle();\n                    evt.preventDefault();\n                }\n            };\n            this.plot.addListener(\"mclick\", this.onmouseclick);\n        },\n\n        set_highlight: function(ishighlight) {\n            if (ishighlight !== this.highlight) {\n                this.highlight = ishighlight;\n                this.plot.redraw();\n            }\n        },\n\n        toggle: function(new_state) {\n            if (!new_state) {\n                if (this.state === \"paused\") {\n                    new_state = \"playing\";\n                } else {\n                    new_state = \"paused\";\n                }\n            }\n\n            if (new_state !== this.state) {\n                if (this.plot) {\n                    var Mx = this.plot._Mx;\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('playbackevt', true, true);\n                    evt.state = new_state;\n                    var executeDefault = mx.dispatchEvent(Mx, evt);\n                    if (executeDefault) {\n                        this.state = new_state;\n                    }\n                    this.plot.redraw();\n                }\n            }\n        },\n\n        addListener: function(what, callback) {\n            var Mx = this.plot._Mx;\n            mx.addEventListener(Mx, what, callback, false);\n        },\n\n        removeListener: function(what, callback) {\n            var Mx = this.plot._Mx;\n            mx.removeEventListener(Mx, what, callback, false);\n        },\n\n        ismouseover: function(xpos, ypos) {\n            var position = this.position();\n            var distance_from_ctr = Math.pow(xpos - position.x, 2) + Math.pow(ypos - position.y, 2);\n            var R = this.options.size / 2;\n\n            return (distance_from_ctr < Math.pow(R, 2));\n        },\n\n        position: function() {\n            if (this.options.position) {\n                return this.options.position;\n            } else if (this.plot) {\n                var Mx = this.plot._Mx;\n                var R = this.options.size / 2;\n                return {\n                    x: Mx.l + R + this.options.lineWidth + 1,\n                    y: Mx.t + R + this.options.lineWidth + 1\n                };\n            } else {\n                return {\n                    x: null,\n                    y: null\n                };\n            }\n        },\n\n        refresh: function(canvas) {\n            if (!this.options.display) {\n                return;\n            }\n            var Gx = this.plot._Gx;\n            var Mx = this.plot._Mx;\n\n            var ctx = canvas.getContext(\"2d\");\n\n            ctx.lineWidth = this.options.lineWidth;\n            var R = this.options.size / 2;\n\n            if (this.highlight) {\n                ctx.lineWidth += 2;\n                R += 1;\n            }\n\n            var position = this.position();\n\n\n            ctx.beginPath();\n            ctx.arc(position.x, position.y, R - ctx.lineWidth, 0, Math.PI * 2, true);\n            ctx.closePath();\n\n            ctx.strokeStyle = this.options.strokeStyle || Mx.fg;\n            ctx.stroke();\n\n            if (this.options.fillStyle) {\n                ctx.fillStyle = this.options.fillStyle;\n                ctx.fill();\n            }\n\n            if (this.state === \"paused\") {\n                var p1 = {\n                    x: R * 0.8,\n                    y: R * 0.56\n                };\n                var p2 = {\n                    x: R * 1.45,\n                    y: R\n                };\n                var p3 = {\n                    x: R * 0.8,\n                    y: R * 1.45\n                };\n\n                p1.x += (position.x - R);\n                p2.x += (position.x - R);\n                p3.x += (position.x - R);\n                p1.y += (position.y - R);\n                p2.y += (position.y - R);\n                p3.y += (position.y - R);\n\n                ctx.beginPath();\n                ctx.moveTo(p1.x, p1.y);\n                ctx.lineTo(p2.x, p2.y);\n                ctx.lineTo(p3.x, p3.y);\n                ctx.closePath();\n\n                ctx.fillStyle = this.options.strokeStyle || Mx.fg;\n                ctx.fill();\n            } else {\n                ctx.lineCap = 'round';\n                ctx.lineWidth = Math.floor(Math.min(1, this.options.size / 8));\n\n                var p1 = {\n                    x: R * 0.8,\n                    y: R / 2\n                };\n                var p2 = {\n                    x: R * 0.8,\n                    y: R * 1.5\n                };\n                p1.x += (position.x - R);\n                p2.x += (position.x - R);\n                p1.y += (position.y - R);\n                p2.y += (position.y - R);\n\n                ctx.beginPath();\n                ctx.moveTo(p1.x, p1.y);\n                ctx.lineTo(p2.x, p2.y);\n                ctx.closePath();\n                ctx.stroke();\n\n                var p1 = {\n                    x: R + (R / 5),\n                    y: R / 2\n                };\n                var p2 = {\n                    x: R + (R / 5),\n                    y: R * 1.5\n                };\n                p1.x += (position.x - R);\n                p2.x += (position.x - R);\n                p1.y += (position.y - R);\n                p2.y += (position.y - R);\n\n                ctx.beginPath();\n                ctx.moveTo(p1.x, p1.y);\n                ctx.lineTo(p2.x, p2.y);\n                ctx.closePath();\n                ctx.stroke();\n            }\n\n            ctx.restore();\n        },\n\n        dispose: function() {\n            this.plot = undefined;\n            this.boxes = undefined;\n        }\n    };\n\n    module.exports = PlaybackControlsPlugin;\n\n}());\n", "/**\n * @license\n * File: sigplot.slider.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var common = require(\"./common\");\n\n    /**\n     * @memberOf sigplot\n     * @constructor\n     * @param options\n     * @returns {SliderPlugin}\n     */\n    var SliderPlugin = function(options) {\n        this.options = {\n            display: true,\n            style: {\n                lineWidth: 1,\n                lineCap: \"square\" //, strokeStyle: \"#FFFFFF\", textStyle: \"#FFFFFF\"\n            },\n            direction: \"vertical\", // \"vertical\",\"horizontal\",\"both\" \n            name: \"Slider\",\n            prevent_drag: false,\n            add_box: false, // add boxes around values\n            persistent_style: false, // highlights and/or boxes persist\n            slider_ID: 0 // each slider has a numerical int ID\n        };\n\n        common.update(this.options, options);\n        this.position = undefined;\n        this.location = undefined;\n        this.paired_slider = undefined;\n        this.name = this.options.name;\n\n    };\n\n    SliderPlugin.prototype = {\n        /** @lends SliderPlugin */\n        /**\n         * Initialize the plugin\n         */\n        init: function(plot) {\n            this.plot = plot;\n            var Mx = plot._Mx;\n\n            // Register for mouse events\n            var self = this;\n            this.onmousemove = function(evt) {\n                // Ignore if the slider isn't even visible\n                if (self.location === undefined) {\n                    return;\n                }\n\n                // Or if the user wants to prevent a drag operation\n                if (self.options.prevent_drag) {\n                    return;\n                }\n\n                // Ignore if the mouse is outside of the plot area\n                if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                    self.set_highlight(false);\n                    return;\n                }\n                if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                    self.set_highlight(false);\n                    return;\n                }\n\n                // If the mouse is close, \"highlight\" the line\n\n                var lineWidth = self.options.style.lineWidth;\n\n                // If we aren't dragging, then there is nothing else to do\n                if (!self.dragging) {\n                    if (Mx.warpbox) {\n                        return;\n                    } // Don't highlight if a warpbox is being drawn\n                    if (self.options.direction === \"vertical\") {\n                        if (Math.abs(self.location - evt.xpos) < (lineWidth + 5)) {\n                            self.set_highlight(true);\n                        } else {\n                            self.set_highlight(false);\n                        }\n                    } else if (self.options.direction === \"horizontal\") {\n                        if (Math.abs(self.location - evt.ypos) < (lineWidth + 5)) {\n                            self.set_highlight(true);\n                        } else {\n                            self.set_highlight(false);\n                        }\n                    } else if (self.options.direction === \"both\") {\n                        if (Math.abs(self.location.x - evt.xpos) < (lineWidth + 5) &&\n                            Math.abs(self.location.y - evt.ypos) < (lineWidth + 5)) {\n                            self.set_highlight(true);\n                        } else {\n                            self.set_highlight(false);\n                        }\n                    }\n                    return;\n                }\n\n                // If we are dragging, update the slider location\n                var pos = mx.pixel_to_real(Mx, evt.xpos, evt.ypos);\n                if (self.options.direction === \"vertical\") {\n                    self.location = evt.xpos;\n                    self.position = pos.x;\n                } else if (self.options.direction === \"horizontal\") {\n                    self.location = evt.ypos;\n                    self.position = pos.y;\n                } else if (self.options.direction === \"both\") {\n                    self.location.x = evt.xpos;\n                    self.position.x = pos.x;\n                    self.location.y = evt.ypos;\n                    self.position.y = pos.y;\n                }\n\n                // Refresh the plugin\n                self.plot.redraw();\n                // Prevent any other plot default action at this point\n                evt.preventDefault();\n            };\n            this.plot.addListener(\"mmove\", this.onmousemove);\n\n            this.onmousedown = function(evt) {\n                if (self.location === undefined) {\n                    return;\n                }\n\n                // Or if the user wants to prevent a drag operation\n                if (self.options.prevent_drag) {\n                    return;\n                }\n\n                if ((evt.xpos < Mx.l) || (evt.xpos > Mx.r)) {\n                    return;\n                }\n                if ((evt.ypos > Mx.b) || (evt.ypos < Mx.t)) {\n                    return;\n                }\n\n                if (evt.slider_drag) {\n                    return;\n                }\n\n                var lineWidth = self.options.style.lineWidth;\n\n                // TODO if multiple sliders are on the same position\n                // they will become stuck together and cannot be separated\n                if (self.options.direction === \"vertical\") {\n                    if (Math.abs(self.location - evt.xpos) < (lineWidth + 5)) {\n                        self.dragging = true;\n                        evt.slider_drag = true;\n                        evt.preventDefault();\n                    }\n                } else if (self.options.direction === \"horizontal\") {\n                    if (Math.abs(self.location - evt.ypos) < (lineWidth + 5)) {\n                        self.dragging = true;\n                        evt.slider_drag = true;\n                        evt.preventDefault();\n                    }\n                } else if (self.options.direction === \"both\") {\n                    if (Math.abs(self.location.x - evt.xpos) < (lineWidth + 5) &&\n                        Math.abs(self.location.y - evt.ypos) < (lineWidth + 5)) {\n                        self.dragging = true;\n                        evt.slider_drag = true;\n                        evt.preventDefault();\n                    }\n                }\n            };\n            this.plot.addListener(\"mdown\", this.onmousedown);\n\n            this.onmouseup = function(evt) {\n                if (!self.dragging) {\n                    return;\n                }\n\n                // the slider is handling this, so prevent default actions\n                evt.preventDefault();\n\n                // We are no longer dragging\n                self.dragging = false;\n\n                // Issue a slider tag event\n                var evt = document.createEvent('Event');\n                evt.source = self;\n                evt.initEvent('slidertag', true, true);\n\n                if (self.options.direction === \"both\") {\n                    evt.location = self.location ? JSON.parse(JSON.stringify(self.location)) : undefined;\n                    evt.position = self.position ? JSON.parse(JSON.stringify(self.position)) : undefined;\n                } else {\n                    evt.location = self.location;\n                    evt.position = self.position;\n                }\n\n                mx.dispatchEvent(Mx, evt);\n\n                // Issue a slider tag event\n                var evt = document.createEvent('Event');\n                evt.initEvent('sliderdrag', true, true);\n                if (self.options.direction === \"both\") {\n                    evt.location = self.location ? JSON.parse(JSON.stringify(self.location)) : undefined;\n                    evt.position = self.position ? JSON.parse(JSON.stringify(self.position)) : undefined;\n                } else {\n                    evt.location = self.location;\n                    evt.position = self.position;\n                }\n\n                mx.dispatchEvent(Mx, evt);\n            };\n            this.plot.addListener(\"mup\", this.onmouseup);\n        },\n\n        menu: function() {\n            var _display_handler = (function(self) {\n                return function() {\n                    self.options.display = !self.options.display;\n                    self.plot.redraw();\n                };\n            }(this));\n\n            var _center_handler = (function(self) {\n                return function() {\n                    var Mx = self.plot._Mx;\n                    var stk = Mx.stk[Mx.level];\n\n                    var xctr = ((stk.xmax - stk.xmin) / 2.0) + stk.xmin;\n                    var yctr = ((stk.ymax - stk.ymin) / 2.0) + stk.ymin;\n\n                    if (self.options.direction === \"vertical\") {\n                        self.set_position(xctr);\n                    } else if (self.options.direction === \"horizontal\") {\n                        self.set_position(yctr);\n                    } else if (self.options.direction === \"both\") {\n                        self.set_position({\n                            x: xctr,\n                            y: yctr\n                        });\n                    }\n                };\n            }(this));\n\n            return {\n                text: this.name + \"...\",\n                menu: {\n                    title: \"SLIDER\",\n                    items: [{\n                        text: \"Display\",\n                        checked: this.options.display,\n                        style: \"checkbox\",\n                        handler: _display_handler\n                    }, {\n                        text: \"Center\",\n                        handler: _center_handler\n                    }]\n                }\n            };\n        },\n\n        addListener: function(what, callback) {\n            var Mx = this.plot._Mx;\n            var self = this;\n            var wrapped_cb = function(evt) {\n                if (evt.source === self) {\n                    return callback(evt);\n                }\n            };\n            mx.addEventListener(Mx, what, wrapped_cb, false);\n        },\n\n        removeListener: function(what, callback) {\n            var Mx = this.plot._Mx;\n            mx.removeEventListener(Mx, what, callback, false);\n        },\n\n        pair: function(other_slider) {\n            if (!other_slider) {\n                this.paired_slider = null;\n                return;\n            }\n\n            if (other_slider.direction !== this.direction) {\n                throw \"paired sliders must use the same direction setting\";\n            }\n            this.paired_slider = other_slider;\n        },\n\n        set_highlight: function(ishighlight) {\n            if (ishighlight !== this.highlight) {\n                this.highlight = ishighlight;\n                this.plot.redraw();\n            }\n        },\n\n        set_position: function(position) {\n            if (this.dragging) {\n                return;\n            }\n            if (this.options.direction === \"both\") { // Object comparison\n                if (this.position !== undefined && this.position.x === position.x && this.position.y === position.y) {\n                    return;\n                }\n            } else {\n                if (this.position === position) {\n                    return;\n                }\n            }\n\n            this.set_highlight(false); // cheat any set position clears the highlight\n\n            var Mx = this.plot._Mx;\n            if (this.options.direction === \"both\") {\n                this.position = position ? JSON.parse(JSON.stringify(position)) : undefined;\n            } else {\n                this.position = position;\n            }\n\n            var pxl;\n            if (this.options.direction === \"both\") {\n                pxl = mx.real_to_pixel(Mx, this.position.x, this.position.y);\n            } else {\n                pxl = mx.real_to_pixel(Mx, this.position, this.position);\n            }\n\n            if (this.options.direction === \"vertical\") {\n                this.location = pxl.x;\n            } else if (this.options.direction === \"horizontal\") {\n                this.location = pxl.y;\n            } else if (this.options.direction === \"both\") {\n                this.location = {\n                    x: pxl.x,\n                    y: pxl.y\n                };\n            }\n\n            // Issue a slider tag event\n            var evt = document.createEvent('Event');\n            evt.initEvent('slidertag', true, true);\n            if (this.options.direction === \"both\") { // If both, expecting position to be an object\n                evt.location = this.location ? JSON.parse(JSON.stringify(this.location)) : undefined;\n                evt.position = this.position ? JSON.parse(JSON.stringify(this.position)) : undefined;\n            } else { // vertical or horizontal\n                evt.location = this.location;\n                evt.position = this.position;\n            }\n\n            mx.dispatchEvent(Mx, evt);\n\n            this.plot.redraw();\n        },\n\n        set_location: function(location) {\n            if (this.dragging) {\n                return;\n            }\n\n            if (this.options.direction === \"both\") {\n                if (this.location !== undefined && this.location.x === location.x && this.location.y === location.y) {\n                    return;\n                }\n            } else {\n                if (this.location === location) {\n                    return;\n                }\n            }\n            this.set_highlight(false); // cheat any set location clears the highlight\n\n            var Mx = this.plot._Mx;\n\n            if (this.options.direction === \"both\") {\n                this.location = location ? JSON.parse(JSON.stringify(location)) : undefined;\n            } else {\n                this.location = location;\n            }\n\n            var pos;\n            if (this.options.direction === \"both\") {\n                pos = mx.pixel_to_real(Mx, location.x, location.y);\n            } else {\n                pos = mx.pixel_to_real(Mx, location, location);\n            }\n\n            if (this.options.direction === \"vertical\") {\n                this.position = pos.x;\n            } else if (this.options.direction === \"horizontal\") {\n                this.position = pos.y;\n            } else if (this.options.direction === \"both\") {\n                this.position = {\n                    x: pos.x,\n                    y: pos.y\n                };\n            }\n\n            // Issue a slider tag event\n            var evt = document.createEvent('Event');\n            evt.initEvent('slidertag', true, true);\n\n            if (this.options.direction === \"both\") {\n                evt.location = this.location ? JSON.parse(JSON.stringify(this.location)) : undefined;\n                evt.position = this.position ? JSON.parse(JSON.stringify(this.position)) : undefined;\n            } else {\n                evt.location = this.location;\n                evt.position = this.position;\n            }\n            mx.dispatchEvent(Mx, evt);\n            this.plot.redraw();\n        },\n\n        get_position: function() { // In real units\n            return this.position;\n        },\n\n        get_location: function() { // Pixels\n            return this.location;\n        },\n\n        refresh: function(canvas) {\n            if (!this.options.display) {\n                return;\n            }\n            if (this.position === undefined) {\n                return;\n            }\n\n            var Mx = this.plot._Mx;\n            var ctx = canvas.getContext(\"2d\");\n\n            ctx.lineWidth = this.options.style.lineWidth;\n            ctx.lineCap = this.options.style.lineCap;\n            ctx.strokeStyle = (this.options.style.strokeStyle !== undefined) ? this.options.style.strokeStyle : Mx.fg;\n\n            if (this.dragging || this.highlight) {\n                ctx.lineWidth = Math.ceil(ctx.lineWidth * 1.2);\n            }\n\n            var pxl;\n            if (this.options.direction === \"both\") {\n                pxl = mx.real_to_pixel(Mx, this.position.x, this.position.y);\n            } else {\n                pxl = mx.real_to_pixel(Mx, this.position, this.position);\n            }\n            if (this.options.direction === \"vertical\") {\n                if ((pxl.x < Mx.l) || (pxl.x > Mx.r)) {\n                    return;\n                }\n                this.location = pxl.x;\n            } else if (this.options.direction === \"horizontal\") {\n                if ((pxl.y < Mx.t) || (pxl.y > Mx.b)) {\n                    return;\n                }\n                this.location = pxl.y;\n            } else if (this.options.direction === \"both\") {\n                if ((pxl.x < Mx.l) || (pxl.x > Mx.r) ||\n                    ((pxl.y < Mx.t) || (pxl.y > Mx.b))) {\n                    return;\n                }\n                this.location.x = pxl.x;\n                this.location.y = pxl.y;\n            }\n\n            if (this.options.direction === \"vertical\") {\n                ctx.beginPath();\n                ctx.moveTo(this.location + 0.5, Mx.t);\n                ctx.lineTo(this.location + 0.5, Mx.b);\n                ctx.stroke();\n            } else if (this.options.direction === \"horizontal\") {\n                ctx.beginPath();\n                ctx.moveTo(Mx.l, this.location + 0.5);\n                ctx.lineTo(Mx.r, this.location + 0.5);\n                ctx.stroke();\n            } else if (this.options.direction === \"both\") {\n                // Horizontal portion\n                ctx.beginPath();\n                ctx.moveTo(Mx.l, this.location.y + 0.5);\n                ctx.lineTo(Mx.r, this.location.y + 0.5);\n                ctx.closePath();\n\n                // Vertical portion\n                ctx.moveTo(this.location.x + 0.5, Mx.t);\n                ctx.lineTo(this.location.x + 0.5, Mx.b);\n                ctx.stroke();\n            }\n\n            // Show extra information while dragging or highlighted or if the user wants persistent highlights\n            if (this.dragging || this.highlight || this.options.persistent_style) {\n                var overlap_adjustment = 2 * Mx.text_h * (this.options.slider_ID);\n                if (this.options.direction === \"vertical\") {\n                    ctx.textBaseline = \"alphabetic\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = (this.options.style.textStyle !== undefined) ? this.options.style.textStyle : Mx.fg;\n                    ctx.font = Mx.font.font;\n                    var text = mx.format_g(this.position, 6, 3, true).trim();\n                    var text_w = ctx.measureText(text).width;\n                    if ((this.location + 2 * text_w) > Mx.r) {\n                        ctx.textAlign = \"right\";\n                        ctx.fillText(text, this.location - 15, Mx.t + 40 + overlap_adjustment);\n                    } else {\n                        ctx.fillText(text, this.location + 15, Mx.t + 40 + overlap_adjustment);\n                    }\n\n\n                    if (this.options.add_box) {\n                        // Draw a box around the value\n\n                        if ((this.location + 2 * text_w) > Mx.r) {\n                            ctx.rect(this.location - 2 * text_w, Mx.t + 20 + overlap_adjustment, 2 * text_w, 2 * Mx.text_h);\n                            ctx.strokeStyle = this.options.style.strokeStyle;\n                            ctx.stroke();\n                        } else {\n                            ctx.rect(this.location + 0.5, Mx.t + 20 + overlap_adjustment, 2 * text_w, 2 * Mx.text_h);\n                            ctx.strokeStyle = this.options.style.strokeStyle;\n                            ctx.stroke();\n                        }\n\n                    }\n                } else if (this.options.direction === \"horizontal\") {\n                    ctx.textBaseline = \"alphabetic\";\n                    ctx.textAlign = \"left\";\n                    ctx.fillStyle = (this.options.style.textStyle !== undefined) ? this.options.style.textStyle : Mx.fg;\n                    ctx.font = Mx.font.font;\n                    var text = mx.format_g(this.position, 6, 3, true).trim();\n                    var text_w = ctx.measureText(text).width;\n                    overlap_adjustment = 2 * text_w * (this.options.slider_ID);\n                    if ((this.location - 2 * Mx.text_h) > Mx.t) {\n                        ctx.fillText(text, Mx.l + 20 + overlap_adjustment, this.location - 5);\n                    } else {\n                        ctx.fillText(text, Mx.l + 20 + overlap_adjustment, this.location + 5 + Mx.text_h);\n\n                    }\n\n                    if (this.options.add_box) {\n                        // Draw a box around the value\n\n                        if ((this.location - 2 * Mx.text_h) > Mx.t) {\n                            ctx.rect(Mx.l + 15 + overlap_adjustment, this.location - 2 * Mx.text_h, 2 * text_w, 2 * Mx.text_h);\n                            ctx.strokeStyle = this.options.style.strokeStyle;\n                            ctx.stroke();\n                        } else {\n                            ctx.rect(Mx.l + 15 + overlap_adjustment, this.location, 2 * text_w, 2 * Mx.text_h);\n                            ctx.strokeStyle = this.options.style.strokeStyle;\n                            ctx.stroke();\n                        }\n                    }\n\n                } else if (this.options.direction === \"both\") {\n                    // TODO\n                }\n\n                if (this.paired_slider) {\n                    if (this.options.direction === \"vertical\") {\n                        var delta = this.position - this.paired_slider.position;\n                        var locdelta = this.location - this.paired_slider.location;\n\n                        var ypos = Mx.t + Math.round((Mx.b - Mx.t) / 2);\n                        mx.textline(Mx, this.location, ypos, this.paired_slider.location, ypos, {\n                            mode: \"dashed\",\n                            on: 3,\n                            off: 3\n                        });\n\n                        ctx.textBaseline = \"alphabetic\";\n                        ctx.textAlign = \"center\";\n                        ctx.fillStyle = (this.options.style.textStyle !== undefined) ? this.options.style.textStyle : Mx.fg;\n                        ctx.font = Mx.font.font;\n                        var text = mx.format_g(delta, 6, 3, true);\n                        ctx.fillText(text, this.location - Math.round(locdelta / 2), ypos - 5);\n\n                    } else if (this.options.direction === \"horizontal\") {\n                        var delta = this.position - this.paired_slider.position;\n                        var locdelta = this.location - this.paired_slider.location;\n\n                        var xpos = Mx.l + Math.round((Mx.r - Mx.l) / 2);\n                        mx.textline(Mx, xpos, this.location, xpos, this.paired_slider.location, {\n                            mode: \"dashed\",\n                            on: 3,\n                            off: 3\n                        });\n\n                        ctx.textBaseline = \"alphabetic\";\n                        ctx.textAlign = \"left\";\n                        ctx.fillStyle = (this.options.style.textStyle !== undefined) ? this.options.style.textStyle : Mx.fg;\n                        ctx.font = Mx.font.font;\n                        var text = mx.format_g(delta, 6, 3, true);\n                        ctx.fillText(text, xpos + 5, this.location - Math.round(locdelta / 2));\n                    } else if (this.options.direction === \"both\") {\n                        // TODO\n                    }\n                }\n            }\n        },\n\n        dispose: function() {\n            this.plot.removeListener(\"mmove\", this.onmousemove);\n            document.removeEventListener(\"mouseup\", this.onmouseup, false);\n            this.plot = undefined;\n            this.position = undefined;\n        }\n    };\n\n    module.exports = SliderPlugin;\n\n}());\n", "/**\n * @license\n * File: sigplot.js\n * Copyright (c) 2012-2017, LGS Innovations Inc., All rights reserved.\n *\n * This file is part of SigPlot.\n *\n * Licensed to the LGS Innovations (LGS) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  LGS licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*jslint nomen: true, browser: true, devel: true */\n\n/* global module */\n/* global require */\n\n(function() {\n\n    var version = \"version-PLACEHOLDER\";\n\n    var _ = require(\"underscore\");\n    var Spinner = require(\"spin\");\n    var common = require(\"./common\");\n    var sigfile = require(\"sigfile\");\n    var bluefile = sigfile.bluefile;\n    var matfile = sigfile.matfile;\n    var m = require(\"./m\");\n    var mx = require(\"./mx\");\n    var Layer1D = require(\"./sigplot.layer1d\");\n    var Layer2D = require(\"./sigplot.layer2d\");\n    var Layer1DSDS = require(\"./sigplot.layer1dSDS\");\n    var Layer2DSDS = require(\"./sigplot.layer2dSDS\");\n    var Plugin = require(\"./sigplot.plugin\");\n    var AccordionPlugin = require(\"./sigplot.accordion\");\n    var AnnotationPlugin = require(\"./sigplot.annotations\");\n    var BoxesPlugin = require(\"./sigplot.boxes\");\n    var PlaybackControlsPlugin = require(\"./sigplot.playback\");\n    var SliderPlugin = require(\"./sigplot.slider\");\n\n\n    function sigplot(element, options) {\n        if (!(this instanceof sigplot)) {\n            return new sigplot.Plot(element, options);\n        }\n    }\n\n    sigplot.bluefile = bluefile;\n    sigplot.matfile = matfile;\n    sigplot.m = m;\n    sigplot.mx = mx;\n    sigplot.Layer1D = Layer1D;\n    sigplot.Layer2D = Layer2D;\n    sigplot.version = version;\n\n    /**\n     * Text of the keypress help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var KEYPRESS_HELP = \"Keypress Table:\\n\" +\n        \"--------------\\n\" +\n        \"?       - Main help box.\\n\" +\n        \"A       - Toggle display x,y readouts:\\n\" +\n        \"          (absc) -> (index) -> (1/absc) -> (time).\\n\" +\n        \"B       - Toggle LM Drag Mode:\\n\" +\n        \"          (box) -> (horizontal) -> (vertical).\\n\" +\n        \"C       - Toggle controls.\\n\" +\n        \"K       - Show Marker.\\n\" +\n        \"L       - Toggle legend.\\n\" +\n        \"M       - Pops up main menu\\n\" +\n        \"R       - Toggle display specs (x/y readout)\\n\" +\n        \"S       - Toggle display specs and axes.\\n\" +\n        \"T       - Popup box with timecode value at mouse.\\n\" +\n        \"X       - In 1D mode, popup box with X value at mouse.\\n\" +\n        \"        - In 2D mode, toggle x-cut display.\\n\" +\n        \"Y       - In 1D mode, popup box with Y value at mouse.\\n\" +\n        \"        - In 2D mode, toggle y-cut display.\\n\" +\n        \"P       - In 2D mode, displays p-cuts along side and bottom.\\n\" +\n        \"F       - Toggle fullscreen.\\n\" +\n        \"Cntrl+I - Invert colors.\";\n\n    /**\n     * Text of the main help dialog.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var MAIN_HELP = \"To zoom, press and drag the left mouse (LM) over the region of interest and release. \" +\n        \"To unzoom, press right mouse (RM).  Press the middle mouse (MM) button or press the 'M' key to open the main menu.\" +\n        \"View the function of all keypresses by selecting 'Keypress Info' from the main menu.\";\n\n    /**\n     * Options used when displaying the spinner.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var SPINNER_OPTS = {\n        lines: 13, // The number of lines to draw\n        length: 7, // The length of each line\n        width: 4, // The line thickness\n        radius: 10, // The radius of the inner circle\n        corners: 1, // Corner roundness (0..1)\n        rotate: 0, // The rotation offset\n        color: '#FFF', // #rgb or #rrggbb\n        speed: 1, // Rounds per second\n        trail: 60, // Afterglow percentage\n        shadow: false, // Whether to render a shadow\n        hwaccel: false, // Whether to use hardware acceleration\n        className: 'spinner', // The CSS class to assign to the spinner\n        zIndex: 2e9, // The z-index (defaults to 2000000000)\n        top: 'auto', // Top position relative to parent in px\n        left: 'auto' // Left position relative to parent in px\n    };\n\n    /**\n     * Attempts basic checks to determine if the browser is compatible with\n     * sigplot.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    sigplot.browserIsCompatible = function browserIsCompatible() {\n        // We need a Canvas\n        var test_canvas = document.createElement('canvas');\n        var hascanvas = (test_canvas.getContext) ? true : false;\n\n        // We need ArrayBuffer\n        var hasarraybuf = (\"ArrayBuffer\" in window);\n\n        // File and FileReader are optional...and only\n        // required if the user wants to plot local files\n        return (hascanvas && hasarraybuf);\n    };\n\n\n\n    /**\n     * Construct and render a plot.\n     *\n     * @memberOf sigplot\n     * @constructor\n     *\n     * @example plot = new sigplot.Plot(document.getElementById('plot'), {[options]});\n     *\n     * @param element\n     *            a 'div' DOM element\n     * @param [options]\n     *            Key-value pairs whose values alter the behavior of the plot.\n     *\n     * @param {String}\n     *            options.cmode the plot rendering mode \"IN\" = Index, \"AB\" =\n     *            Abscissa (both of these, along with \"__\" can be added as prefixes to the other modes),\n     *            \"MA\", \"Magnitude\" = Magnitude, \"PH\", \"Phase\" = Phase, \"RE\", \"Real\" = Real,\n     *            \"IM\",\"Imaginary\" = Imaginary, \"LO\", \"D1\", \"10*log10\" = 10*log, \"L2\" or \"D2\"\n     *            , \"20*log10\" = 20*log, \"RI\", \"Real/Imag\", \"Imag/Real\",\"IR\" = Real vs. Imaginary\n     *\n     * @param {String}\n     *            options.phunits the phase units \"D\" = Degrees, \"R\" = Radians,\n     *            \"C\" = Cycles\n     *\n     * @param {Boolean}\n     *            options.cross display cross hairs on the plot\n     *\n     * @param {Boolean}\n     *            options.nogrid hide the background grid\n     *\n     * @param {Boolean}\n     *            options.legend set to false to hide the legend\n     *\n     * @param {Boolean}\n     *            options.no_legend_button set to true to hide the legend button\n     *\n     * @param {Boolean}\n     *            options.nopan disable panning on the plot\n     *\n     * @param {Boolean}\n     *            options.nomenu disable the middle-click menu\n     *\n     * @param {Boolean}\n     *            options.nospec hide all plot specification displays\n     *\n     * @param {Boolean}\n     *            options.noxaxis hide the x-axis\n     *\n     * @param {Boolean}\n     *            options.noyaxis hide the y-axis\n     *\n     * @param {Boolean}\n     *            options.noreadout hide the plot readout area\n     *\n     * @param {Boolean}\n     *            options.nodragdrop prevent file drag drop\n     *\n     * @param {Number}\n     *            options.scroll_time_interval set the time interval for scrolling\n     *\n     * @param {Boolean}\n     *            options.index use the data-index in the X axis\n     *\n     * @param {Number}\n     *            options.autox auto-scaling settings for X axis !!!!CHANGED\n     *\n     * @param {Number}\n     *            options.xmin the minimum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xmax the maximum range to display on the X axis\n     *\n     * @param {Number}\n     *            options.xlab the units that X-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.xlabel function or string for custom X-axis label\n     *\n     * @param {Number}\n     *            options.xdiv the number of divisions on the X axis\n     *\n     * @param {Number}\n     *            options.xcnt configure the mtag mouse controls 0 = Off, 1\n     *            (default) = LM Click, 2 = Continuous\n     *\n     * @param {String}\n     *            options.rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" (default) = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area\n     *\n     * @param {String}\n     *            options.rightclick_rubberbox_mode controls the behavior of the rubberbox\n     *            \"zoom\" = zoom to the selected area \"box\" = trigger\n     *            an mtag action on the selected area.  By default is null to disable\n     *            right-click boxes\n     *\n     * @param {Number}\n     *            options.line the line type to draw 0 = None, 1 = Verticals, 2 =\n     *            Horizontals, 3 (default) = Connecting\n     *\n     * @param {Number}\n     *            options.autoy auto-scaling settings for Y axis !!!! CHANGED\n     *            0 = Fix , 1 = Auto Min , 2 = Auto Max, 3 = Full Auto\n     *\n     * @param {Number}\n     *            options.ylab the units that Y-axis uses (see m.UNITS)\n     *\n     * @param {Object}\n     *            options.ylabel function or string for custom Y-axis label\n     *\n     * @param {Number}\n     *            options.ymin the minimum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ymax the maximum range to display on the Y axis\n     *\n     * @param {Number}\n     *            options.ydiv the number of divisions on the Y axis\n     *\n     * @param {Number}\n     *            options.zmin the minimum range to display on the Z axis\n     *\n     * @param {Number}\n     *            options.zmax the maximum range to display on the Z axis\n     *\n     * @param {Boolean}\n     *            options.yinv invert the y-axis\n     *\n     * @param {String}\n     *            options.colors.fg the foreground color as a CSS color\n     *\n     * @param {String}\n     *            options.colors.bg the background color as a CSS color\n     *\n     * @param {Boolean}\n     *            options.xi invert the foreground/background colors\n     *\n     * @param {Boolean}\n     *            options.all show all of the data on the plot instead of just\n     *            one buffer\n     *\n     * @param {Boolean}\n     *            options.expand auto-scale the plot based on all the data (when\n     *            combined with the all option)\n     *\n     * @param {Number}\n     *            options.origin 1 = x1:xmin, x2:xmax, y1:ymax, y2:ymin\n     *            (default), 2 = x1:xmax, x2:xmin, y1:ymax, y2:ymin (x\n     *            inverted), 3 = x1:xmax, x2:xmin, y1:ymin, y2:ymax (x & y\n     *            inverted), 4 = x1:xmin, x2:xmax, y1:ymin, y2:ymax (y inverted)\n     *\n     * @param {Number}\n     *            options.bufmax the buffer size to use\n     *\n     * @param {Boolean}\n     *            options.nokeypress disable key press actions\n     *\n     * @param options.font_family\n     *            the font family to use for text rendered on the plot.  Monospace\n     *            font will generally work best.\n     *\n     * @param {Boolean}\n     *            options.font_scaled mimic the MIDAS plotting behaviour where the\n     *            plot font-size is scaled relative to the width of the\n     *\n     * @param {Boolean}\n     *            options.font_width sets the font width (default=8); if scaled_font\n     *            is set to true, then the font width will be the minimum of font_width\n     *            or plot width/64.\n     *\n     * @param {Number}\n     *            options.panxpad\n     *            Pad the x-axis panning with this amount.  If a string in the form of\n     *            \"XX%\" the padding will be a percentage.\n     *\n     * @param {Number}\n     *            options.panypad\n     *            Pad the y-axis panning with this amount.  If a string in the form of\n     *            \"XX%\" the padding will be a percentage.\n     *\n     * @returns {Plot}\n     */\n    var Plot = function(element, options) {\n        if (!sigplot.browserIsCompatible()) {\n            throw \"Browser is not compatible\";\n        }\n        // Register with the Mx structure - Step #4\n        this._Mx = mx.open(element);\n        var Mx = this._Mx;\n\n        this._Gx = new GX();\n        this._Gx.parent = element;\n\n        // Variable which stores state of mouse position relative to the canvas\n        this.mouseOnCanvas = false;\n\n        if (!options) {\n            options = {};\n        }\n\n        plot_init(this, options);\n\n        this.mimicListeners = {\n            other: null,\n            listeners: {\n                zoom: null,\n                unzoom: null,\n                xpan: null,\n                ypan: null\n            }\n        };\n\n        this._refresh(); // Draw immediately\n\n        this.onmousemove = (function(plot) {\n            return function(e) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                var rect = e.target.getBoundingClientRect();\n                var xpos = (e.offsetX === undefined) ? (e.pageX - rect.left - window.scrollX) : e.offsetX;\n                var ypos = (e.offsetX === undefined) ? (e.pageY - rect.top - window.scrollY) : e.offsetY;\n\n                // var xpos = (e.offsetX === undefined) ? e.layerX : e.offsetX;\n                // var ypos = (e.offsetY === undefined) ? e.layerY : e.offsetY;\n                var re = pixel_to_real(plot, xpos, ypos);\n                Gx.retx = re.x;\n                Gx.rety = re.y;\n\n                if (Mx.widget) {\n                    return;\n                }\n                display_specs(plot);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mmove', true, true);\n                evt.originalEvent = e;\n                evt.xpos = xpos;\n                evt.ypos = ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return;\n                }\n\n                // The crosshair logic in websigplot is different\n                // because we need to clear the previous position\n                // of the line (via XOR) and then draw the new line\n                //\n                // The Mx.xpos and Mx.ypos may have already been\n                // updated to their new location so we need to store\n                // the crosshair position in the Gx structure\n                if (Gx.cross) {\n                    if (Mx.warpbox) {\n                        // during zoom operations undraw the crosshairs\n                        if (Gx.cross_xpos !== undefined) {\n                            mx.rubberline(Mx, Gx.cross_xpos, Mx.t,\n                                Gx.cross_xpos, Mx.b);\n                        }\n                        if (Gx.cross_ypos !== undefined) {\n                            mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                                Gx.cross_ypos);\n                        }\n                        Gx.cross_xpos = undefined;\n                        Gx.cross_ypos = undefined;\n                    } else {\n                        if (plot.mouseOnCanvas) {\n                            draw_crosshairs(plot);\n                            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on) {\n                                    draw_p_cuts(plot);\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (Gx.cntrls === 2) {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    evt.originalEvent = e;\n                    evt.x = Gx.retx;\n                    evt.y = Gx.rety;\n                    evt.xpos = xpos;\n                    evt.ypos = ypos;\n                    mx.dispatchEvent(Mx, evt);\n                }\n            };\n        }(this));\n\n        this.throttledOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.onmousemove);\n\n        mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n\n        this.onmouseout = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                if (plot.mouseOnCanvas) {\n                    plot.mouseOnCanvas = false;\n\n                    if (Gx.autohide_readout) {\n                        display_specs(plot);\n                    }\n                    if (Gx.autohide_panbars) {\n                        draw_panbars(plot);\n                    }\n                    if (Mx.prompt) {\n                        Mx.prompt.input.enableBlur();\n                    }\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseout\", this.onmouseout, false);\n\n        this.onmouseover = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n                plot.mouseOnCanvas = true;\n                if (Gx.autohide_panbars) {\n                    draw_panbars(plot);\n                }\n                if (Mx.prompt) {\n                    Mx.prompt.input.disableBlur();\n                }\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mouseover\", this.onmouseover, false);\n\n        this.onmousedown = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse down on the canvas should never do a browser default action\n\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                    Mx.widget = null;\n                    plot.refresh();\n                }\n\n                Gx.mouseClickActive = true;\n\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdown', true, true);\n                evt.originalEvent = event;\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n                if (!executeDefault) {\n                    return false;\n                }\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar = null;\n                        var position = null;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        if (event.which === 2) {\n                            position = {\n                                x: Mx.xpos,\n                                y: Mx.ypos\n                            };\n                            if ((scrollbar !== undefined) && (onScrollbar(position, scrollbar))) {\n                                // Only show menu if on the scrollbar itself\n                                sigplot_scrollScaleMenu(plot, inPan.command);\n                            }\n                        } else {\n                            if (inPan.command !== ' ') {\n                                position = {\n                                    x: Mx.xpos,\n                                    y: Mx.ypos\n                                };\n                                if (!onScrollbar(position, scrollbar) && event.which === 1) { // Left-clicking\n                                    // not on a\n                                    // scrollbar -\n                                    // handle\n                                    // typical pan\n                                    pan(plot, inPan.command, 0, event); // Execute\n                                    // the\n                                    // first\n                                    // pan\n                                    var repeatPan = function() {\n                                        if (!onScrollbar({\n                                                \"x\": Mx.xpos,\n                                                \"y\": Mx.ypos\n                                            }, scrollbar)) {\n                                            pan(plot, inPan.command, 0, event);\n                                            // execute\n                                            // a\n                                            // pan\n                                            // on\n                                            // every\n                                            // interval\n                                        } else {\n                                            // stop\n                                            // panning\n                                            // once you\n                                            // hit the\n                                            // scrollbar\n                                            if (Gx.stillPanning) {\n                                                window.clearInterval(Gx.stillPanning);\n                                                Gx.repeatPanning = undefined;\n                                            }\n                                        }\n                                    };\n\n                                    // Make scrolling smooth, the longer initial prevents\n                                    // a single click from counting twice\n                                    Gx.stillPanning = window.setTimeout(\n\n                                        function() {\n                                            Gx.repeatPanning = window.setInterval(repeatPan, 50);\n                                        }, 250);\n                                }\n                            }\n                        }\n                    }\n                } else { // Mouse not in a pan region, handle other cases\n                    if (event.which === 1 || event.which === 3) {\n                        var lButtonPressed = false;\n                        if (Gx.legendBtnLocation) {\n                            lButtonPressed = coordsInRectangle(Mx.xpos,\n                                Mx.ypos, Gx.legendBtnLocation.x,\n                                Gx.legendBtnLocation.y,\n                                Gx.legendBtnLocation.width,\n                                Gx.legendBtnLocation.height);\n                        }\n\n                        // a variable to hold the legend y positon of each layer\n                        if (Gx.legend) {\n                            var legendPos = get_legend_pos(plot);\n                            var layerheight = legendPos.height / Gx.lyr.length;\n\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if ((legendPos.x <= Mx.xpos) && ((legendPos.x + legendPos.width) >= Mx.xpos) &&\n                                    ((legendPos.y <= Mx.ypos)) && (legendPos.y + layerheight) >= Mx.ypos) {\n                                    //find a way to pull up the menu\n                                    Mx.mouseUpLatch = true;\n                                    sigplot_legend_menu(plot, i);\n                                    return false;\n                                }\n                                legendPos.y += layerheight;\n                            }\n                        }\n\n                        // If we have a large colorbar, we also have buttons:\n                        if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                            if (event.which === 1 || event.which === 3) {\n                                var mouse_x = Mx.xpos;\n                                var mouse_y = Mx.ypos;\n\n                                // Find vertex positions of top and bottom buttons\n                                var top_x1 = Gx.cbb_top_x1;\n                                var top_y1 = Gx.cbb_top_y1;\n                                var top_x2 = top_x1 + Gx.cbb_width;\n                                var top_y2 = top_y1;\n                                var top_x3 = top_x1 + (1 / 2) * Gx.cbb_width;\n                                var top_y3 = top_y1 - Gx.cbb_height;\n\n                                var topButtonPressed = coordsInTriangle(mouse_x, mouse_y, top_x1, top_y1, top_x2, top_y2, top_x3, top_y3);\n                                //console.log(\"Top \", topButtonPressed);\n\n                                if (topButtonPressed) {\n                                    var cur_cmap = Gx.cmap;\n                                    plot.get_layer(0).img = undefined;\n                                    var current_map = m.Mc.colormap[cur_cmap];\n\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos += 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    //Gx.zoff += (1/10)*(Gx.zmax - Gx.zmin);\n                                    plot.refresh();\n                                }\n\n                                // bottom\n                                var bot_x1 = Gx.cbb_bot_x1;\n                                var bot_y1 = Gx.cbb_bot_y1;\n                                var bot_x2 = bot_x1 + Gx.cbb_width;\n                                var bot_y2 = bot_y1;\n                                var bot_x3 = bot_x1 + (1 / 2) * Gx.cbb_width;\n                                var bot_y3 = bot_y1 + Gx.cbb_height;\n\n                                var botButtonPressed = coordsInTriangle(mouse_x, mouse_y, bot_x1, bot_y1, bot_x2, bot_y2, bot_x3, bot_y3);\n\n                                if (botButtonPressed) {\n                                    //Gx.zoff -= (1/10)*(Gx.zmax - Gx.zmin);\n                                    var cur_cmap = Gx.cmap;\n                                    var current_map = m.Mc.colormap[cur_cmap];\n                                    plot.get_layer(0).img = undefined;\n                                    for (var i = 0; i < current_map.colors.length; i++) {\n                                        current_map.colors[i].pos -= 5.0;\n                                    }\n                                    mx.colormap(Mx, current_map.colors, 16);\n                                    plot.refresh();\n                                }\n\n                            }\n\n                        }\n\n                        if (lButtonPressed) {\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else {\n                            display_specs(plot);\n\n                            // Styles for rubberbox\n                            var zoom_style = {\n                                opacity: 0,\n                                return_value: \"zoom\"\n                            };\n\n                            var select_style = {\n                                opacity: 0.4,\n                                fill_color: Mx.hi,\n                                return_value: \"select\"\n                            };\n\n                            if (event.which === 1) {\n                                if (Gx.default_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise rubber-box is considered disabled\n                            } else if (event.which === 3) {\n                                if (Gx.default_rightclick_rubberbox_action === \"zoom\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode, zoom_style,\n                                        select_style);\n                                } else if (Gx.default_rightclick_rubberbox_action === \"select\") {\n                                    mx.rubberbox(Mx, rubberbox_cb(plot, event.which),\n                                        Gx.default_rightclick_rubberbox_mode,\n                                        select_style, zoom_style);\n                                } // otherwise right-click rubber-box is considered disabled\n                            }\n                        }\n                    } else if (event.which === 2) {\n                        if (!Gx.nomenu) {\n                            var evt = document.createEvent('Event');\n                            evt.initEvent('showmenu', true, true);\n                            evt.originalEvent = event;\n                            evt.x = Mx.x;\n                            evt.y = Mx.y;\n                            var executeDefault = mx.dispatchEvent(Mx, evt);\n                            if (executeDefault) {\n                                sigplot_mainmenu(plot);\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n\n        // Putting a finger on the screen and moving it, simulates\n        // pan.\n        this.ontouchstart = (function(plot) {\n            return function(event) {\n                event.preventDefault();\n\n                // See how many fingers are on the screen\n                // 1 finger == pan and/or unzoom\n                if (event.targetTouches.length === 1) {\n\n                    // See if this is a double-tap\n                    if (Mx.touchClear && Mx.touches) {\n                        // Double tap unzooms to L=0 and fully expands the plot\n                        window.clearTimeout(Mx.touchClear);\n                        plot.unzoom();\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"XPAN\");\n                        middleClickScrollMenuAction(plot, mx.SB_FULL, \"YPAN\");\n                    } else {\n                        // Normal touch prepares for panning\n                        var touchEvent = event.targetTouches[0];\n                        // Determine the touch position, relative to the canvas\n                        var rect = touchEvent.target.getBoundingClientRect();\n                        var position = {\n                            x: (touchEvent.pageX - rect.left - window.scrollX),\n                            y: (touchEvent.pageY - rect.top - window.scrollY)\n                        };\n\n                        // Update the Mx coordinates\n                        Mx.xpos = m.bound(position.x, 0, Mx.width);\n                        Mx.ypos = m.bound(position.y, 0, Mx.height);\n\n                        // See if the finger lies on the pan-bars\n                        var inPan = inPanRegion(plot, position);\n                        if (!inPan.inPanRegion) {\n                            Mx.touches = event.targetTouches;\n                        } // TODO support touch 'pan' on the panbars\n                    }\n                } else if (event.targetTouches.length === 2) {\n                    Mx.touch_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                }\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchstart\", this.ontouchstart, false);\n\n        this.ontouchmove = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n                var k = Mx.level;\n\n                event.preventDefault();\n                if (event.targetTouches.length === 1) {\n                    // Determine the touch event position\n                    var touchStart = Mx.touches[0];\n                    var rect = touchStart.target.getBoundingClientRect();\n                    var startPosition = {\n                        x: (touchStart.pageX - rect.left - window.scrollX),\n                        y: (touchStart.pageY - rect.top - window.scrollY)\n                    };\n\n                    var touchEvent = event.targetTouches[0];\n                    var rect = touchEvent.target.getBoundingClientRect();\n                    var position = {\n                        x: (touchEvent.pageX - rect.left - window.scrollX),\n                        y: (touchEvent.pageY - rect.top - window.scrollY)\n                    };\n\n                    var new_xpos = m.bound(position.x, 0, Mx.width);\n                    var new_ypos = m.bound(position.y, 0, Mx.height);\n                    var delta_xpos = new_xpos - Mx.xpos;\n                    var delta_ypos = new_ypos - Mx.ypos;\n                    Mx.xpos = new_xpos;\n                    Mx.ypos = new_ypos;\n\n                    var inPan = inPanRegion(plot, position);\n                    // If we are in the pan region, don't take any action\n                    if (inPan.inPanRegion) {\n                        return;\n                    }\n\n                    // Pan proportionally to the movement of the touch\n                    var xdelta = (Mx.stk[k].xscl * delta_xpos);\n                    var ydelta = (Mx.stk[k].yscl * delta_ypos);\n\n                    if (Mx.origin === 1) {\n                        // regular x, regular y\n                        xdelta *= -1;\n                    } else if (Mx.origin === 2) {\n                        // inverted x, regular y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 3) {\n                        // inverted x, inverted y\n                        ydelta *= -1;\n                    } else if (Mx.origin === 4) {\n                        // regular x, inverted y\n                        xdelta *= -1;\n                        ydelta *= -1;\n                    }\n\n                    var xmin = Mx.stk[k].xmin + xdelta;\n                    var xmax = Mx.stk[k].xmax + xdelta;\n                    var ymin = Mx.stk[k].ymin + ydelta;\n                    var ymax = Mx.stk[k].ymax + ydelta;\n\n                    if ((xmin >= Gx.xmin) && (xmax <= Gx.xmax)) {\n                        Mx.stk[k].xmin = xmin;\n                        Mx.stk[k].xmax = xmax;\n                    }\n\n                    if ((ymin >= Gx.ymin) && (ymax <= Gx.ymax)) {\n                        Mx.stk[k].ymin = ymin;\n                        Mx.stk[k].ymax = ymax;\n                    }\n\n                    if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                        Gx.xmin = Math.min(Gx.xmin, xmin);\n                        Gx.xmax = Math.max(Gx.xmax, xmax);\n                        Gx.ymin = Math.min(Gx.ymin, ymin);\n                        Gx.ymax = Math.max(Gx.ymax, ymax);\n                    }\n                    plot.refresh();\n                } else if (event.targetTouches.length === 2) {\n                    var cur_distance = m.touch_distance(event.targetTouches[0], event.targetTouches[1]);\n                    var scaling = (1 - (Mx.touch_distance / cur_distance)) * 0.05;\n\n                    var xran = Mx.stk[k].xmax - Mx.stk[k].xmin;\n                    var yran = Mx.stk[k].ymax - Mx.stk[k].ymin;\n\n                    var xmin = Mx.stk[k].xmin + (scaling * xran);\n                    var xmax = Mx.stk[k].xmax - (scaling * xran);\n                    var ymin = Mx.stk[k].ymin + (scaling * yran);\n                    var ymax = Mx.stk[k].ymax - (scaling * yran);\n\n                    Mx.stk[k].xmin = Math.max(Gx.xmin, xmin);\n                    Mx.stk[k].xmax = Math.min(Gx.xmax, xmax);\n                    Mx.stk[k].ymin = Math.max(Gx.ymin, ymin);\n                    Mx.stk[k].ymax = Math.min(Gx.ymax, ymax);\n\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        this.throttledOnTouchMove = m.throttle(\n            this._Gx.scroll_time_interval,\n            this.ontouchmove);\n\n        mx.addEventListener(Mx, \"touchmove\", this.throttledOnTouchMove, false);\n\n        this.ontouchend = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                event.preventDefault();\n                console.log(\"on touch end \", event.targetTouches.length);\n                Gx.panning = undefined;\n                plot._Mx.scrollbar_x.action = 0;\n                plot._Mx.scrollbar_y.action = 0;\n                Mx.touch_distance = undefined;\n\n                mx.widget_callback(Mx, event);\n                // Only clear the touches after a slight delay so we can\n                // detect double-tap\n                Mx.touchClear = window.setTimeout(\n\n                    function() {\n                        Mx.touches = undefined;\n                        Mx.touchClear = undefined;\n                    }, 100);\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"touchend\", this.ontouchend, false);\n\n        this.docMouseUp = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    // in general, you shouldn't put anything in here\n                    // ...instead it should go into rubberbox_cb\n                    Gx.panning = undefined;\n                    plot._Mx.scrollbar_x.action = 0; // TODO Is this\n                    // necessary?\n                    plot._Mx.scrollbar_y.action = 0;\n                } //else if (event.which === 2) {\n                // nothing\n                //} else if (event.which === 3) {\n                // nothing\n                //}\n                if (Gx.stillPanning) {\n                    window.clearTimeout(Gx.stillPanning);\n                    Gx.stillPanning = undefined;\n                }\n                if (Gx.repeatPanning) { // Clear the panning interval on any\n                    // mouse up in the document\n                    window.clearInterval(Gx.repeatPanning);\n                    Gx.repeatPanning = undefined;\n                }\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                if ((Mx.mouseOver === false) && (Gx.mouseClickActive)) {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mup', true, true);\n                    evt.originalEvent = event;\n                    // xpos/ypos/x/y are clipped \n                    evt.xpos = Mx.xpos;\n                    evt.ypos = Mx.ypos;\n                    evt.x = Gx.retx;\n                    evt.y = Gx.rety;\n                    evt.which = event.which;\n                    var executeDefault = mx.dispatchEvent(Mx, evt);\n                }\n\n                Gx.mouseClickActive = false;\n                return false;\n            };\n        }(this));\n        document.addEventListener(\"mouseup\", this.docMouseUp, false);\n\n        this.mouseup = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // mouse up on the canvas should never do a browser default action\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mup', true, true);\n                evt.originalEvent = event;\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which;\n                var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                if (executeDefault) {\n                    if (Mx.warpbox || Mx.widget || Mx.prompt) {\n                        // If any of these are true, the mouseup is going\n                        // to be handled by them...but this is a fragile approach\n                        // because it relies upon implicit ordering of event dispatch\n                        // for mouseup events.  It should be improved/refactored at some point\n                        return;\n                    }\n\n                    // Normal mouse up handling\n                    if (event.which === 1) {\n                        // If we are in the pan region, perform the pan\n                        // otherwise emit an mtag\n                        var inCenter = inPanCenterRegion(plot);\n                        if (inCenter.inCenterRegion) {\n                            if (inCenter.command !== ' ') {\n                                pan(plot, inCenter.command, 0, event); // pan\n                            }\n                        } else if (Gx.cntrls === 1) {\n                            // Update the mark\n                            Gx.xmrk = Gx.retx;\n                            Gx.ymrk = Gx.rety;\n\n                            var mtagevt = document.createEvent('Event');\n                            mtagevt.initEvent('mtag', true, true);\n                            mtagevt.originalEvent = event;\n                            mtagevt.x = Gx.xmrk;\n                            mtagevt.y = Gx.ymrk;\n                            mtagevt.xpos = event.x || event.clientX;\n                            mtagevt.ypos = event.y || event.clientY;\n                            mtagevt.w = undefined;\n                            mtagevt.h = undefined;\n                            mtagevt.shift = event.shiftKey;\n                            if (mx.dispatchEvent(Mx, mtagevt)) {\n                                var mclkevt = document.createEvent('Event');\n                                mclkevt.initEvent('mclick', true, true);\n                                mclkevt.originalEvent = event;\n                                mclkevt.xpos = mtagevt.xpos;\n                                mclkevt.ypos = mtagevt.ypos;\n                                mclkevt.x = mtagevt.x;\n                                mclkevt.y = mtagevt.y;\n                                mclkevt.which = 1;\n                                mx.dispatchEvent(Mx, mclkevt);\n                            }\n\n                            // Refresh to draw the new marker position\n                            //if (Gx.always_show_marker || Gx.show_marker) {\n                            plot.redraw();\n                            //}\n                        }\n                    } else if (event.which === 2) {\n                        if (Gx.nomenu) {\n                            // Send an event so that a custom menu can be displayed\n                            // if desired\n                            var evt = document.createEvent('Event');\n                            evt.initEvent('showmenu', true, true);\n                            evt.originalEvent = event;\n                            evt.x = event.x || event.clientX;\n                            evt.y = event.y || event.clientY;\n                            var executeDefault = mx.dispatchEvent(Mx, evt);\n\n                            if (executeDefault) {\n                                if (event.stopPropagation) {\n                                    event.stopPropagation();\n                                }\n                                event.cancelBubble = true;\n                                mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n                                var emit_hidemenu = function() {\n                                    try {\n                                        var hideMenuEvt = document.createEvent('Event');\n                                        hideMenuEvt.initEvent('hidemenu', true, true);\n                                        if (mx.dispatchEvent(Mx, hideMenuEvt)) {\n                                            mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n                                        }\n                                    } finally {\n                                        document.removeEventListener(\"mouseup\", emit_hidemenu, false);\n                                    }\n                                };\n                                document.addEventListener(\"mouseup\", emit_hidemenu, false);\n                            }\n                        }\n                    } else if (event.which === 3) { // unzoom only happens on\n                        // right-clicks on plot\n                        // unzoom/expand\n                        event.preventDefault();\n\n                        plot.unzoom(1);\n                        plot.refresh();\n                    }\n                }\n\n            };\n        }(this));\n\n        mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n\n        this.mouseclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"click\", this.mouseclick, false);\n\n        this.mousedblclick = (function(plot) {\n            return function(event) {\n                event.preventDefault(); // alway prevent any default browser actions on the plot\n\n                var Gx = plot._Gx;\n                var Mx = plot._Mx;\n\n                // Update Mx event fields\n                mx.ifevent(plot._Mx, event);\n\n                var evt = document.createEvent('Event');\n                evt.initEvent('mdblclick', true, true);\n                evt.originalEvent = event;\n                evt.xpos = Mx.xpos;\n                evt.ypos = Mx.ypos;\n                evt.x = Gx.retx;\n                evt.y = Gx.rety;\n                evt.which = event.which; // not always available on all browser\n                if (mx.dispatchEvent(Mx, evt)) {\n                    // currently there isn't a default for mouseclick to cancel\n                }\n                return false;\n            };\n        }(this));\n        mx.addEventListener(Mx, \"dblclick\", this.mousedblclick, false);\n\n        // PANBAR DRAGGING mouse event handlers:\n        this.dragMouseDownHandler = (function(plot) {\n            return function(event) {\n                var Mx = plot._Mx;\n                var Gx = plot._Gx;\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (inPan.inPanRegion) { // Mouse position lies in a pan\n                    // region\n                    event.preventDefault();\n                    if (inPan.command !== ' ') {\n                        var scrollbar;\n                        if (inPan.command === \"XPAN\") {\n                            scrollbar = Mx.scrollbar_x;\n                        } else if (inPan.command === \"YPAN\") {\n                            scrollbar = Mx.scrollbar_y;\n                        }\n\n                        var position = {\n                            x: Mx.xpos,\n                            y: Mx.ypos\n                        };\n                        if (scrollbar !== undefined && onScrollbar(position, scrollbar) && event.which === 1) { // On scrollbar, set up\n                            // a DRAG\n                            Gx.panning = {\n                                axis: inPan.command,\n                                xpos: event.screenX, // Use screen-relative\n                                // values here instead\n                                // of div/page-relative\n                                // values\n                                ypos: event.screenY,\n                                xmin: Mx.stk[Mx.level].xmin,\n                                xmax: Mx.stk[Mx.level].xmax,\n                                ymin: Mx.stk[Mx.level].ymin,\n                                ymax: Mx.stk[Mx.level].ymax\n                            };\n                        }\n                    }\n                }\n            };\n        }(this));\n        window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n\n        this.dragMouseMoveHandler = (function(plot) {\n            return function(e) {\n                var Gx = plot._Gx;\n\n                if (Gx.panning !== undefined) { // execute a scrollbar DRAG\n                    try {\n                        drag_scrollbar(plot, Gx.panning.axis, e);\n                    } catch (err) {\n                        console.log(\"Error: \" + err); // TODO Eventually come\n                        // up with better error\n                        // handling here\n                    }\n                }\n            };\n        }(this));\n\n        this.throttledDragOnMouseMove = m.throttle(this._Gx.scroll_time_interval,\n            this.dragMouseMoveHandler);\n\n        window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n            false);\n\n        this.dragMouseUpHandler = (function(plot) {\n            return function(event) {\n                var Gx = plot._Gx;\n\n                if (event.which === 1) {\n                    Gx.panning = undefined; // Panbar dragging completed - clear\n                    // the state variable\n                }\n            };\n        }(this));\n        window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n\n        // TODO this may need to be throttled or debounced\n        this.onresize = (function(plot) {\n            return function(event) {\n                if (mx.checkresize(plot._Mx)) {\n                    plot.refresh();\n                }\n            };\n        }(this));\n\n        // Mouse Wheel logic\n        this.wheelHandler = (function(plot) {\n\n            var Mx = plot._Mx;\n            var Gx = plot._Gx;\n\n            var throttledPan = m.throttle(100, function(inPan) {\n                // Mouse wheel\n                // event over a\n                // panning\n                // region\n\n                var scrollbar;\n                if (inPan.command === \"XPAN\") {\n                    scrollbar = Mx.scrollbar_x;\n                } else if (inPan.command === \"YPAN\") {\n                    scrollbar = Mx.scrollbar_y;\n                }\n\n                // For now, vertical mouse scrolling is the only action that\n                // will trigger a pan\n                // Later, we can add horizontal mouse scrolling if we choose\n                if (Gx.wheelscroll_mode_natural) { // Original Sig-Plot\n                    // orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELDOWN : mx.SB_WHEELUP);\n                } else { // Inverted/\"un-natural\" orientation\n                    scrollbar.action = (event.deltaY < 0 ? mx.SB_WHEELUP : mx.SB_WHEELDOWN);\n                }\n\n                scrollbar.step = 0.1 * scrollbar.srange;\n                scrollbar.page = 9 * scrollbar.step;\n\n                // Execute wheel action on the scrollbar\n                mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined,\n                    scrollbar);\n\n                // Update the viewbox\n                updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange, inPan.command.slice(0, 1));\n            });\n\n            var throttledZoom = m.throttle(100, function() {\n                var zoomperc = Gx.wheelZoomPercent || 0.2;\n                if (Gx.wheelscroll_mode_natural) {\n                    if (event.deltaY > 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                } else { // Inverted/\"un-natural\" orientation\n                    if (event.deltaY < 0) {\n                        zoomperc = -1 * zoomperc;\n                    }\n                }\n\n                if (Gx.wheelZoom === \"x\") {\n                    plot.percent_zoom(zoomperc, 1, true);\n                } else if (Gx.wheelZoom === \"y\") {\n                    plot.percent_zoom(1, zoomperc, true);\n                } else {\n                    plot.percent_zoom(zoomperc, zoomperc, true);\n                }\n            });\n\n            return function(event) {\n                // Update Mx event fields\n                mx.ifevent(Mx, event);\n\n                // Check if event occured in the pan region\n                var inPan = inPanRegion(plot);\n\n                // Event processing\n                if (plot.mouseOnCanvas) {\n                    event.preventDefault();\n\n                    if (inPan.inPanRegion) {\n                        throttledPan(inPan);\n                    } else if (Gx.wheelZoom) {\n                        throttledZoom();\n                    }\n                }\n            };\n        }(this));\n\n        window.addWheelListener(window, this.wheelHandler, false);\n\n        window.addEventListener(\"resize\", this.onresize, false);\n\n        // If multiple plots are in the same window, then it\n        // may be desired to disable keypress behavior and implement\n        // it at a higher-level...by default keypress behavior\n        // is enabled and only works if the mouse if over the plot\n        if (!options.nokeypress) {\n            this.onkeypress = (function(plot) {\n                return function(event) {\n                    var Mx = plot._Mx;\n                    var Gx = plot._Gx;\n                    if (plot.mouseOnCanvas) {\n\n                        if (Mx.widget && (Mx.widget.type === \"MENU\")) {\n                            return; // The menu absorbs the keypress\n                        }\n\n                        if (Mx.widget && (Mx.widget.type === \"ONESHOT\")) {\n                            Mx.widget = null;\n                            plot.refresh();\n                            return;\n                        }\n\n                        var keyCode = common.getKeyCode(event);\n\n                        // Since the mouse is in the plot area, send a keypress event\n                        var evt = document.createEvent('Event');\n                        evt.initEvent('plotkeypress', true, true);\n                        evt.originalEvent = event;\n                        evt.keyCode = keyCode;\n                        evt.shiftKey = event.shiftKey;\n                        evt.ctrlKey = event.ctrlKey;\n                        evt.altKey = event.altKey;\n                        evt.metaKey = event.metaKey;\n                        var executeDefault = mx.dispatchEvent(Mx, evt);\n                        if (!executeDefault) {\n                            return;\n                        }\n\n                        // Only respond to keypresses if the mouse is\n                        // in the plot area....\n\n                        if (keyCode === 97) { // 'a'\n                            Gx.iabsc = (Gx.iabsc + 1) % 4;\n                            // It's kinda up in the air if changing the 'specs'\n                            // area should also change the plotting mode itself...\n                            // on one hand, if you have multiple layers with different\n                            // xdeta's then switching the specs area to index mode will\n                            // give you only the index of the baselayer...on the other hand\n                            // the use may only want to change the readout and not the x-axis\n                            // or the plot...for now this is commented out to behave in the same\n                            // manner as SIGPLOT.\n                            //plot.change_settings({\n                            //\tindex : Gx.iabsc === 1\n                            //});\n                            display_specs(plot);\n                        } else if (keyCode === 108) { // 'l'\n                            plot.change_settings({\n                                legend: !Gx.legend\n                            }); // toggle the legend\n                        } else if (keyCode === 103) { // 'g'\n                            plot.change_settings({\n                                grid: !Gx.grid\n                            }); // toggle the grid\n                        } else if ((keyCode === 98) || (keyCode === 2)) { // 'b' and CTRL-'b'\n                            if (Mx.warpbox) {\n                                if (Mx.warpbox.mode === \"box\") {\n                                    Mx.warpbox.mode = \"horizontal\";\n                                } else if (Mx.warpbox.mode === \"horizontal\") {\n                                    Mx.warpbox.mode = \"vertical\";\n                                } else {\n                                    Mx.warpbox.mode = \"box\";\n                                }\n                                mx.redraw_warpbox(Mx);\n                            }\n                        } else if (keyCode === 99) { // 'c'\n                            plot.change_settings({\n                                xcnt: -1 * Gx.cntrls\n                            });\n                        } else if (keyCode === 114) { // 'r'\n                            plot.change_settings({\n                                show_readout: !Gx.show_readout\n                            });\n                        } else if (keyCode === 115) { // 's'\n                            plot.change_settings({\n                                specs: !Gx.specs\n                            });\n                        } else if (keyCode === 112) { // 'p'\n                            plot.change_settings({\n                                p_cuts: !Gx.p_cuts\n                            });\n                        } else if (keyCode === 120) { // 'x'\n                            if (Gx.x_cut_press_on) {\n                                // leave xCut\n                                for (var i = 0; i < Gx.lyr.length; i++) {\n                                    if (Gx.lyr[i].xCut) {\n                                        Gx.lyr[i].xCut();\n                                        break;\n                                    }\n                                }\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.x_pop_now) {\n                                    sigplot_show_x(plot);\n                                    Gx.x_pop_now = true;\n                                } else {\n                                    Gx.x_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                // show xCut if xyKeys aren't disabled and the first layer is\n                                // type 2000 and y-cut isn't currently enabled (we already checked\n                                // that x_cut above)\n                                if (!Gx.y_cut_press_on) {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        if (Gx.lyr[i].xCut) {\n                                            Gx.lyr[i].xCut(pixel_to_real(plot, 0, Mx.ypos).y);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        } else if (keyCode === 121) { // 'y'\n                            if (Gx.y_cut_press_on) {\n                                for (var i = 0; i < Gx.lyr.length; i++) {\n                                    if (Gx.lyr[i].yCut) {\n                                        Gx.lyr[i].yCut();\n                                        break;\n                                    }\n                                }\n                            } else if (Gx.xyKeys === \"pop-up\") {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.lyr[0].hcb[\"class\"] === 1) && (Gx.xyKeys === \"automatic\")) {\n                                if (!Gx.y_pop_now) {\n                                    sigplot_show_y(plot);\n                                    Gx.y_pop_now = true;\n                                } else {\n                                    Gx.y_pop_now = false;\n                                }\n                            } else if ((Gx.xyKeys !== \"disable\") && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                                // show xCut if xyKeys aren't disabled and the first layer is\n                                // type 2000 and y-cut isn't currently enabled (we already checked\n                                // that y_cut above)\n                                if (!Gx.x_cut_press_on) {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        if (Gx.lyr[i].yCut) {\n                                            Gx.lyr[i].yCut(pixel_to_real(plot, Mx.xpos, 0).x);\n                                            break;\n                                        }\n                                    }\n                                }\n                            }\n                        } else if (keyCode === 122) { // 'z'\n                            sigplot_show_z(plot);\n                        } else if (keyCode === 116) { // 't'\n                            sigplot_show_timecode(plot);\n                        } else if (keyCode === 109) { // 'm'\n                            if (!Gx.nomenu) {\n                                var evt = document.createEvent('Event');\n                                evt.initEvent('showmenu', true, true);\n                                evt.originalEvent = event;\n                                evt.x = Mx.x;\n                                evt.y = Mx.y;\n                                var executeDefault = mx.dispatchEvent(Mx, evt);\n                                if (executeDefault) {\n                                    sigplot_mainmenu(plot);\n                                }\n                            }\n                        } else if (keyCode === 63) { // '?'\n                            mx.message(Mx, MAIN_HELP);\n                        } else if (keyCode === 102) { // 'f'\n                            mx.fullscreen(Mx);\n                            plot.refresh();\n                        } else if ((keyCode === 9) && (event.ctrlKey)) { // ctrl-i\n                            plot.change_settings({\n                                invert: null\n                            });\n                        } else if (keyCode === 107) { // 'k' show marker\n                            Gx.show_marker = !Gx.show_marker;\n                            plot.redraw();\n\n                        }\n                    }\n                };\n            }(this));\n\n            common.setKeypressHandler(this.onkeypress);\n        }\n\n        return this;\n    };\n\n    // Public methods\n\n    Plot.prototype = {\n        /** @lends Plot **/\n\n        /**\n         * Add a plugin to the plot\n         *\n         * @param plugin\n         *            the plugin object\n         *\n         * @param zorder\n         *            the zorder for the plugin to render, all plugins render as\n         *            overlays on top of the plot\n         */\n        add_plugin: function(plugin, zorder) {\n            if (zorder === undefined) {\n                zorder = Number.MAX_VALUE;\n            }\n            if (zorder <= 0) {\n                throw \"Invalid plugin zorder\";\n            }\n\n            var canvas = document.createElement('canvas');\n            canvas.width = this._Mx.canvas.width;\n            canvas.height = this._Mx.canvas.height;\n\n            plugin.init(this, canvas);\n\n            this._Gx.plugins.push({\n                impl: plugin,\n                zorder: zorder,\n                canvas: canvas\n            });\n\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n\n            this.refresh();\n        },\n\n        /**\n         * Removes a plugin from the plot\n         *\n         * @param plugin\n         *            the plugin object\n         */\n        remove_plugin: function(plugin) {\n            var i = this._Gx.plugins.length;\n            while (i--) {\n                if (this._Gx.plugins[i].impl === plugin) {\n                    if (plugin.dispose) {\n                        plugin.dispose();\n                    }\n                    if (this._Gx.plugins[i].canvas.parentNode) {\n                        this._Gx.plugins[i].canvas.parentNode.removeElement(this._Gx.plugins[i].canvas);\n                    }\n                    this._Gx.plugins.splice(i, 1);\n                }\n            }\n            this._Gx.plugins.sort(function(a, b) {\n                return (a.zorder - b.zorder);\n            });\n\n            this.refresh();\n        },\n\n        /**\n         * Adds a listener to plot events.\n         *\n         * @example plot.addListener(what, function(event) {});\n         *\n         * @param what\n         *            the name of the event to listen to.  \"file_deoverlayed\" is\n         *            emitted when a file is deoverlayed (the name of the deoverlayed\n         *            file can be found in evt.filename), \"file_overlayed\" is emitted\n         *            when a file is overlayed (the name of the overlayed file can\n         *            be found in evt.filename), \"hidemenu\"\tis emitted when the\n         *            menu should be hidden (a selection is made or a mouse click\n         *            occurs away from the menu), \"mdown\"\tis emitted when the mouse\n         *            down event occurs (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)) \"mmove\"\n         *            is emitted when a mouse move event occurs (the evt has parts\n         *            evt.xpos (the mouse x-position relative to the canvas), evt.ypos\n         *            (the mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mtag\"\tis emitted when a mouse \"tag\"\n         *            event occurs (the evt of an mtag has different parts depending\n         *            on what triggered it. It will always contain evt.xpos (the mouse\n         *            x-position relative to the canvas), evt.ypos (the mouse y-position\n         *            relative to the canvas), evt.x (the mouse x-position relative\n         *            to the data), and evt.y (the mouse y-position relative to the data).\n         *            If the rubberboxes are enabled, evt.h and evt.w will contain\n         *            the width and height of the box. evt.shift will contain info\n         *            about the shift key if it is pressed), \"mmove\" is emitted when\n         *            a mouse move event has occurred, \"mdown\" is emitted when\n         *            a mouse down event has occurred (the evt has parts evt.xpos\n         *            (the mouse x-position relative to the canvas), evt.ypos (the\n         *            mouse y-position relative to the canvas), evt.x (the mouse\n         *            x-position relative to the data), evt.y (the mouse y-position\n         *            relative to the data) and evt.which (returns which mouse button\n         *            was pressed for the event)), \"mup\" is emitted when a mouse up\n         *            event occurs. (the evt has parts evt.xpos (the mouse x-position\n         *            relative to the canvas), evt.ypos (the mouse y-position relative\n         *            to the canvas), evt.x (the mouse x-position relative to the data),\n         *            evt.y (the mouse y-position relative to the data) and evt.which\n         *            (returns which mouse button was pressed for the event)),\n         *            \"reread\" is emitted when a reread has been performed, \"sigplotexit\"\n         *            is emitted when an exit plot event occurs, and \"showmenu\"\tis\n         *            emitted when the menu should be shown (the evt.x and evt.y\n         *            contain the coordinates on the plot where the menu will be displayed.\n         *\n         * @param [function]\n         *            callback the function that will be called when the event is heard\n         */\n        addListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Removes a listener to plot events.\n         *\n         * @param what\n         *            the event that was listned to\n         * @param callback\n         */\n        removeListener: function(what, callback) {\n            var Mx = this._Mx;\n            mx.removeEventListener(Mx, what, callback, false);\n        },\n\n        /**\n         * Change one or more plot settings. For boolean types, passing null\n         * will toggle the setting.\n         *\n         * @example plot.change_settings({[settings]});\n         *\n         * @param settings\n         *            Key-value pairs whose values are the settings to change\n         *\n         * @param {Boolean}\n         *            settings.grid change grid visibility\n         *\n         * @param {Boolean}\n         *            settings.index change index setting\n         *\n         * @param {Boolean}\n         *            settings.all change the plot to show all data\n         *\n         * @param {Boolean}\n         *            settings.show_x_axis true displays the x axis\n         *\n         * @param {Boolean}\n         *            settings.show_y_axis true displays the y axis\n         *\n         * @param {Boolean}\n         *            settings.show_readout true displays the readout\n         *\n         * @param {Boolean}\n         *            settings.specs turns on and off specs\n         *\n         * @param {String}\n         *            settings.xcnt \"leftmouse\", \"continuous\", \"disable\",\n         *            \"enable\"\n         *\n         * @param {Boolean}\n         *            settings.legend true displays the legend\n         *\n         * @param {Boolean}\n         *            settings.pan true will display scrollbars and enable panning\n         *\n         * @param {Boolean}\n         *            settings.cross true displays cross hairs\n         *\n         * @param {String}\n         *            settings.rubberbox_action controls action of rubberbox.\n         *            \"zoom\" (default) = zoom to the selected area, \"select\" =\n         *            select the selected area, and \"null\" = disabled, no action\n         *\n         * @param {String}\n         *            settings.rubberbox_mode controls the behavior of the rubberbox.\n         *            \"zoom\" = zoom to the selected area, \"box\" = trigger an mtag\n         *            action on the selected area\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_action controls action of\n         *            rubberbox on rightclick. \"zoom\" = zoom to the selected area,\n         *            \"select\" = select the selected area, and \"null\" (the default)\n         *            = disabled, no action\n         *\n         * @param {String}\n         *            settings.rightclick_rubberbox_mode controls the behavior of\n         *            the rubberbox on rightclck. \"zoom\" = zoom to the selected area,\n         *            \"box\" = trigger an mtag action on the selected area. By default\n         *            is null to disable right-click boxes\n         *\n         * @param {String}\n         *            settings.wheelscroll_mode_natural true indicates natural\n         *            mode, where scrolling the mousewheel forward will pan down\n         *            and backwards will pan up\n         *\n         * @param {String}\n         *            settings.cmode !!!! CHANGED\n         *\n         * @param {String}\n         *            settings.phunits The phase units \"D\" = Degrees, \"R\" = Radians,\n         *            \"C\" = Cycles\n         *\n         * @param {Boolean}\n         *            settings.lg_colorbar true displays the large colorbar\n         *\n         * @param {Boolean}\n         *            settings.p_cuts true displays p_cuts on a 2D plot\n         */\n        change_settings: function(settings) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            for (var i = 0; i < Gx.lyr.length; i++) {\n                Gx.lyr[i].change_settings(settings);\n            }\n\n            if (settings.xyKeys !== undefined) {\n                if (settings.xyKeys === null) {\n                    Gx.xyKeys = \"automatic\";\n                } else {\n                    Gx.xyKeys = settings.xyKeys;\n                }\n            }\n\n            if (settings.grid !== undefined) {\n                if (settings.grid === null) {\n                    Gx.grid = !Gx.grid;\n                } else {\n                    Gx.grid = settings.grid;\n                }\n            }\n\n            if (settings.gridBackground !== undefined) {\n                Gx.gridBackground = settings.gridBackground;\n            }\n\n            if (settings.gridStyle !== undefined) {\n                Gx.gridStyle = settings.gridStyle;\n            }\n\n            if (settings.wheelZoom !== undefined) {\n                Gx.wheelZoom = settings.wheelZoom;\n            }\n\n            if (settings.wheelZoomPercent !== undefined) {\n                Gx.wheelZoomPercent = settings.wheelZoomPercent;\n            }\n\n            if (settings.autol !== undefined) {\n                Gx.autol = settings.autol;\n            }\n\n            if ((settings.index !== undefined) && (settings.index !== Gx.index)) {\n                if (settings.index === null) {\n                    Gx.index = !Gx.index;\n                } else {\n                    Gx.index = settings.index;\n                }\n\n                // the original sigplot.for fails\n                // to do this so that the specs area\n                // has the correct setting.\n                if ((Gx.index) && (Gx.iabsc !== 1)) {\n                    Gx.iabsc = 1;\n                } else if ((!Gx.index) && (Gx.iabsc === 1)) {\n                    Gx.iabsc = 0;\n                }\n\n                var xmin;\n                var xmax;\n                scale_base(this, {\n                    get_data: false\n                }, xmin, xmax);\n\n                // like sigplot, undo all zoom levels\n                this.unzoom();\n            }\n\n            if (settings.all !== undefined) {\n                if (settings.all === null) {\n                    Gx.all = !Gx.all;\n                } else {\n                    Gx.all = settings.all;\n                }\n            }\n\n            if (settings.show_x_axis !== undefined) {\n                if (settings.show_x_axis === null) {\n                    Gx.show_x_axis = !Gx.show_x_axis;\n                } else {\n                    Gx.show_x_axis = settings.show_x_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_y_axis !== undefined) {\n                if (settings.show_y_axis === null) {\n                    Gx.show_y_axis = !Gx.show_y_axis;\n                } else {\n                    Gx.show_y_axis = settings.show_y_axis;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.show_readout !== undefined) {\n                if (settings.show_readout === null) {\n                    Gx.show_readout = !Gx.show_readout;\n                } else {\n                    Gx.show_readout = settings.show_readout;\n                }\n                Gx.specs = (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout);\n            }\n\n            if (settings.specs !== undefined) {\n                if (settings.specs === null) {\n                    Gx.specs = !Gx.specs;\n                } else {\n                    Gx.specs = settings.specs;\n                }\n                if (Gx.specs) {\n                    Gx.show_x_axis = true;\n                    Gx.show_y_axis = true;\n                    Gx.show_readout = true;\n                } else {\n                    Gx.show_x_axis = false;\n                    Gx.show_y_axis = false;\n                    Gx.show_readout = false;\n                }\n            }\n\n            if (settings.xcnt !== undefined) {\n                if (settings.xcnt === \"leftmouse\") {\n                    Gx.cntrls = 1;\n                } else if (settings.xcnt === \"continuous\") {\n                    Gx.cntrls = 2;\n                } else if ((settings.xcnt === \"disable\") && (Gx.cntrls > 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else if ((settings.xcnt === \"enable\") && (Gx.cntrls < 0)) {\n                    Gx.cntrls = -1 * Gx.cntrls;\n                } else {\n                    Gx.cntrls = settings.xcnt;\n                }\n            }\n\n            if (settings.legend !== undefined) {\n                if (settings.legend === null) {\n                    Gx.legend = !Gx.legend;\n                } else {\n                    Gx.legend = settings.legend;\n                }\n            }\n\n            if (settings.pan !== undefined) {\n                if (settings.pan === null) {\n                    Gx.pan = !Gx.pan;\n                } else {\n                    Gx.pan = settings.pan;\n                }\n            }\n\n            if (settings.cross !== undefined) {\n                if (settings.cross === null) { // catch null or undefined here\n                    Gx.cross = !Gx.cross;\n                } else {\n                    Gx.cross = settings.cross;\n                }\n                if (!Gx.cross) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos,\n                            Mx.b);\n                    }\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r,\n                            Gx.cross_ypos);\n                    }\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                } else {\n                    Gx.cross_xpos = undefined;\n                    Gx.cross_ypos = undefined;\n                    if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                        draw_crosshairs(this);\n                    }\n                }\n            }\n\n            var cmode;\n            var address = settings.cmode === undefined ? \"\" : settings.cmode;\n            if (typeof address === \"string\") {\n                address = address + \"\";\n                cmode = address.toUpperCase();\n            } else {\n                cmode = address;\n            }\n\n            if (settings.cmode !== undefined) {\n                if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n                    (cmode === \"__MA\") || (cmode === \"MAGNITUDE\") || (cmode === 1)) {\n                    cmode = 1;\n                }\n                if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n                    (cmode === \"__PH\") || (cmode === \"PHASE\") || (cmode === 2)) {\n                    cmode = 2;\n                }\n                if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n                    (cmode === \"__RE\") || (cmode === \"REAL\") || (cmode === 3)) {\n                    cmode = 3;\n                }\n                if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n                    (cmode === \"__IM\") || (cmode === \"IMAGINARY\") || (cmode === 4)) {\n                    cmode = 4;\n                }\n                if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n                    (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n                    (cmode === \"__D1\") || (cmode === \"10*LOG10\") || (cmode === 6)) {\n                    cmode = 6;\n                }\n                if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n                    (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n                    (cmode === \"__D2\") || (cmode === \"20*LOG10\") || (cmode === 7)) {\n                    cmode = 7;\n                }\n                if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n                    (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n                    (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\") || (cmode === 5)) {\n                    if (Gx.index) {\n                        m.log.error(\"Imag/Real mode not permitted in INDEX mode\");\n                    } else {\n                        cmode = 5;\n                    }\n                }\n\n                changemode(this, cmode);\n            }\n\n            if (settings.phunits !== undefined) {\n                changephunits(this, settings.phunits);\n            }\n\n            if (settings.rubberbox_action !== undefined) {\n                Gx.default_rubberbox_action = settings.rubberbox_action;\n            }\n\n            if (settings.rubberbox_mode !== undefined) {\n                Gx.default_rubberbox_mode = settings.rubberbox_mode;\n            }\n\n            if (settings.rightclick_rubberbox_action !== undefined) {\n                Gx.default_rightclick_rubberbox_action = settings.rightclick_rubberbox_action;\n            }\n\n            if (settings.rightclick_rubberbox_mode !== undefined) {\n                Gx.default_rightclick_rubberbox_mode = settings.rightclick_rubberbox_mode;\n            }\n\n            if (settings.wheelscroll_mode_natural !== undefined) {\n                Gx.wheelscroll_mode_natural = settings.wheelscroll_mode_natural;\n            }\n\n            if (settings.colors !== undefined) {\n                if (!settings.colors.fg) {\n                    settings.colors.fg = Mx.fg;\n                }\n                if (!settings.colors.bg) {\n                    settings.colors.bg = Mx.bg;\n                }\n                mx.setbgfg(Mx, settings.colors.bg, settings.colors.fg, Mx.xi);\n            }\n\n            if (settings.cmap !== undefined) {\n                if (settings.cmap === null) {\n                    // default\n                    if (Gx.cmode === 2) {\n                        Gx.cmap = 2; // wheel\n                    } else {\n                        Gx.cmap = 1; // ramp\n                    }\n                } else {\n                    Gx.cmap = settings.cmap; // TODO support string lookup\n                }\n\n                setup_cmap(this, Gx.cmap);\n            }\n\n            if (settings.yinv !== undefined) {\n                if (settings.yinv) {\n                    Mx.origin = 4;\n                } else {\n                    Mx.origin = 1;\n                }\n            }\n\n            if (settings.rasterSmoothing !== undefined) {\n                if (settings.rasterSmoothing === null) {\n                    Gx.rasterSmoothing = !Gx.rasterSmoothing;\n                } else {\n                    Gx.rasterSmoothing = settings.rasterSmoothing;\n                }\n            }\n\n            if (settings.fillStyle !== undefined) {\n                Gx.fillStyle = settings.fillStyle;\n            }\n\n            if (settings.invert !== undefined) {\n                if (settings.invert === null) {\n                    mx.invertbgfg(Mx);\n                } else if (settings.invert === true) {\n                    mx.setbgfg(this, \"white\", \"black\");\n                } else {\n                    mx.setbgfg(this, \"black\", \"white\");\n                }\n            }\n\n            if (settings.nomenu !== undefined) {\n                if (settings.nomenu === null) {\n                    Gx.nomenu = !Gx.nomenu;\n                } else {\n                    Gx.nomenu = settings.nomenu;\n                }\n            }\n\n            if (settings.ymax !== undefined) {\n                if (settings.ymax === null) {\n                    Gx.autoy = Gx.autoy | 2;\n                    Gx.panymax = undefined;\n                    scale_base(this, {});\n                    Gx.ymax = Gx.panymax;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xD;\n                    Gx.ymax = settings.ymax;\n                    updateViewbox(this, Mx.stk[0].ymin, settings.ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            if (settings.ymin !== undefined) {\n                if (settings.ymin === null) {\n                    Gx.autoy = Gx.autoy | 1;\n                    Gx.panymin = undefined;\n                    scale_base(this, {});\n                    Gx.ymin = Gx.panymin;\n                } else {\n                    // autoy must be set correctly before calling updateViewbox\n                    Gx.autoy = Gx.autoy & 0xE;\n                    Gx.ymin = settings.ymin;\n                    updateViewbox(this, settings.ymin, Mx.stk[0].ymax, \"Y\");\n                    this.redraw();\n                }\n            }\n\n            // Check autoy setting after checking ymin/ymax\n            // so that explicitly setting autoy will override\n            // implicit settings via ymin/ymax\n            if (settings.autoy !== undefined) {\n                Gx.autoy = settings.autoy;\n                if (((Gx.autoy & 1) !== 0)) {\n                    Gx.ymin = undefined;\n                }\n                if (((Gx.autoy & 2) !== 0)) {\n                    Gx.ymax = undefined;\n                }\n            }\n\n            if (settings.xmin !== undefined) {\n                updateViewbox(this, settings.xmin, Mx.stk[0].xmax, \"X\");\n                Gx.autox = (Gx.autox & 2);\n                this.redraw();\n            }\n\n            if (settings.xmax !== undefined) {\n                updateViewbox(this, Mx.stk[0].xmin, settings.xmax, \"X\");\n                Gx.autox = (Gx.autox & 1);\n                this.redraw();\n            }\n\n            if (settings.zmin !== undefined) {\n                Gx.zmin = settings.zmin;\n                Gx.autoz = (Gx.autoz & 2);\n            }\n\n            if (settings.zmax !== undefined) {\n                Gx.zmax = settings.zmax;\n                Gx.autoz = (Gx.autoz & 1);\n            }\n\n            if (settings.autoz !== undefined) {\n                Gx.autoz = settings.autoz;\n                if (((Gx.autoz & 1) !== 0)) {\n                    Gx.zmin = undefined;\n                }\n                if (((Gx.autoz & 2) !== 0)) {\n                    Gx.zmax = undefined;\n                }\n            }\n\n            if (settings.note !== undefined) {\n                Gx.note = settings.note;\n            }\n\n            if (settings.lg_colorbar !== undefined) {\n                // Change the plot area and then draw the large colorbar\n                Gx.lg_colorbar = !Gx.lg_colorbar;\n            }\n\n            if (settings.p_cuts !== undefined) {\n                // Change the plot area and then draw the p_cuts dipslay\n                if (settings.p_cuts === null) {\n                    Gx.p_cuts = !Gx.p_cuts;\n                } else {\n                    Gx.p_cuts = settings.p_cuts;\n                }\n            }\n\n            //this is a setting that is true if we are drawing an xcut\n            if (settings.xcut_now !== undefined) {\n                Gx.xcut_now = !Gx.xcut_now;\n            }\n\n            //this is a setting that is true if we are drawing a ycut\n            if (settings.ycut_now !== undefined) {\n                Gx.ycut_now = !Gx.ycut_now;\n            }\n\n            this.refresh();\n            if (settings.pan !== undefined) { // refactor - new code to handle\n                // disappearing specs\n                display_specs(this);\n            }\n        },\n\n        /**\n         * Reread all files and refresh the plot.\n         */\n        reread: function() {\n            var Gx = this._Gx;\n            var oldLayerData = [];\n            for (var k = 0; k < Gx.lyr.length; k++) { // make a copy of layer\n                // data before\n                // destroying Gx.lyr\n                // with the deoverlay\n                oldLayerData[k] = Gx.lyr[k];\n            }\n\n            var origHCB = Gx.HCB.slice();\n            var origHCB_UUID = _.clone(Gx.HCB_UUID);\n\n            this.deoverlay();\n            for (var i = 0; i < origHCB.length; i++) {\n                this.overlay_bluefile(origHCB_UUID[origHCB[i]]);\n            }\n\n            // propagate old layer attributes to re-read layers\n            for (var j = 0; j < Gx.lyr.length; j++) {\n                // TODO Assumes indices of old Gx.lyr and new Gx.lyr will match\n                // up correctly - should we instead use hcb and name to identify\n                Gx.lyr[j].symbol = oldLayerData[j].symbol;\n                Gx.lyr[j].radius = oldLayerData[j].radius;\n                // TODO re-copy other things like line type???\n            }\n            this.refresh();\n\n            // Notify listeners that a reread was performed\n            var evt = document.createEvent('Event');\n            evt.initEvent('reread', true, true);\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Placeholder for cleanup logic.\n         */\n        cleanup: function() {\n            // TODO not sure what we really want to do here yet\n        },\n\n        /**\n         * Reload data without adjusting other aspects about a plot\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         */\n        reload: function(lyr, data, hdrmod, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            var n = -1;\n            if (_.has(Gx.HCB_UUID, lyr)) {\n                n = this.get_lyrn(lyr);\n            }\n\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                if (typeof lyr === \"number\") {\n                    throw \"reload requires use the layer uuid returned by overlay and no longer supports layer indexes\";\n                }\n                return;\n            }\n\n            if (Gx.lyr[n].reload === undefined) {\n                return;\n            }\n\n            var xbnds = Gx.lyr[n].reload(data, hdrmod);\n\n            if (Mx.level === 0) {\n                // Unlike push(), always call scale_base\n                // when reload is invoked\n                scale_base(this, {\n                    get_data: false\n                }, xbnds.xmin, xbnds.xmax);\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n\n        },\n\n        rescale: function() {\n            var Mx = this._Mx;\n\n            if (Mx.level === 0) {\n                scale_base(this, {\n                    get_data: false\n                }, undefined, undefined);\n            }\n\n            this.refresh();\n        },\n\n        /**\n         * Change the file header\n         *\n         * @param {Number} n\n         *            the layer to push header changes to\n         * @param {Object} hdrmod\n         *            changes to the file header\n         */\n        headermod: function(n, hdrmod) {\n            this.change_settings(hdrmod);\n            this.push(n, [], hdrmod);\n        },\n\n        /**\n         * Push data into a layer that was created with overlay_pipe\n         *\n         * @example plot.push(n, data);\n         *\n         * @param {Number} n\n         *            the layer to push data into\n         * @param {Number[]} data\n         *            data to push\n         * @param {Object} hdrmod\n         *            optional changes to the file header\n         * @param {boolean} [sync=false]\n         *            optional dispatch onpipewrite syncronously\n         * @param {boolean} [rsync=false]\n         *            optional dispatch refresh syncronously\n         */\n        push: function(lyr, data, hdrmod, sync, rsync) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            var n = -1;\n            if (_.has(Gx.HCB_UUID, lyr)) {\n                n = this.get_lyrn(lyr);\n            }\n\n            if ((n < 0) || (n >= Gx.lyr.length)) {\n                if (typeof lyr === \"number\") {\n                    throw \"push requires use the layer uuid returned by overlay and no longer supports layer indexes\";\n                }\n                return;\n            }\n\n            if (Gx.lyr[n].push === undefined) {\n                return;\n            }\n\n            if (Gx.lyr[n].display === false) {\n                return;\n            }\n\n            var hdrmod_clone = hdrmod;\n\n            // quick deep copy of the header so we can\n            // add some necessary fields if this is\n            // a header-only push\n            if (hdrmod) {\n                var hdrmod_clone = JSON.parse(JSON.stringify(hdrmod));\n\n                // if it's a header-only push, the data should\n                // be an empty array\n                if (data.length === 0) {\n                    hdrmod_clone.xmin = Mx.stk[0].xmin;\n                    hdrmod_clone.xmax = Mx.stk[0].xmax;\n                    hdrmod_clone.ymin = Mx.stk[0].ymin;\n                    hdrmod_clone.ymax = Mx.stk[0].ymax;\n                }\n            }\n\n            var rescale = Gx.lyr[n].push(data, hdrmod_clone, sync);\n\n            if ((Mx.level === 0) && rescale) {\n                scale_base(this, {\n                    get_data: false\n                });\n            }\n\n            if (rsync) {\n                this._refresh();\n            } else {\n                this.refresh();\n            }\n        },\n\n        /**\n         * Create a plot layer with an array overlay\n         *\n         * @example plot.overlay_array(data, {[overrides]}, {[layerOptions]});\n         *\n         * @param data\n         *            data the data that you will be plotting\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_array: function(data, overrides, layerOptions) {\n            m.log.debug(\"Overlay array\");\n            var hcb = m.initialize(data, overrides);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_pipe({[overrides]},{[layerOptions]});\n         *\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_pipe: function(overrides, layerOptions) {\n            m.log.debug(\"Overlay pipe\");\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides);\n            //console.log(\"pipe filename: \"+hcb.file_name);\n            return this.overlay_bluefile(hcb, layerOptions);\n        },\n\n        /**\n         * Create a plot layer to hold data\n         *\n         * @example plot.overlay_websocket({wsurl, {[overrides]}, {[layerOptions]}});\n         * @param {url:port_destination}\n         *            wsurl the url and port destination for the websocket being used\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_websocket: function(wsurl, overrides, layerOptions) {\n            m.log.debug(\"Overlay websocket: \" + wsurl);\n            var ws = new WebSocket(wsurl, \"plot-data\");\n            ws.binaryType = \"arraybuffer\";\n\n            var plot = this;\n            if (!overrides) {\n                overrides = {};\n            }\n            overrides.pipe = true;\n            var hcb = m.initialize(null, overrides, () => ws.close());\n            hcb.ws = ws;\n\n            var layer_n = this.overlay_bluefile(hcb, layerOptions);\n\n            ws.onopen = function(evt) {};\n\n            ws.onmessage = (function(theSocket) {\n                return function(evt) {\n                    if (evt.data instanceof ArrayBuffer) {\n                        var data = hcb.createArray(evt.data);\n                        plot.push(layer_n, data);\n                    } else if (typeof evt.data === \"string\") {\n                        var Gx = plot._Gx;\n                        var hdr = Gx.lyr[layer_n].hcb;\n                        if (!hdr) {\n                            m.log.warning(\"Couldn't find header for layer \" + layer_n);\n                        }\n\n                        var newHdr = JSON.parse(evt.data);\n                        plot.push(layer_n, [], newHdr);\n                    }\n                };\n            })(ws);\n\n            return layer_n;\n        },\n\n        /**\n         * Create a plot layer from a Midas web pipe\n         *\n         * @example plot.overlay_wpipe({wsurl, {[overrides]}, {[layerOptions]},fps});\n         * @param {url:port_destination}\n         *            wsurl the url and port destination for the websocket being used\n         * @param [overrides]\n         *            Key-value pairs whose values alter plot settings\n         *\n         * @param {Number}\n         *            overrides.type 1000 = one dimensional, 2000 = two dimensional.\n         *            this is a convention of X-midas\n         *\n         * @param {Number}\n         *            overrides.subsize the subsize for data being read in by the plot\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framsize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @param {Number} fps\n         *            throttles the data flow to the client by the specified\n         *            frames-per-second\n         *\n         * @returns data_layer\n         *\n         */\n\n        overlay_wpipe: function(wsurl, overrides, layerOptions, fps) {\n            let plot = this;\n            let wpipe = {\n                hcb: null,\n                layer_n: null,\n                plotLayerOptions: null,\n                ws: null,\n            };\n            wpipe.ws = new WebSocket(wsurl, \"pipe-data\");\n            wpipe.ws.binaryType = \"arraybuffer\";\n\n            m.log.debug(\"Overlay websocket: \" + wsurl);\n\n            wpipe.ws.onopen = function(evt) {\n                wpipe.ws.send(\n                    JSON.stringify({\n                        event: \"open\",\n                        payload: {\n                            set_buffer: {\n                                fps: fps,\n                            },\n                        },\n                    })\n                );\n            };\n\n            wpipe.ws.onmessage = (function(theSocket) {\n                return function(evt) {\n                    if (typeof evt.data === \"string\") {\n                        var msg = JSON.parse(evt.data);\n\n                        if (msg.event === \"version\") {\n                            m.log.debug(\"server: \" + msg.payload.server + \"\\nxm-ver: \" + msg.payload[\"xm-ver\"]);\n                        } else if (msg.event === \"header\") {\n                            wpipe.hcb = msg.payload;\n                            wpipe.hcb.ws = wpipe.ws;\n                            wpipe.hcb.ystart = 0;\n                            wpipe.hcb.class = Math.floor(wpipe.hcb.type / 1000);\n                        } else if (msg.event === \"out_buffer\") {\n                            if (wpipe.layer_n !== null) {\n                                plot.remove_layer(wpipe.layer_n);\n                                wpipe.layer_n = null;\n                            }\n\n                            var bufferLayerOptions = {\n                                framesize: msg.payload.framesize,\n                                cmode: msg.payload.mode,\n                                xcmp: msg.payload.xcmp,\n                                ycmp: msg.payload.ycmp,\n                                fps: msg.payload.fps,\n                            };\n\n                            wpipe.plotLayerOptions = layerOptions != null ? Object.assign(bufferLayerOptions, layerOptions) : bufferLayerOptions;\n                            if (overrides != null) {\n                                wpipe.hcb = Object.assign(wpipe.hcb, overrides);\n                            }\n\n                            wpipe.hcb.pipe = true;\n                            try {\n                                wpipe.hcb = m.initialize(null, wpipe.hcb, () => wpipe.ws.close());\n                                wpipe.layer_n = plot.overlay_bluefile(wpipe.hcb, wpipe.plotLayerOptions);\n                            } catch (e) {\n                                wpipe.ws.close();\n                            }\n                        } else if (msg.event === \"error\") {\n                            m.log.error(msg);\n                        } else if (msg.event === \"eof\") {\n                            wpipe.ws.close();\n                            return;\n                        } else if (msg.event === \"abscissa_update\") {\n                            if (wpipe.plotLayerOptions.layerType === Layer1D) {\n                                wpipe.hcb.xstart += msg.payload.skip_count * wpipe.hcb.xdelta;\n                            } else if (wpipe.plotLayerOptions.layerType === Layer2D) {\n                                wpipe.hcb.ystart += msg.payload.skip_count * wpipe.hcb.ydelta;\n                            }\n                        } else {\n                            m.log.error('Received unexpected pipe-data event \"' + msg.event + '\"');\n                            wpipe.ws.close();\n                        }\n                    } else {\n                        if (wpipe.plotLayerOptions.layerType === Layer1D) {\n                            var array = wpipe.hcb.createArray(evt.data);\n                            plot.push(wpipe.layer_n, array);\n                        } else if (wpipe.plotLayerOptions.layerType === Layer2D) {\n                            var numFrames = evt.data.byteLength / wpipe.hcb.bpe;\n                            for (var i = 0; i < numFrames; ++i) {\n                                var offset = i * wpipe.hcb.bpe;\n                                var len = wpipe.hcb.subsize * wpipe.hcb.spa;\n                                var z = wpipe.hcb.createArray(evt.data, offset, len);\n                                plot.push(wpipe.layer_n, z);\n                            }\n                        }\n                    }\n                };\n            })(wpipe.ws);\n\n            return wpipe.layer_n;\n        },\n\n\n        /**\n         * Create a plot layer from an HREF that points to a BLUEFILE or MATFILE\n         *\n         * @example plot.overlay_href(href, function() {}, {[layeroptions]});\n         *\n         * @param {String}\n         *            href or |-delimited hrefs the url to the bluefile or matfile\n         * @param [onload]\n         *            callback to be called when the file has been loaded\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framesize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n        overlay_href: function(href, onload, layerOptions, overrides) {\n            var self = this;\n            var lyr_uuids = [];\n            href.split('|').forEach(function(hr) {\n                var lyr_uuid = self.overlay_href_single(hr.trim(), onload, layerOptions, overrides);\n                lyr_uuids.push(lyr_uuid);\n            });\n\n            if (lyr_uuids.length === 0) {\n                return null;\n            } else if (lyr_uuids.length === 1) {\n                return lyr_uuids[0];\n            } else {\n                return lyr_uuids;\n            }\n        },\n\n        /**\n         * Create a plot layer from an HREF that points to a BLUEFILE or MATFILE\n         *\n         * @example plot.overlay_href_single(href, function() {}, {[layeroptions]});\n         *\n         * @param {String}\n         *            href the url to the bluefile or matfile\n         * @param [onload]\n         *            callback to be called when the file has been loaded\n         *\n         * @param [layerOptions]\n         *            Key-value pairs whose values are the settings for the plot\n         *\n         * @param {String}\n         *            layerOptions.name the name of the layer\n         *\n         * @param {Number}\n         *            layerOptions.framesize the framesize of the plot\n         *\n         * @param {Varies}\n         *            layerOptions.etc all of the parameters for the change_settings\n         *            function except for lg_colorbar and p_cuts\n         *\n         * @returns data_layer\n         *\n         */\n        overlay_href_single: function(href, onload, layerOptions, overrides) {\n            var lyr_uuid = this.reg_hcb(null);\n\n            m.log.debug(\"Overlay href: \" + href + \" \" + lyr_uuid);\n            try {\n                this.show_spinner();\n                var handleHeader = (function(plot, onload) {\n                    return function(hcb) {\n                        try {\n                            if (!hcb) {\n                                m.log.error(\"Failed to load data: \" + href);\n                            } else {\n                                hcb._uuid = lyr_uuid;\n                                common.update(hcb, overrides);\n\n                                var i;\n                                if (href.endsWith(\".mat\")) {\n                                    i = plot.overlay_matfile(hcb, layerOptions);\n                                } else {\n                                    i = plot.overlay_bluefile(hcb, layerOptions);\n                                }\n                                if (onload) {\n                                    onload(hcb, i);\n                                }\n                            }\n                        } finally {\n                            plot.hide_spinner();\n                        }\n                    };\n                }(this, onload));\n\n                var handleSDS = (function(plot, onload) {\n                    return function(hcb, layertype) {\n                        // LOWER CASE CRAP THAT GRANT SENT US\n                        try {\n                            var i = null;\n                            if (!hcb) {\n                                m.log.error(\"Failed to load data: \" + href);\n                            } else {\n                                hcb._uuid = lyr_uuid;\n                                common.update(hcb, overrides);\n                                if (layertype === \"SDS\") {\n                                    if (hcb.file_type === 1000) {\n                                        layerOptions.layerType = \"1DSDS\";\n                                    } else {\n                                        layerOptions.layerType = \"2DSDS\";\n                                    }\n                                } else {\n                                    layerOptions.layerType = layertype;\n                                }\n\n                                i = plot.overlay_bluefile(hcb, layerOptions);\n                                if (onload) {\n                                    onload(hcb, i);\n                                }\n                            }\n                        } finally {\n                            plot.hide_spinner();\n                        }\n                    };\n                }(this, onload));\n\n                var reader;\n                var oReq;\n                if (href.endsWith(\".mat\")) {\n                    reader = new matfile.MatFileReader();\n                    oReq = reader.read_http(href, handleHeader);\n                } else if (layerOptions && (layerOptions.layerType === \"2DSDS\" || layerOptions.layerType === \"1DSDS\" || layerOptions.layerType === \"SDS\")) {\n                    // TODO it would be nice to not check layerType here but either\n                    // peek at the URL contents OR use something in the URL\n                    oReq = new XMLHttpRequest();\n                    oReq.open(\"GET\", href, true);\n                    oReq.responseType = \"\";\n                    oReq.onload = function(oEvent) {\n                        var hcb = JSON.parse(oReq.responseText);\n                        if (hcb) {\n                            hcb.url = href;\n                        }\n                        handleSDS(hcb, layerOptions.layerType);\n\n                    };\n                    oReq.onerror = function(oEvent) {\n                        //console.log(\"error fetching SDS header\" + oEvent)\n                    };\n                    oReq.send(null);\n                } else {\n                    reader = new bluefile.BlueFileReader();\n                    oReq = reader.read_http(href, handleHeader);\n                }\n\n                // If oReq exists, set the HCB destructor to oReq.abort()\n                if (oReq) {\n                    const layer_n = this.get_layer_n(lyr_uuid);\n                    this._Gx.HCB[layer_n].cleanup = () => oReq.abort();\n                }\n            } catch (error) {\n                this.hide_spinner();\n            }\n\n            return lyr_uuid;\n        },\n\n        show_spinner: function() {\n            if (!this._Gx.spinner) {\n                SPINNER_OPTS.color = this._Mx.xwfg;\n                this._Gx.spinner = new Spinner(SPINNER_OPTS).spin(this._Gx.parent);\n            }\n        },\n\n        hide_spinner: function(force) {\n            var cnt_pending = 0;\n            _.mapObject(this._Gx.HCB_UCB, (k, v) => {\n                if (v === null) {\n                    cnt_pending += 1;\n                }\n            });\n\n            if ((cnt_pending === 0) || force) {\n                if (this._Gx.spinner) {\n                    this._Gx.spinner.stop();\n                }\n                this._Gx.spinner = undefined;\n            }\n        },\n\n        reg_hcb: function(hcb) {\n            var uuid = common.uuidv4();\n            this._Gx.HCB_UUID[uuid] = hcb;\n\n            return uuid;\n        },\n\n        get_lyrn: function(uuid) {\n            return _.indexOf(this._Gx.HCB, uuid);\n        },\n\n        get_lyr_uuid: function(lyrN) {\n            return this._Gx.HCB[lyrN];\n        },\n\n        get_hcb_by_uuid: function(uuid) {\n            return this._Gx.HCB[uuid];\n        },\n\n        get_hcb_by_lyrn: function(lyrN) {\n            return this.get_hcb_by_uuid(this.get_lyr_uuid(lyrN));\n        },\n\n        add_layer: function(layer) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            // Notify listeners that a file was overlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('lyradd', true, true);\n            evt.name = layer.name; // the name of the layer\n            evt.layer = layer;\n            var executeDefault = mx.dispatchEvent(Mx, evt);\n            if (executeDefault) {\n                Gx.lyr.push(layer);\n                layer.index = Gx.lyr.length - 1; // the new index of the layer\n                return true;\n            } else {\n                return false;\n            }\n        },\n\n        /**\n         * Get a layer of the plot\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *              n the index of the layer\n         *\n         * @returns data_layer\n         *\n         */\n\n        get_layer: function(lyr) {\n            var Gx = this._Gx;\n\n            if (_.has(Gx.HCB_UUID, lyr)) {\n                lyr = this.get_lyrn(lyr);\n            }\n            if ((lyr >= 0) && (lyr < Gx.lyr.length)) {\n                return Gx.lyr[lyr];\n            } else {\n                return null;\n            }\n        },\n\n        overlay_matfile: function(mfile, layerOptions) {\n            m.log.debug(\"Overlay matfile: \" + mfile.file_name);\n            return this.overlay_array(mfile.dview);\n        },\n\n        /**\n         * Create a plot layer backed by a bluefile header\n         *\n         * @param hcb\n         *            {BlueHeader} an opened BlueHeader file\n         * @returns the index of the new layer\n         */\n        overlay_bluefile: function(hcb, layerOptions) {\n            m.log.debug(\"Overlay bluefile: \" + hcb.file_name);\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var size = 0;\n\n            layerOptions = layerOptions || {};\n\n            var basefiles = (Gx.HCB.length === 0);\n\n            var lyr_uuid = hcb._uuid;\n            if (lyr_uuid) {\n                // the layer was pre-registered but has already been\n                // deoverlayed, do nothing\n                if (!_.has(Gx.HCB_UUID, lyr_uuid)) {\n                    return;\n                }\n                // Update the HCB\n                Gx.HCB_UUID[lyr_uuid] = hcb;\n            } else {\n                lyr_uuid = this.reg_hcb(hcb);\n            }\n            this._Gx.HCB.push(lyr_uuid);\n\n            if (Gx.HCB.length === 1) {\n                basefile(this, true);\n            }\n\n            var layers = null;\n\n            if (layerOptions.layerType === undefined) {\n                if (hcb[\"class\"] === 1) {\n                    layers = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (hcb[\"class\"] === 2) {\n                    layers = Layer2D.overlay(this, hcb, layerOptions);\n                }\n            } else {\n                if (layerOptions.layerType === \"1D\") {\n                    layers = Layer1D.overlay(this, hcb, layerOptions);\n                } else if (layerOptions.layerType === \"2D\") {\n                    layers = Layer2D.overlay(this, hcb, layerOptions);\n                } else if (layerOptions.layerType === \"1DSDS\") {\n                    layers = Layer1DSDS.overlay(this, hcb, layerOptions);\n                } else if (layerOptions.layerType === \"2DSDS\") {\n                    layers = Layer2DSDS.overlay(this, hcb, layerOptions);\n                } else {\n                    layers = layerOptions.layerType.overlay(this, hcb, layerOptions);\n                }\n            }\n\n            if (layers === null || layers.length === 0) {\n                m.log.debug(\"failed to create layers\");\n                return;\n            }\n\n            // Allow the user to store aribitary data with the layer\n            if (layerOptions.user_data) {\n                layers.forEach(function(layer) {\n                    layer.user_data = layerOptions.user_data;\n                });\n            }\n\n            // TODO - do we want to alert like the XM plot did?\n            //if (!Gx.all && size > Gx.bufmax && Gx.HCB.length == 1) {\n            // alert(\"Plot truncated to buffer size. Use panning or /ALL\n            // switch\");\n            //}\n            // The original code has a bug here. Fixed by moving changemode\n            // outside of\n            // the !basefiles check.\n            // You can recreate with SIGPLOT ,,, IR\n            // And then loading a file.\n            changemode(this, Gx.cmode);\n\n            // if this is not the first set of layers added and\n            // we haven't asked for the plot to expand to accomodate\n            // this layers new range, then simply draw the new layer.\n            if (!basefiles && !layerOptions.expand) {\n                var plot = this;\n                layers.forEach(function(layer) {\n                    draw_layer(plot, layer);\n                });\n            } else {\n                if (_.size(Gx.HCB_UUID) === 0) { // TODO dead code that cannot be reached\n                    basefile(this, false);\n                } else {\n                    Gx.basemode = Gx.cmode;\n                    var xmin;\n                    var xmax;\n                    if ((Gx.autox & 1) === 0) {\n                        xmin = Gx.xmin;\n                    }\n                    if ((Gx.autox & 2) === 0) {\n                        xmax = Gx.xmax;\n                    }\n                    scale_base(this, {\n                        get_data: true\n                    }, xmin, xmax);\n                    Mx.level = 0;\n                    if ((Gx.autox & 1) !== 0) {\n                        Gx.xmin = Mx.stk[0].xmin;\n                    }\n                    if ((Gx.autox & 2) !== 0) {\n                        Gx.xmax = Mx.stk[0].xmax;\n                    }\n                    if ((Gx.autoy & 1) !== 0) {\n                        Gx.ymin = Mx.stk[0].ymin;\n                    }\n                    if ((Gx.autoy & 2) !== 0) {\n                        Gx.ymax = Mx.stk[0].ymax;\n                    }\n                    Mx.resize = true;\n                    if (Gx.lyr[0].preferred_origin) {\n                        Mx.origin = Gx.lyr[0].preferred_origin;\n                    } else {\n                        Mx.origin = 1;\n                    }\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            return lyr_uuid;\n        },\n\n        /**\n         * Load one or more files.\n         *\n         * @param {File[]}\n         *            a list of files to plot\n         */\n        load_files: function(files, layerType) {\n            var onload = (function(plot) {\n                return function(hdr) {\n                    plot.overlay_bluefile(hdr, layerType);\n                };\n            })(this);\n\n            for (var i = 0; i < files.length; i++) {\n                var f = files[i];\n                var br = new bluefile.BlueFileReader();\n                br.read(f, onload);\n            }\n        },\n\n        /**\n         * Reemove layers\n         *\n         * @example plot.get_layer(n);\n         *\n         * @param {Number}\n         *             The index of the layer. If not provided, all layers will\n         *             be removed\n         *\n         * @returns data_layer\n         *\n         */\n\n        deoverlay: function(index) {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n\n            if (_.has(Gx.HCB_UUID, index)) {\n                this.remove_layer(index);\n            } else {\n                if (Gx.HCB.length > 0) {\n                    if (index === undefined) {\n                        for (var n = Gx.HCB.length - 1; n >= 0; n--) {\n                            this.remove_layer(this.get_lyr_uuid(n));\n                        }\n                    } else if (index < 0) {\n                        var n = Gx.HCB.length + index;\n                        if (n < 0) {\n                            return;\n                        }\n                        this.remove_layer(this.get_lyr_uuid(n));\n                    } else if (index < Gx.HCB.length) {\n                        this.remove_layer(this.get_lyr_uuid(index));\n                    }\n                }\n            }\n            if (_.size(Gx.HCB_UUID) === 0) {\n                basefile(this, false);\n                scale_base(this, {});\n            }\n        },\n\n        /**\n         * Remove a layer.\n         *\n         * @param lyr_uuid\n         *            the layer to remove\n         */\n        remove_layer: function(lyr_uuid) {\n            var Gx = this._Gx;\n\n            var HCB = Gx.HCB_UUID[lyr_uuid];\n            delete Gx.HCB_UUID[lyr_uuid];\n\n            // This will also return false if\n            // `cleanup` is not defined.\n            if (HCB && _.isFunction(HCB.cleanup)) {\n                HCB.cleanup();\n            }\n\n            var fileName = \"\";\n            if (HCB) {\n                fileName = HCB.file_name;\n            }\n\n            var index = this.get_lyrn(lyr_uuid);\n\n            if ((index >= 0) && (index < Gx.HCB.length)) {\n                // delete this UUID and shift the others down\n                Gx.HCB[index] = null;\n                for (var n = index; n < Gx.HCB.length - 1; n++) {\n                    Gx.HCB[n] = Gx.HCB[n + 1];\n                }\n                Gx.HCB.length -= 1;\n            }\n\n            // Find all layers tied to this HCB\n            if (HCB && index >= 0) {\n                for (var n = Gx.lyr.length - 1; n >= 0; n--) {\n                    if (Gx.lyr[n].hcb === HCB) {\n                        delete_layer(this, n);\n                    }\n                }\n            }\n            form_plotnote(this);\n            this.refresh();\n\n            // Notify listeners that a file has been deoverlayed\n            var evt = document.createEvent('Event');\n            evt.initEvent('file_deoverlayed', true, true);\n            if (fileName !== \"\") {\n                evt.fileName = fileName; // The fileName that was\n            }\n            // de-overlayed\n            mx.dispatchEvent(this._Mx, evt);\n        },\n\n        /**\n         * Zoom onto a given pixel range.\n         */\n        pixel_zoom: function(x1, y1, x2, y2, continuous) {\n            var r1 = pixel_to_real(this, x1, y1);\n            var r2 = pixel_to_real(this, x2, y2);\n\n            this.zoom(r1, r2, continuous);\n        },\n\n        percent_zoom: function(xperc, yperc, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            var xadj = 0;\n            if (Math.abs(xperc) < 1) {\n                xadj = Math.abs(Mx.stk[Mx.level].xmax - Mx.stk[Mx.level].xmin);\n                xadj = (xadj * xperc) / 2;\n            }\n\n            var yadj = 0;\n            if (Math.abs(yperc) < 1) {\n                yadj = Math.abs(Mx.stk[Mx.level].ymax - Mx.stk[Mx.level].ymin);\n                yadj = (yadj * yperc) / 2;\n            }\n\n            var ul = {\n                x: Math.max(Mx.stk[Mx.level].xmin + xadj, Gx.panxmin),\n                y: Math.max(Mx.stk[Mx.level].ymin + yadj, Gx.panymin)\n            };\n\n            var lr = {\n                x: Math.min(Mx.stk[Mx.level].xmax - xadj, Gx.panxmax),\n                y: Math.min(Mx.stk[Mx.level].ymax - yadj, Gx.panymax)\n            };\n\n            this.zoom(ul, lr, continuous);\n        },\n\n        /**\n         * Zoom onto a given region.\n         *\n         * @param ul\n         *            the uppler left corner\n         * @param {Number}\n         *            ul.x the upper left x pos in real plot value\n         * @param {Number}\n         *            ul.y the upper left y pos in real plot values\n         *\n         * @param lr\n         *            the lower right corner\n         * @param {Number}\n         *            lr the lower right x pos in real plot value\n         * @param {Number}\n         *            lr the lower right y pos in real plot values\n         *\n         * @param continuous\n         *            enter continuous zoom mode.  This will create a\n         *            new if you are on level 0, but stay on the same level\n         *            otherwise\n         */\n        zoom: function(ul, lr, continuous) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level >= 9) { // currently only allow 10 zooms\n                return;\n            }\n\n            if (ul.x === undefined) {\n                ul.x = Mx.stk[Mx.level].xmin;\n            }\n            if (ul.y === undefined) {\n                ul.y = Mx.stk[Mx.level].ymin;\n            }\n            if (lr.x === undefined) {\n                lr.x = Mx.stk[Mx.level].xmax;\n            }\n            if (lr.y === undefined) {\n                lr.y = Mx.stk[Mx.level].ymax;\n            }\n\n            if (lr.x < ul.x) {\n                var xtmp = lr.x;\n                lr.x = ul.x;\n                ul.x = xtmp;\n            }\n            if (lr.y < ul.y) {\n                var ytmp = lr.y;\n                lr.y = ul.y;\n                ul.y = ytmp;\n            }\n\n            var zstk = {};\n\n            // xscl/yscl are reset in sigplot.refresh\n            zstk.xscl = Mx.stk[Mx.level].xscl;\n            zstk.yscl = Mx.stk[Mx.level].yscl;\n\n            zstk.xmin = ul.x; // real world val at x1(origin=1,4) or\n            // x2(origin=2,4)\n            zstk.xmax = lr.x; // real world val at x2(origin=1,4) or\n            // x1(origin=2,4)\n            zstk.ymin = ul.y; // real world val at y2(origin=1,2) or\n            // y1(origin=3,4)\n            zstk.ymax = lr.y; // real world val at y1(origin=1,2) or\n            // y2(origin=3,4)\n            if (Gx.index) {\n                zstk.xmin = Math.min(zstk.xmin / Gx.xdelta);\n                zstk.xmax = Math.min(zstk.xmax / Gx.xdelta);\n            }\n\n            if (!continuous || (!Gx.inContinuousZoom)) {\n                // We aren't yet in continuous zoom mode\n                // so create a new level\n                Mx.stk.push(zstk);\n                Mx.level = Mx.stk.length - 1;\n            } else {\n                // Once in continuous zoom mode update the current level\n                Mx.stk[Mx.level] = zstk;\n            }\n            Gx.inContinuousZoom = continuous;\n\n            this.inZoom = true; // prevent recursive zooms\n            var evt = document.createEvent('Event');\n            evt.initEvent('zoom', true, true);\n            evt.level = Mx.level;\n            evt.inContinuousZoom = Gx.inContinuousZoom;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt); // TODO should we allow zoom to be cancelled?\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Unzoom one or more levels.\n         *\n         * @param [levels]\n         *            the number of levels to unzoom, if not provided unzoom\n         *            all.\n         */\n        unzoom: function(levels) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n\n            if (Mx.level === 0) {\n                return;\n            }\n\n            if (!levels) {\n                levels = Mx.stk.length;\n            }\n\n            while (levels > 0) {\n                if (Mx.level === 0) {\n                    break;\n                }\n                Mx.stk.pop();\n                Mx.level = Mx.stk.length - 1;\n                levels -= 1;\n            }\n\n            // If we are back at level 0, then\n            // rescale\n            if (Mx.level === 0) {\n                this.rescale();\n            }\n\n            // After any unzooms you can no longer remain in\n            // continuous zoom\n            Gx.inContinuousZoom = false;\n\n            this.inZoom = true; // prevent recursive zoom\n            // Send the event to listeners\n            var evt = document.createEvent('Event');\n            evt.initEvent('unzoom', true, true);\n            evt.level = Mx.level;\n            evt.xmin = Mx.stk[Mx.level].xmin;\n            evt.ymin = Mx.stk[Mx.level].ymin;\n            evt.xmax = Mx.stk[Mx.level].xmax;\n            evt.ymax = Mx.stk[Mx.level].ymax;\n            mx.dispatchEvent(Mx, evt);\n            this.inZoom = false;\n\n            this.refresh();\n        },\n\n        /**\n         * Expand pan-bars to the full range\n         */\n        expand_full: function(xpan, ypan) {\n            if (xpan) {\n                updateViewbox(this, this._Gx.panxmin, this._Gx.panxmax, \"X\");\n                // syncronous refresh is necessary, because expanding the xrange\n                // may cause more data to be read\n                this._refresh();\n            }\n\n            if (ypan) {\n                updateViewbox(this, this._Gx.panymin, this._Gx.panymax, \"Y\");\n            }\n\n            // async refresh is find here\n            this.refresh();\n        },\n\n        /**\n         * Set the current view bounds, if any bounds are not defined\n         * then they are kept as currently set.\n         * \n         * Will call an asyncronous refresh() after the new view box\n         * values have been set.\n         * \n         * @param {Object} ViewBounds \n         * @returns {number} ViewBounds.xmin\n         *     the abscissa X minimum value of the view box\n         * @returns {number} ViewBounds.xmax\n         *     the abscissa X maximum value of the view box\n         * @returns {number} ViewBounds.ymin\n         *     the abscissa Y minimum value of the view box\n         * @returns {number} ViewBounds.ymax\n         *     the abscissa Y maximum value of the view box\n         */\n        set_view: function({\n            xmin,\n            xmax,\n            ymin,\n            ymax\n        }) {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var k = Mx.level;\n\n            if (xmin !== undefined) {\n                Mx.stk[k].xmin = xmin;\n            }\n            if (xmax !== undefined) {\n                Mx.stk[k].xmax = xmax;\n            }\n            if (ymin !== undefined) {\n                Mx.stk[k].ymin = ymin;\n            }\n            if (ymax !== undefined) {\n                Mx.stk[k].ymax = ymax;\n            }\n            this.refresh();\n        },\n\n        /**\n         * Get the current view bounds\n         * \n         * @returns {Object} ViewBounds\n         *     the view bounds\n         * @returns {number} ViewBounds.xmin\n         *     the abscissa X minimum value of the view box\n         * @returns {number} ViewBounds.xmax\n         *     the abscissa X maximum value of the view box\n         * @returns {number} ViewBounds.ymin\n         *     the abscissa Y minimum value of the view box\n         * @returns {number} ViewBounds.ymax\n         *     the abscissa Y maximum value of the view box\n         */\n        get_view: function() {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var k = Mx.level;\n\n            return {\n                xmin: Mx.stk[k].xmin,\n                xmax: Mx.stk[k].xmax,\n                ymin: Mx.stk[k].ymin,\n                ymax: Mx.stk[k].ymax\n            };\n        },\n\n        /**\n         * Register this plot to mimic zoom/unzoom of other plot\n         *\n         * @param other\n         *     the other plot to mimic\n         *\n         * @param mask\n         *     the set of event to respond to\n         *\n         * @param mask.zoom\n         *     if true, respond to zoom events\n         *\n         * @param mask.xzoom\n         *     if true, respond to zoom events for the x-axis only\n         *\n         * @param mask.yzoom\n         *     if true, respond to zoom events for the y-axis only\n         *\n         * @param mask.unzoom\n         *     if true, respond to unzoom events\n         *\n         * @param mask.pan\n         *     if true, respond to pan events\n         *\n         * @param mask.xpan\n         *     if true, respond to pan events for the x-axis only\n         *\n         * @param mask.ypan\n         *     if true, respond to pan events for the y-axis only\n         */\n        mimic: function(other, mask) {\n            var self = this;\n\n            if (!mask) {\n                throw \"mimic must be called with at least one event mask\";\n            }\n\n            this.unmimic(other);\n\n            if (mask.zoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: event.ymin\n                        }, {\n                            x: event.xmax,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.xzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: event.xmin,\n                            y: undefined\n                        }, {\n                            x: event.xmax,\n                            y: undefined\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            } else if (mask.yzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    self.zoom({\n                            x: undefined,\n                            y: event.ymin\n                        }, {\n                            x: undefined,\n                            y: event.ymax\n                        },\n                        event.inContinuousZoom);\n                };\n                other.addListener(\"zoom\", f);\n                this.mimicListeners.listeners.zoom = f;\n            }\n\n            if (mask.unzoom) {\n                var f = function(event) {\n                    if (self.inZoom) {\n                        return;\n                    }\n                    if (event.level < self._Mx.level) {\n                        self.unzoom(self._Mx.level - event.level);\n                    }\n                };\n                other.addListener(\"unzoom\", f);\n                this.mimicListeners.listeners.unzoom = f;\n            }\n\n            if (mask.pan || mask.xpan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.xmin, event.xmax, \"X\");\n                };\n                other.addListener(\"xpan\", f);\n                this.mimicListeners.listeners.xpan = f;\n            }\n\n            if (mask.pan || mask.ypan) {\n                var f = function(event) {\n                    if (self.inPan) {\n                        return;\n                    }\n                    updateViewbox(self, event.ymin, event.ymax, \"Y\");\n                };\n                other.addListener(\"ypan\", f);\n                this.mimicListeners.listeners.ypan = f;\n            }\n\n            this.mimicListeners.other = other;\n        },\n\n\n        /**\n         * Unregister zoom/unzoom listeners added via previous call to unmimic.\n         */\n        unmimic: function(other) {\n            var other = this.mimicListeners.other;\n            if (other) {\n                var that = this;\n                Object.keys(this.mimicListeners.listeners).forEach(function(evt) {\n                    if (that.mimicListeners.listeners[evt]) {\n                        other.removeListener(evt, that.mimicListeners.listeners[evt]);\n                    }\n                });\n            }\n            this.mimicListeners = {\n                other: null,\n                listeners: {\n                    zoom: null,\n                    unzoom: null,\n                    xpan: null,\n                    ypan: null\n                }\n            };\n        },\n\n        /**\n         * Like refresh, but doesn't rerender data\n         *\n         * @example plot.redraw();\n         */\n        redraw: function() {\n            var Gx = this._Gx;\n            var Mx = this._Mx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            if (!Gx.plotData.valid) {\n                this.refresh();\n            } else {\n                ctx.drawImage(Gx.plotData,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2,\n                    Mx.l - 1,\n                    Mx.t - 1, (Mx.r - Mx.l) + 2, (Mx.b - Mx.t) + 2\n                );\n\n                draw_plugins(this);\n\n                Gx.cross_xpos = undefined;\n                Gx.cross_ypos = undefined;\n                if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                    draw_crosshairs(this);\n                }\n\n                if (Gx.always_show_marker || Gx.show_marker) {\n                    draw_marker(this);\n                }\n            }\n        },\n\n        /**\n         * Refresh the entire plot\n         *\n         * @example plot.refresh();\n         */\n        refresh: function() {\n            if (!this._Gx.initialized || this._Gx.refresh_after_ctr > 0) {\n                return;\n            }\n            var self = this;\n            mx.render(this._Mx, function() {\n                self._refresh();\n            });\n        },\n\n        /**\n         * Refresh the entire plot after a function has been called.\n         *\n         * The plot will be guaranteed to have refresh called after\n         * the provided function is executed; while the function is\n         * executed all plot refreshes will be disabled.\n         *\n         * In most cases, you should not need to use this function because\n         * SigPlot will do the right thing and refresh when necessary.  The\n         * primary reason for using this is to temporarily disable refreshes\n         * while many actions are occuring, but guarantee that the refresh\n         * occurs after all those actions have been applied.\n         *\n         * While calls to refresh() are disabled until after the callback has\n         * completed, any calls to _refresh() will continue to be processed.\n         *\n         * @param {refreshAfterCallback} cb\n         *     The function to execute\n         * @callback refreshAfterCallback\n         * @param {Plot} the plot\n         *\n         * @example plot.refresh_after((plot) => {plot.push(n, data)});\n         */\n        refresh_after: function(cb) {\n            this._Gx.refresh_after_ctr += 1;\n            try {\n                cb(this);\n            } finally {\n                this._Gx.refresh_after_ctr =\n                    Math.max(this._Gx.refresh_after_ctr - 1, 0);\n                if (this._Gx.refresh_after_ctr === 0) {\n                    this.refresh();\n                }\n            }\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        enable_listeners: function() {\n            var Mx = this._Mx;\n            mx.addEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.addEventListener(Mx, \"mousemove\", this.throttledOnMouseMove, false);\n            window.addEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.addEventListener(\"keydown\", Mx.onkeydown, false);\n            window.addEventListener(\"keyup\", Mx.onkeyup, false);\n            window.addEventListener(\"resize\", this.onresize, false);\n            document.addEventListener(\"mouseup\", this.docMouseUp, false);\n            mx.addEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.addEventListener(\"mousedown\", this.dragMouseDownHandler, false);\n            window.addEventListener(\"mousemove\", this.throttledDragOnMouseMove, false);\n            window.addEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.addEventListener(\"wheel\", this.wheelHandler, false);\n            window.addEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.addEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.addEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        /**\n         * Enable listeners for events on plot\n         */\n\n        disable_listeners: function() {\n            var Mx = this._Mx;\n\n            mx.removeEventListener(Mx, \"mousedown\", this.onmousedown, false);\n            mx.removeEventListener(Mx, \"mousemove\", this.throttledOnMouseMove,\n                false);\n            mx.removeEventListener(Mx, \"mouseup\", this.mouseup, false);\n            window.removeEventListener(\"mouseup\", Mx.onmouseup, false);\n            window.removeEventListener(\"keydown\", Mx.onkeydown, false);\n            window.removeEventListener(\"keyup\", Mx.onkeyup, false);\n            window.removeEventListener(\"resize\", this.onresize, false);\n            document.removeEventListener(\"mouseup\", this.docMouseUp, false);\n            window.removeEventListener(\"mousedown\", this.dragMouseDownHandler,\n                false);\n            window.removeEventListener(\"mousemove\", this.throttledDragOnMouseMove,\n                false);\n            window.removeEventListener(\"mouseup\", this.dragMouseUpHandler, false);\n            window.removeEventListener(\"wheel\", this.wheelHandler, false);\n            window.removeEventListener(\"mousewheel\", this.wheelHandler, false);\n            window.removeEventListener(\"DOMMouseScroll\", this.wheelHandler, false);\n            window.removeEventListener(\"keypress\", this.onkeypress, false);\n        },\n\n        checkresize: function() {\n            if (mx.checkresize(this._Mx)) {\n                this.refresh();\n            }\n        },\n        addColorMaps: function(colormaps) {\n            colormaps.forEach(function(cmap) {\n                if (cmap.hasOwnProperty(\"name\")) {\n                    m.Mc.colormap.push(cmap);\n                }\n\n            });\n\n        },\n\n        _refresh: function() {\n            var Mx = this._Mx;\n            var Gx = this._Gx;\n            var ctx = Mx.canvas.getContext(\"2d\");\n            var plugin_index = 0;\n\n            if (Gx.hold) {\n                return;\n            }\n            var font_width = Mx.font_width;\n            if (Mx.font_scaled) {\n                font_width = Math.min(Mx.font_width, Mx.width / 64);\n            }\n            mx.set_font(Mx, font_width);\n            Gx.pthk = Mx.text_w * 1.5;\n\n            if (Gx.specs) {\n                var ytimecode = false;\n                if (Gx.ylab === 4) { //time-based tics\n                    ytimecode = true;\n                }\n                // Set left and right edges\n                if (Gx.show_y_axis === true) {\n                    Mx.l = Mx.text_w * 6;\n                    if (ytimecode) {\n                        // If we are in ytimecode, determine if we need the extra\n                        // space to hold the entire YYYY:MM:DD\n                        var need_full_ymd = ((Math.abs(Mx.stk[0].ymin) >= 31536000) ||\n                            (Math.abs(Mx.stk[0].ymax) >= 31536000));\n                        if (need_full_ymd) {\n                            Mx.l = Mx.text_w * 11;\n                        }\n                    }\n                } else {\n                    Mx.l = 1;\n                }\n                if (Gx.pan === true) {\n                    Mx.r = Mx.width - (Gx.pthk + 2 * Mx.text_w);\n                } else {\n                    Mx.r = Mx.width - 5;\n                }\n\n                // Set top and bottom\n                if (Gx.show_readout) {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - Mx.text_h * 4;\n                    } else {\n                        Mx.b = Mx.height - Mx.text_h * 3;\n                    }\n                } else if (Gx.x_scrollbar_location === \"bottom\") {\n                    Mx.t = Mx.text_h * 2;\n                    if (Gx.pan) {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 3;\n                        } else {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        }\n                    } else {\n                        if (Gx.show_x_axis) {\n                            Mx.b = Mx.height - Mx.text_h * 2;\n                        } else {\n                            Mx.b = Mx.height - 5;\n                        }\n                    }\n                } else {\n                    if (Gx.pan) {\n                        Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    } else {\n                        Mx.t = 1;\n                    }\n                    if (Gx.show_x_axis) {\n                        Mx.b = Mx.height - (Mx.text_h * 3) / 2;\n                    } else {\n                        Mx.b = Mx.height - 2;\n                    }\n                }\n\n                // set left and right edges for X scrollbar\n                if (Gx.show_readout) {\n                    // If there is a readout, show it in the bottom-right\n                    // next to the readout\n                    Gx.pl = Mx.text_w * 50;\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top next to the label\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        Gx.pl = Mx.l;\n                    } else {\n                        Gx.pl = Mx.text_w * 35;\n                    }\n                }\n                Gx.pr = Math.max(Gx.pl + Mx.text_w * 9, Mx.r);\n\n                // set top scrollbar edge for X scrollbar\n                if (Gx.show_readout) {\n                    if (Gx.show_x_axis) {\n                        Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                    } else {\n                        Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                    }\n                } else {\n                    // Otherwise, by default it conforms to legacy\n                    // behaviour and renders at the top\n                    if (Gx.x_scrollbar_location === \"bottom\") {\n                        if (Gx.show_x_axis) {\n                            Gx.pt = Mx.b + Mx.text_h + (Mx.height - Mx.b - Mx.text_h - Gx.pthk) / 2;\n                        } else {\n                            Gx.pt = Mx.b + (Mx.height - Mx.b - Gx.pthk) / 2;\n                        }\n                    } else {\n                        Gx.pt = (Mx.t - Gx.pthk) / 2;\n                    }\n                }\n                Gx.lbtn = Mx.text_h + Mx.text_w + 2;\n            } else {\n                if (Gx.pan) {\n                    Mx.t = Gx.pthk + 2 * Mx.text_w;\n                    Mx.r = Mx.width - (Gx.pthk + Mx.text_w);\n                } else {\n                    Mx.t = 1;\n                    Mx.r = Mx.width - 2;\n                }\n                Mx.b = Mx.height - 2;\n                Mx.l = 1;\n                Gx.pl = Mx.l;\n                Gx.pr = Mx.r;\n                Gx.pt = (Mx.t - Gx.pthk) / 2;\n                Gx.lbtn = 0;\n            }\n\n            // pan select ranges\n            Gx.pyl = Mx.r + (Mx.width - Mx.r - Gx.pthk) / 2 + 1;\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n            }\n\n            if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                //turn cross hairs on\n                Gx.cross = true;\n\n                //Move the plot over to make room\n                var prev_Mx_r = Mx.r;\n                Mx.r = prev_Mx_r - 100;\n\n                //Move the plot up to make room\n                var prev_Mx_b = Mx.b;\n                Mx.b = prev_Mx_b - 100;\n            }\n\n            if (Gx.xcut_now) {\n                Mx.canvas.width = Gx.x_box_w - 1;\n                Mx.canvas.height = Gx.x_box_h;\n                Mx.r = Gx.x_box_w - 1;\n                Mx.l = 0;\n                Mx.b = Gx.x_box_h;\n                Mx.t = 0;\n            }\n\n            if (Gx.ycut_now) {\n                Mx.canvas.width = Gx.y_box_h - 1;\n                Mx.canvas.height = Gx.y_box_w;\n                Mx.r = Gx.y_box_h - 1;\n                Mx.l = 0;\n                Mx.b = Gx.y_box_w;\n                Mx.t = 0;\n            }\n\n            if ((Gx.panymin === undefined) || (Gx.panymax === undefined)) {\n                scale_base(this, {});\n            }\n\n            // Force the plot render area to pixel boundaries\n            Mx.l = Math.floor(Mx.l);\n            Mx.r = Math.ceil(Mx.r);\n            Mx.t = Math.floor(Mx.t);\n            Mx.b = Math.ceil(Mx.b);\n\n            // set virtual window size/pos/scaling for current level\n            var k = Mx.level;\n            Mx.stk[k].x1 = Mx.l;\n            Mx.stk[k].y1 = Mx.t;\n            Mx.stk[k].x2 = Mx.r;\n            Mx.stk[k].y2 = Mx.b;\n            Mx.stk[k].xscl = (Mx.stk[k].xmax - Mx.stk[k].xmin) / (Mx.r - Mx.l);\n            Mx.stk[k].yscl = (Mx.stk[k].ymax - Mx.stk[k].ymin) / (Mx.b - Mx.t);\n\n            // In case things have rescaled\n            var re = pixel_to_real(this, Mx.xpos, Mx.ypos);\n            Gx.retx = re.x;\n            Gx.rety = re.y;\n\n            // modify stack for section plotting\n            //if (Gx.sections) {\n            // TODO\n            //}\n\n            if (Gx.panning === 0 || Gx.panning !== 0) { // TODO Gx.panning !==\n                // 0?? Does this work?\n                Gx.plotData.valid = false;\n                mx.clear_window(Mx);\n            } //else if (!Gx.specs) {\n            // TODO\n            //} else if (Gx.panning === 1) {\n            // TODO\n            //} else {\n            // TODO\n            //}\n\n            var xlab = Gx.xlab;\n            var ylab = Gx.ylab;\n\n            if (xlab === undefined) {\n                xlab = 30;\n            }\n            if (Gx.index) {\n                xlab = 0;\n            }\n\n            if (ylab === undefined) {\n                var cx = ((Gx.lyr.length > 0) && Gx.lyr[0].cx);\n                if (Gx.cmode === 1) {\n                    ylab = 28;\n                } else if (Gx.cmode === 2) {\n                    ylab = Gx.plab;\n                } else if ((Gx.cmode === 3) && (cx)) {\n                    ylab = 21;\n                } else if (Gx.cmode === 4) {\n                    ylab = 22;\n                } else if (Gx.cmode === 5) {\n                    ylab = 22;\n                    xlab = 21;\n                } else if (Gx.cmode === 6) {\n                    ylab = 26;\n                } else if (Gx.cmode === 7) {\n                    ylab = 27;\n                } else {\n                    ylab = 0;\n                }\n            }\n\n            if (Gx.specs) {\n                if (Gx.sections === 0) {\n                    var drawaxis_flags = {\n                        grid: Gx.grid\n                    };\n                    if (Gx.panning === 2) {\n                        drawaxis_flags.noxtlab = true;\n                    } // TODO Does this work??\n                    if (!Gx.show_x_axis) {\n                        drawaxis_flags.noxtics = true;\n                        drawaxis_flags.noxtlab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (!Gx.show_y_axis) {\n                        drawaxis_flags.noytics = true;\n                        drawaxis_flags.noytlab = true;\n                        drawaxis_flags.noyplab = true;\n                    }\n                    if (Gx.specs && !Gx.show_readout && !Gx.pan) {\n                        drawaxis_flags.noyplab = true;\n                        drawaxis_flags.noxplab = true;\n                    }\n                    if (Gx.gridBackground) {\n                        drawaxis_flags.fillStyle = Gx.gridBackground;\n                    }\n                    if (Gx.gridStyle) {\n                        drawaxis_flags.gridStyle = Gx.gridStyle;\n                    }\n                    if (Gx.xmult) {\n                        drawaxis_flags.xmult = Gx.xmult;\n                    }\n                    if (Gx.ymult) {\n                        drawaxis_flags.ymult = Gx.ymult;\n                    }\n                    if (xlab === 4) { //time-based tics\n                        drawaxis_flags.xtimecode = true;\n                    }\n                    if (ylab === 4) { //time-based tics\n                        drawaxis_flags.ytimecode = true;\n                    }\n                    if (Gx.xlabel !== undefined) {\n                        drawaxis_flags.xlabel = Gx.xlabel;\n                    }\n                    if (Gx.ylabel !== undefined) {\n                        drawaxis_flags.ylabel = Gx.ylabel;\n                    }\n                    mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab, drawaxis_flags);\n                } //else {\n                // Not implemented yet\n                //}\n\n                var i = Gx.lbtn - 2;\n\n                if (Gx.show_readout) {\n                    if (!Gx.no_legend_button) {\n                        if (Gx.legend) {\n                            Gx.legendBtnLocation = {\n                                x: Mx.width - Gx.lbtn,\n                                y: 2,\n                                width: i,\n                                height: i\n                            };\n                            mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1, -2,\n                                'L');\n                        } else {\n                            Gx.legendBtnLocation = {\n                                x: Mx.width - Gx.lbtn,\n                                y: 2,\n                                width: i,\n                                height: i\n                            };\n                            mx.shadowbox(Mx, Mx.width - Gx.lbtn, 2, i, i, 1,\n                                2, 'L');\n                        }\n                    }\n                    display_specs(this);\n                } else {\n                    Gx.legendBtnLocation = null;\n                }\n            } else if (Gx.grid && Gx.sections >= 0) {\n                var drawaxis_flags = {\n                    grid: true,\n                    noaxisbox: true,\n                    noxtics: true,\n                    noxtlab: true,\n                    noxplab: true,\n                    noytics: true,\n                    noytlab: true,\n                    noyplab: true\n                };\n                mx.drawaxis(Gx, Mx, Gx.xdiv, Gx.ydiv, xlab, ylab,\n                    drawaxis_flags);\n            }\n\n            draw_layers(this);\n\n            draw_accessories(this, 4);\n\n\n\n            draw_plugins(this);\n\n\n            Gx.cross_xpos = undefined;\n            Gx.cross_ypos = undefined;\n            if ((!Mx.warpbox) && (this.mouseOnCanvas)) {\n                draw_crosshairs(this);\n                if (!Gx.y_cut_press_on && !Gx.x_cut_press_on && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                    draw_p_cuts(this);\n                }\n            }\n\n            if (Gx.always_show_marker || Gx.show_marker) {\n                draw_marker(this);\n            }\n        }\n\n    };\n\n    // /////////////////////////////////////////////////////////////////////////\n    // Private methods and objects\n    // /////////////////////////////////////////////////////////////////////////\n\n    /**\n     * Map integer cmode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cxm = [\"Ma\", \"Ph\", \"Re\", \"Im\", \"IR\", \"Lo\", \"L2\"];\n\n    /**\n     * Map integer abscissa mode to string equivalent.\n     *\n     * @memberOf sigplot\n     * @private\n     */\n    var cam = [\"(absc)\", \"(indx)\", \"(1/ab)\", \"(dydx)\"];\n\n\n\n    /**\n     * This object holds the data associated with layers in the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function SIGPLOTLAYER() {\n\n        this.xbuf = undefined; // raw (ArrayBuffer) of ABSC data\n        this.ybuf = undefined; // raw (ArrayBuffer) of ORD data\n\n        this.offset = 0.0;\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n        this.imin = 0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.name = \"\";\n        this.cx = false;\n        this.hcb = undefined; // index in Gx.HCB\n        // xbufn = xbuf.byteLength\n        // ybufn = ybuf.byteLength\n        this.size = 0;\n\n        this.display = true;\n        this.color = 0;\n        this.line = 3; // 0=none, 1-vertical, 2-horizontal, 3-connecting\n        this.thick = 1; // negative for dashed\n        this.symbol = 0;\n        this.radius = 3;\n\n        this.skip = 0; // number of elements between ord values\n        this.xsub = 0;\n        this.ysub = 0;\n        this.xdata = false; // true if X data is data from file\n\n        this.options = {};\n    }\n\n    /**\n     * The graphics structure object used to hold state about the plot.\n     *\n     * @constructor\n     * @memberOf sigplot\n     * @private\n     */\n    function GX() {\n        this.initialized = false;\n        this.xptr = undefined; // xpoints as anything \"array-like\"...\n        this.yptr = undefined; // ypoints as anything \"array-like\"...\n\n        this.retx = 0.0; // absc coord. at mouse location\n        this.rety = 0.0;\n        this.xmrk = 0.0; // absc coord of mark\n        this.ymrk = 0.0;\n        this.aretx = 0.0; // absc coord. at mouse location\n        this.arety = 0.0;\n\n        this.xstart = 0.0;\n        this.xdelta = 0.0;\n\n        this.panxmin = 0.0;\n        this.panxmax = 0.0;\n        this.panymin = 0.0;\n        this.panymax = 0.0;\n        this.xmin = 0.0;\n        this.xmax = 0.0;\n        this.xmult = undefined;\n        this.ymin = 0.0;\n        this.ymax = 0.0;\n        this.ymult = undefined;\n        this.zmin = undefined;\n        this.zmax = undefined;\n        this.zoff = 0;\n        this.dbmin = 0.0;\n        this.pxscl = 0.0;\n        this.pyscl = 0.0;\n        this.pmt = 0.0;\n\n        this.note = \"\";\n        // this.mouse unnecssary because we don't have res table\n        this.format = \"\";\n\n        this.pl = 0;\n        this.pr = 0;\n        this.pt = 0;\n        this.pb = 0;\n        this.px1 = 0; // specifies plotting field\n        this.px2 = 0;\n        this.py1 = 0;\n        this.py2 = 0;\n\n        this.pyl = 0;\n        this.pthk = 0; // thickness of pan drag box\n\n        this.modlayer = 0;\n        this.modsource = 0;\n        this.modified = false;\n        this.modmode = 0;\n\n        this.xdiv = 0;\n        this.ydiv = 0;\n\n        this.all = false;\n        this.expand = false;\n        this.cross = false;\n        this.grid = true;\n        this.gridBackground = undefined;\n        this.index = false;\n        this.pan = true;\n        this.specs = true;\n        this.legend = true;\n        this.xdata = false;\n\n        this.show_x_axis = true;\n        this.show_y_axis = true;\n        this.show_readout = true;\n        this.hide_note = false;\n        this.autohide_readout = false;\n        this.autohide_panbars = false;\n        this.panning = undefined;\n        this.panmode = 0; // TODO Is this a good default value? Where is this\n        // changed?\n        this.hold = false;\n\n        this.sections = 0; // number of plot sections, -1 for layers\n        this.iysec = 0;\n        this.nsec = 0; // actual number of sections\n        this.isec = 0; // current sections\n\n        this.xlab = undefined;\n        this.xlabel = undefined;\n        this.ylab = undefined;\n        this.ylabel = undefined;\n\n        // 0 - use HTML5 canvas smoothing\n        // 1 - average\n        // 2 - min\n        // 3 - max\n        // 4 - first\n        // 5 - max abs\n        this.xcompression = 0;\n\n        this.default_rubberbox_action = \"zoom\";\n        this.default_rubberbox_mode = \"box\";\n\n        this.wheelscroll_mode_natural = true;\n        this.scroll_time_interval = 10;\n\n        this.repeatPanning = undefined;\n        this.stillPanning = undefined; // TODO maybe merge this variable with\n        // Gx.panning in future?\n\n        this.autol = -1;\n\n        this.lineSmoothing = false; // not implemented\n        this.rasterSmoothing = false;\n\n        this.wheelZoom = false;\n        this.wheelZoomPercent = 0.2;\n        this.inContinuousZoom = false;\n\n        this.lyr = [];\n        this.HCB = [];\n        this.HCB_UUID = {};\n        this.plugins = [];\n\n        this.plotData = document.createElement(\"canvas\");\n        this.plotData.valid = false;\n\n        // Large colorbar info, like button locations\n        this.lg_colorbar = false;\n\n        // Colorbar button top or bottom positions\n        this.cbb_top_x1 = 0;\n        this.cbb_top_y1 = 0;\n        this.cbb_bot_x1 = 0;\n        this.cbb_bot_y1 = 0;\n        this.cbb_width = 0;\n        this.cbb_height = 0;\n\n        //P_cuts info\n        this.p_cuts = false;\n        this.x_box_x = 0;\n        this.x_box_y = 0;\n        this.x_box_h = 0;\n        this.x_box_w = 0;\n        this.y_box_x = 0;\n        this.y_box_y = 0;\n        this.y_box_h = 0;\n        this.y_box_w = 0;\n        this.p_cuts_xpos = undefined;\n        this.p_cuts_ypos = undefined;\n        this.x_cut_data = [];\n        this.y_cut_data = [];\n        //the plot to hold the x-cut on bottom\n        this.xcut = undefined;\n        //layer xcut that will be displayed on pop-up\n        this.xcut_layer = undefined;\n        this.x_cut_press_on = false;\n        //variable that is true if the bottom xcut is being drawn\n        this.xcut_now = false;\n        //the plot to hold the y-cut\n        this.ycut = undefined;\n        //layer ycut that will be displayed on pop-up\n        this.ycut_layer = undefined;\n        this.y_cut_press_on = false;\n        //variable that is true if the ycut is being drawn\n        this.ycut_now = false;\n        this.ylabel_stash = undefined;\n        this.cut_stash = undefined;\n        //div to hold x-cut\n        this.element1 = undefined;\n        //div to hold y cut\n        this.element2 = undefined;\n\n        //x and y sticky key configuration (\"automatic\" displays point on\n        //1D and cut on 2D, \"disable\" doesn't display anything, \"pop-up\"\n        //displays point on both, and \"cuts\" displays only cuts on 2D)\n        this.xyKeys = \"automatic\";\n        //true if the x value is being displayed on plot\n        this.x_pop_now = false;\n        //true if the y value is being displayed on plot\n        this.y_pop_now = false;\n\n        //the drawmode and autol before the x or y cut was showing\n        this.old_drawmode = undefined;\n        this.old_autol = undefined;\n\n        // refresh-reference-counter\n        this.refresh_after_ctr = 0;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setup_cmap(plot, cmap) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // If a color map array was provided make a custom map\n        if (Array.isArray(cmap)) {\n            var custom_cmap = {\n                name: \"Custom\",\n                colors: cmap\n            };\n            if (m.Mc.colormap[m.Mc.colormap.length - 1].name === \"Custom\") {\n                m.Mc.colormap[m.Mc.colormap.length - 1].colors = cmap;\n            } else {\n                m.Mc.colormap.push(custom_cmap);\n            }\n            Gx.cmap = m.Mc.colormap.length - 1;\n        } else if (typeof cmap === \"string\") {\n            Gx.cmap = -1;\n            for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n                if (m.Mc.colormap[xc].name === cmap) {\n                    Gx.cmap = xc;\n                    break;\n                }\n            }\n        } else {\n            Gx.cmap = cmap;\n        }\n\n        if (Gx.ncolors < 0) {\n            Gx.ncolors = -1 * Gx.ncolors;\n            Gx.cmap = Math.max(1, Gx.cmap);\n        }\n        if ((Gx.cmap < 0) || (Gx.cmap > m.Mc.colormap.length)) {\n            if (Gx.cmode === 2) {\n                Gx.cmap = 2; // wheel\n            } else {\n                Gx.cmap = 1; // ramp\n            }\n        }\n\n        mx.colormap(Mx, m.Mc.colormap[Gx.cmap].colors, Gx.ncolors);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_x(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.aretx.toString();\n        if (Gx.iabsc === 1) {\n            mx.message(Mx, \"INDEX = \" + ls);\n        } else if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/X = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"X = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_timecode(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.lyr.length > 0) {\n            //var hcb = Gx.HCB[Gx.lyr[0].hcb];\n            var hcb = Gx.lyr[0].hcb; // mmm-TODO-needs investigation\n            if (hcb) {\n                if ((hcb[\"class\"] === 1) && ((hcb.xunits === 1) || (hcb.xunits === 4))) {\n                    mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.retx), true);\n                } else if ((hcb[\"class\"] === 2) && ((hcb.yunits === 1) || (hcb.yunits === 4))) {\n                    mx.message(Mx, \"Time = \" + m.sec2tod(hcb.timecode + Gx.rety), true);\n                } else {\n                    mx.message(Mx, \"Time = UNK\");\n                }\n            }\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_y(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ls = Gx.arety.toString();\n        if (Gx.iabsc === 2) {\n            mx.message(Mx, \"1/Y = \" + ls);\n        } else {\n            //if (Gx.xlab === 4) {\n            // TODO\n            //}\n            mx.message(Mx, \"Y = \" + ls);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_show_z(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.zmin !== undefined && Gx.zmax !== undefined) { // at least one layer has a z dimension\n            var msg;\n\n            if (Gx.lyr.length === 1) {\n                var z = Gx.lyr[0].get_z(Gx.retx, Gx.rety);\n                if (z !== undefined) {\n                    msg = \"Z = \" + z.toString();\n                }\n            } else {\n                msg = null; // TODO we need to think of what we want to display here\n            }\n\n            if (msg) {\n                mx.message(Mx, msg);\n            }\n        }\n    }\n\n    /**\n     * Constructs a menu for updating the pan scale of the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param command\n     *            The scroll direction to use. Either \"XPAN\" or \"YPAN\" are\n     *            acceptable.\n     * @private\n     */\n    function sigplot_scrollScaleMenu(plot, command) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        mx.menu(Mx, {\n            title: \"SCROLLBAR\",\n            refresh: function() {\n                plot.refresh();\n            },\n            finalize: function() {\n                mx.addEventListener(Mx, \"mousedown\",\n                    plot.onmousedown, false);\n                plot.refresh();\n            },\n            items: [{\n                text: \"Expand Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_EXPAND, command);\n                }\n            }, {\n                text: \"Shrink Range\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_SHRINK, command);\n                }\n            }, {\n                text: \"Expand Full\",\n                handler: function() {\n                    middleClickScrollMenuAction(plot,\n                        mx.SB_FULL, command);\n                }\n            }]\n        });\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_mainmenu(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        // show mainmenu\n        //\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        // Sub-menus\n        var CONTROLS_MENU = {\n            text: \"Cntrls...\",\n            menu: {\n                title: \"CONTROLS OPTIONS\",\n                items: [{\n                    text: \"Continuous (Disabled)\",\n                    checked: Gx.cntrls === -2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -2\n                        });\n                    }\n                }, {\n                    text: \"LM Click (Disabled)\",\n                    checked: Gx.cntrls === -1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: -1\n                        });\n                    }\n                }, {\n                    text: \"Off\",\n                    checked: Gx.cntrls === 0,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 0\n                        });\n                    }\n                }, {\n                    text: \"LM Click\",\n                    checked: Gx.cntrls === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 1\n                        });\n                    }\n                }, {\n                    text: \"Continuous\",\n                    checked: Gx.cntrls === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            xcnt: 2\n                        });\n                    }\n                }]\n            }\n        };\n\n        var CXMODE_MENU = {\n            text: \"CX Mode...\",\n            menu: {\n                title: \"COMPLEX MODE\",\n                items: [{\n                    text: \"Magnitude\",\n                    checked: Gx.cmode === 1,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 1\n                        });\n                    }\n                }, {\n                    text: \"Phase\",\n                    checked: Gx.cmode === 2,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 2\n                        });\n                    }\n                }, {\n                    text: \"Real\",\n                    checked: Gx.cmode === 3,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 3\n                        });\n                    }\n                }, {\n                    text: \"Imaginary\",\n                    checked: Gx.cmode === 4,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 4\n                        });\n                    }\n                }, {\n                    text: \"IR: Imag/Real\",\n                    checked: Gx.cmode === 5,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 5\n                        });\n                    }\n                }, {\n                    text: \"10*Log10\",\n                    checked: Gx.cmode === 6,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 6\n                        });\n                    }\n                }, {\n                    text: \"20*Log10\",\n                    checked: Gx.cmode === 7,\n                    handler: function() {\n                        plot.change_settings({\n                            cmode: 7\n                        });\n                    }\n                }]\n            }\n        };\n\n        var SCALING_MENU = {\n            text: \"Scaling...\",\n            menu: {\n                title: \"SCALING\",\n                items: [{\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoy === 0),\n                    handler: function() {\n                        Gx.autoy = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Y Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].ymin,\n                                            parseFloat(finalValue),\n                                            \"Y\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].ymax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].ymin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].ymax,\n                                        \"Y\");\n                                } else {\n                                    plot.refresh();\n                                }\n\n                            }, Mx.stk[Mx.level].ymin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoy === 1),\n                    handler: function() {\n                        Gx.autoy = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoy === 2),\n                    handler: function() {\n                        Gx.autoy = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoy === 3),\n                    handler: function() {\n                        Gx.autoy = 3;\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autox === 0),\n                    handler: function() {\n                        Gx.autox = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"X Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            finalValue = 0;\n                                        }\n                                        updateViewbox(\n                                            plot,\n                                            Mx.stk[Mx.level].xmin,\n                                            parseFloat(finalValue),\n                                            \"X\");\n                                    } else {\n                                        plot.refresh();\n                                    }\n                                }, Mx.stk[Mx.level].xmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Mx.stk[Mx.level].xmin) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 0;\n                                    }\n                                    updateViewbox(plot,\n                                        parseFloat(finalValue),\n                                        Mx.stk[Mx.level].xmax,\n                                        \"X\");\n                                } else {\n                                    plot.refresh();\n                                }\n                            }, Mx.stk[Mx.level].xmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autox === 1),\n                    handler: function() {\n                        Gx.autox = 1;\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autox === 2),\n                    handler: function() {\n                        Gx.autox = 2;\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autox === 3),\n                    handler: function() {\n                        Gx.autox = 3;\n                    }\n                }, {\n                    text: \"Z Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Parameters...\",\n                    checked: (Gx.autoz === 0),\n                    handler: function() {\n                        Gx.autoz = 0;\n\n                        var nextPrompt = function() {\n                            setupPrompt(\n                                plot,\n                                \"Z Axis Max:\",\n                                mx.floatValidator,\n                                function(finalValue) {\n                                    var floatFinalValue = parseFloat(finalValue);\n                                    if (floatFinalValue !== Gx.zmax) {\n                                        // Only update if different\n                                        // value\n                                        if (finalValue === \"\") {\n                                            floatFinalValue = 0;\n                                        }\n                                        plot.change_settings({\n                                            zmax: floatFinalValue\n                                        });\n                                    }\n                                }, Gx.zmax,\n                                undefined, undefined, undefined);\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Z Axis Min:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                var floatFinalValue = parseFloat(finalValue);\n                                if (floatFinalValue !== Gx.zmin) {\n                                    if (finalValue === \"\") {\n                                        floatFinalValue = 0;\n                                    }\n                                    plot.change_settings({\n                                        zmin: floatFinalValue\n                                    });\n                                }\n                            }, Gx.zmin, undefined,\n                            undefined, nextPrompt);\n                    }\n                }, {\n                    text: \"Min Auto\",\n                    checked: (Gx.autoz === 1),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 1\n                        });\n                    }\n                }, {\n                    text: \"Max Auto\",\n                    checked: (Gx.autoz === 2),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 2\n                        });\n                    }\n                }, {\n                    text: \"Full Auto\",\n                    checked: (Gx.autoz === 3),\n                    handler: function() {\n                        plot.change_settings({\n                            autoz: 3\n                        });\n                    }\n                }]\n            }\n        };\n\n        var GRID_MENU = {\n            text: \"Grid\",\n            handler: function() {\n                plot.change_settings({\n                    grid: !Gx.grid\n                });\n            }\n        };\n\n        var SETTINGS_MENU = {\n            text: \"Settings...\",\n            menu: {\n                title: \"SETTINGS\",\n                items: [{\n                    text: \"ALL Mode\",\n                    checked: Gx.all,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            all: !Gx.all\n                        });\n                    }\n                }, {\n                    text: \"Controls...\",\n                    menu: {\n                        title: \"CONTROLS OPTIONS\",\n                        items: [{\n                            text: \"Continuous (Disabled)\",\n                            checked: Gx.cntrls === -2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -2\n                                });\n                            }\n                        }, {\n                            text: \"LM Click (Disabled)\",\n                            checked: Gx.cntrls === -1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: -1\n                                });\n                            }\n                        }, {\n                            text: \"Off\",\n                            checked: Gx.cntrls === 0,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 0\n                                });\n                            }\n                        }, {\n                            text: \"LM Click\",\n                            checked: Gx.cntrls === 1,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 1\n                                });\n                            }\n                        }, {\n                            text: \"Continuous\",\n                            checked: Gx.cntrls === 2,\n                            handler: function() {\n                                plot.change_settings({\n                                    xcnt: 2\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Mouse...\",\n                    menu: {\n                        title: \"MOUSE OPTIONS\",\n                        items: [{\n                            text: \"LM Drag (Zoom)\",\n                            checked: Gx.default_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"LM Drag (Select)\",\n                            checked: Gx.default_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"LM Drag (Disabled)\",\n                            checked: Gx.default_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"RM Drag (Zoom)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"zoom\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"zoom\";\n                            }\n                        }, {\n                            text: \"RM Drag (Select)\",\n                            checked: Gx.default_rightclick_rubberbox_action === \"select\",\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = \"select\";\n                            }\n                        }, {\n                            text: \"RM Drag (Disabled)\",\n                            checked: Gx.default_rightclick_rubberbox_action === null,\n                            handler: function() {\n                                Gx.default_rightclick_rubberbox_action = null;\n                            }\n                        }, {\n                            text: \"Mode...\",\n                            menu: {\n                                title: \"MOUSE Mode\",\n                                items: [{\n                                    text: \"Box\",\n                                    checked: Gx.default_rubberbox_mode === \"box\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"box\";\n                                    }\n\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.default_rubberbox_mode === \"horizontal\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.default_rubberbox_mode === \"vertical\",\n                                    handler: function() {\n                                        Gx.default_rubberbox_mode = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"CROSShairs...\",\n                            menu: {\n                                title: \"Crosshairs Mode\",\n                                items: [{\n                                    text: \"Off\",\n                                    checked: !Gx.cross,\n                                    handler: function() {\n                                        Gx.cross = false;\n                                    }\n\n                                }, {\n                                    text: \"On\",\n                                    checked: Gx.cross === true,\n                                    handler: function() {\n                                        Gx.cross = true;\n                                    }\n                                }, {\n                                    text: \"Horizontal\",\n                                    checked: Gx.cross === \"horizontal\",\n                                    handler: function() {\n                                        Gx.cross = \"horizontal\";\n                                    }\n                                }, {\n                                    text: \"Vertical\",\n                                    checked: Gx.cross === \"vertical\",\n                                    handler: function() {\n                                        Gx.cross = \"vertical\";\n                                    }\n                                }]\n                            }\n                        }, {\n                            text: \"Mousewheel Natural Mode\",\n                            checked: Gx.wheelscroll_mode_natural,\n                            style: \"checkbox\",\n                            handler: function() {\n                                plot\n                                    .change_settings({\n                                        wheelscroll_mode_natural: !Gx.wheelscroll_mode_natural\n                                    });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"CROSShairs\",\n                    checked: Gx.cross,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            cross: !Gx.cross\n                        });\n                    }\n                }, {\n                    text: \"GRID\",\n                    checked: Gx.grid,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            grid: !Gx.grid\n                        });\n                    }\n                }, {\n                    text: \"INDEX Mode\",\n                    checked: Gx.index,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            index: !Gx.index\n                        });\n                    }\n                }, {\n                    text: \"LEGEND\",\n                    checked: Gx.legend,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            legend: !Gx.legend\n                        });\n                    }\n                }, {\n                    text: \"PAN Scrollbars\",\n                    checked: Gx.pan,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            pan: !Gx.pan\n                        });\n                    }\n                }, {\n                    text: \"PHase UNITS...\",\n                    menu: {\n                        title: \"PHASE UNITS\",\n                        items: [{\n                            text: \"Radians\",\n                            checked: Gx.plab === 23,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'R'\n                                });\n                            }\n\n                        }, {\n                            text: \"Degrees\",\n                            checked: Gx.plab === 24,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'D'\n                                });\n                            }\n                        }, {\n                            text: \"Cycles\",\n                            checked: Gx.plab === 25,\n                            handler: function() {\n                                plot.change_settings({\n                                    phunits: 'C'\n                                });\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"SPECS\",\n                    checked: Gx.specs,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            specs: !Gx.specs\n                        });\n                    }\n                }, {\n                    text: \"P-Cuts\",\n                    checked: Gx.p_cuts,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            p_cuts: !Gx.p_cuts\n                        });\n                    }\n                }, {\n                    text: \"Large Colorbar\",\n                    checked: Gx.lg_colorbar,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            lg_colorbar: !Gx.lg_colorbar\n                        });\n                    }\n                }, {\n                    text: \"XDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxXDIV = m.trunc(Mx.width / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxXDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxXDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xdiv) { // Only\n                                    // update if different value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.xdiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xdiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"XLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            console.log(\"The value is \" + value);\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"X Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.xlab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.xlab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.xlab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YDIVisions...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            var maxYDIV = m.trunc(Mx.height / 2); // TODO\n                            // Make value an option on the plot?\n                            // Maybe still a little too high\n                            // while dotted-line grids are\n                            // being drawn?\n                            if (isValid.valid && value > maxYDIV) {\n                                return {\n                                    valid: false,\n                                    reason: \"Exceeds maximum number of divisions (\" + maxYDIV + \").\"\n                                };\n                            } else {\n                                return isValid;\n                            }\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Divisions:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ydiv) {\n                                    // Only update if different\n                                    // value\n                                    if (finalValue === \"\") {\n                                        finalValue = 1;\n                                    }\n                                    Gx.ydiv = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ydiv, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"YINVersion\",\n                    checked: (Mx.origin === 4),\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            yinv: (Mx.origin !== 4)\n                        });\n                    }\n                }, {\n                    text: \"YLABel...\",\n                    handler: function() {\n                        var validator = function(value) {\n                            var isValid = mx.intValidator(value);\n                            return isValid;\n                        };\n\n                        setupPrompt(\n                            plot,\n                            \"Y Units:\",\n                            validator,\n                            function(finalValue) {\n                                if (parseFloat(finalValue) !== Gx.ylab) { // Only\n                                    // update if different value\n                                    if (finalValue < 0) {\n                                        finalValue = 0;\n                                    }\n                                    Gx.ylab = parseFloat(finalValue);\n                                }\n                                plot.refresh();\n\n                            }, Gx.ylab, undefined, undefined,\n                            undefined);\n                    }\n                }, {\n                    text: \"X-axis\",\n                    checked: Gx.show_x_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_x_axis: !Gx.show_x_axis\n                        });\n                    }\n                }, {\n                    text: \"Y-axis\",\n                    checked: Gx.show_y_axis,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_y_axis: !Gx.show_y_axis\n                        });\n                    }\n                }, {\n                    text: \"Readout\",\n                    checked: Gx.show_readout,\n                    style: \"checkbox\",\n                    handler: function() {\n                        plot.change_settings({\n                            show_readout: !Gx.show_readout\n                        });\n                    }\n                }, {\n                    text: \"Invert Colors\",\n                    checked: Mx.xi,\n                    style: \"checkbox\",\n                    handler: function() {\n                        mx.invertbgfg(Mx);\n                    }\n                }]\n            }\n        };\n\n        var COLORMAP_MENU = {\n            text: \"Colormap...\",\n            menu: {\n                title: \"COLORMAP\",\n                items: []\n            }\n        };\n\n        var colormap_handler = function(item) {\n            plot.change_settings({\n                cmap: this.cmap\n            });\n        };\n\n        for (var xc = 0; xc < m.Mc.colormap.length; xc++) {\n            var menuitem = {\n                text: m.Mc.colormap[xc].name,\n                cmap: xc,\n                checked: (Gx.cmap === xc),\n                handler: colormap_handler\n            };\n            COLORMAP_MENU.menu.items.push(menuitem);\n        }\n\n        var traceoptionsmenu = function(index) {\n            return {\n                title: \"TRACE OPTIONS\",\n                items: [{\n                    text: \"Dashed...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = -1 * finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].line = 3;\n                                        plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                        plot._Gx.lyr[ii].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Colors...\",\n                    menu: {\n                        title: \"COLORS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"Red\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"red\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"red\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"pink\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"pink\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Hot Pink\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#ff009e\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#ff009e\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Orange\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"orange\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"orange\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Yellow\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"yellow\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"yellow\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Lime Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"#80f741\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"#80f741\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Green\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"green\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"green\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Blue\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"blue\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"blue\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Purple\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = \"purple\";\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].color = \"purple\";\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Custom Hexcode\",\n                            handler: function() {\n                                setupPrompt(\n                                    plot,\n                                    \"Color code (requires #):\",\n                                    mx.hexValidator,\n                                    function(finalValue) {\n                                        if (index !== undefined) {\n                                            plot._Gx.lyr[index].color = finalValue;\n                                        } else {\n                                            for (var ii = 0; ii < Gx.lyr.length; index++) {\n                                                plot._Gx.lyr[ii].color = finalValue;\n                                            }\n                                        }\n                                    }, undefined, undefined, undefined, undefined);\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Dots...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius/Shape:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    sym = 3; // square\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    sym = 2; // circle\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                    plot._Gx.lyr[index].symbol = sym;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                        plot._Gx.lyr[i].symbol = sym;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Radius...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var radius = 3;\n                        if (index !== undefined) {\n                            radius = Math.abs(plot._Gx.lyr[index].radius);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                if (radius !== Math.abs(plot._Gx.lyr[i].radius)) {\n                                    radius = 3;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Radius:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                var sym;\n                                var rad;\n                                if (finalValue < 0) {\n                                    rad = Math.abs(finalValue);\n                                } else if (finalValue > 0) {\n                                    rad = finalValue;\n                                } else {\n                                    sym = 1;\n                                    rad = 0;\n                                }\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                    plot._Gx.lyr[index].radius = rad;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                        plot._Gx.lyr[i].radius = rad;\n                                    }\n                                }\n                            }, radius);\n                    }\n                }, {\n                    text: \"Solid...\",\n                    handler: function() {\n                        // Figure out the current thickness\n                        var thk = 1;\n                        if (index !== undefined) {\n                            thk = Math.abs(plot._Gx.lyr[index].thick);\n                        } else {\n                            if (Gx.lyr.length === 0) {\n                                return;\n                            }\n\n                            thk = Math.abs(plot._Gx.lyr[0].thick);\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                                    thk = 1;\n                                    break;\n                                }\n                            }\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Line thickness:\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    var i;\n                                    for (i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }, thk);\n                    }\n                }, {\n                    text: \"Toggle\",\n                    style: (index !== undefined) ? \"checkbox\" : undefined,\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Symbols...\",\n                    menu: {\n                        title: \"SYMBOLS\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 0;\n                                    plot._Gx.lyr[index].symbol = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 0;\n                                        plot._Gx.lyr[i].symbol = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Pixels\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 1;\n                                    plot._Gx.lyr[index].symbol = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 1;\n                                        plot._Gx.lyr[i].symbol = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Circles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Squares\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 3;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Plusses\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 4;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 4;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"X's\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 4;\n                                    plot._Gx.lyr[index].symbol = 5;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 4;\n                                        plot._Gx.lyr[i].symbol = 5;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 6;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 6;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Downward Triangles\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].radius = 6;\n                                    plot._Gx.lyr[index].symbol = 7;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].radius = 6;\n                                        plot._Gx.lyr[i].symbol = 7;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Line Type...\",\n                    menu: {\n                        title: \"LINE TYPE\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"None\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 0;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 0;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Verticals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 1;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 1;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Horizontals\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 2;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 2;\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Connecting\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].line = 3;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].line = 3;\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }, {\n                    text: \"Thickness...\",\n                    handler: function() {\n                        var thickness = 1;\n                        if (index !== undefined) {\n                            thickness = plot._Gx.lyr[index].thick;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Thickness\",\n                            mx.intValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1;\n                                }\n                                finalValue = Math.max(0, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].thick = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].thick = finalValue;\n                                    }\n                                }\n                            }, thickness, undefined,\n                            undefined, undefined);\n                    }\n                }, {\n                    text: \"Opacity...\",\n                    handler: function() {\n                        var opacity = 1.0;\n                        if (index !== undefined) {\n                            opacity = plot._Gx.lyr[index].opacity;\n                        }\n                        setupPrompt(\n                            plot,\n                            \"Opacity:\",\n                            mx.floatValidator,\n                            function(finalValue) {\n                                if (finalValue === \"\") {\n                                    finalValue = 1.0;\n                                }\n                                finalValue = Math.max(0, finalValue);\n                                finalValue = Math.min(1, finalValue);\n\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].opacity = finalValue;\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[i].opacity = finalValue;\n                                    }\n                                }\n                            }, opacity, undefined,\n                            undefined, undefined);\n                    }\n                }, {\n                    text: \"XCompression...\",\n                    menu: {\n                        title: \"XCOMPRESSION\",\n                        items: [{\n                            text: \"Retain Current\"\n                        }, {\n                            text: \"Smoothing\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 0 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 0\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 0\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Average\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 1 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 1\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 1\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Minimum\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 2 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 2\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 2\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Maximum\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 3 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 3\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 3\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"First\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 4 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 4\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 4\n                                        });\n                                    }\n                                }\n                            }\n                        }, {\n                            text: \"Max (Abs)\",\n                            checked: (index !== undefined) ? plot._Gx.lyr[index].xcompression === 5 : undefined,\n                            handler: function() {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].change_settings({\n                                        xcmp: 5\n                                    });\n                                } else {\n                                    for (var i = 0; i < Gx.lyr.length; i++) {\n                                        plot._Gx.lyr[index].change_settings({\n                                            xcmp: 5\n                                        });\n                                    }\n                                }\n                            }\n                        }]\n                    }\n                }]\n            };\n        };\n\n        var VIEW_MENU = {\n            text: \"View...\",\n            menu: {\n                title: \"VIEW\",\n                items: [{\n                    text: \"Reset\",\n                    handler: function() {\n                        plot.unzoom();\n                    }\n                }, {\n                    text: \"Y Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"YPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"YPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"YPAN\");\n                    }\n                }, {\n                    text: \"X Axis\",\n                    style: \"separator\"\n                }, {\n                    text: \"Expand Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_EXPAND, \"XPAN\");\n                    }\n                }, {\n                    text: \"Shrink Range\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_SHRINK, \"XPAN\");\n                    }\n                }, {\n                    text: \"Expand Full\",\n                    handler: function() {\n                        middleClickScrollMenuAction(plot,\n                            mx.SB_FULL, \"XPAN\");\n                    }\n                }]\n            }\n        };\n\n        var TRACES_MENU = {\n            text: \"Traces...\",\n            menu: function() {\n                var Gx = plot._Gx;\n                var tracemenu = {\n                    title: \"TRACE\",\n                    items: []\n                };\n                // Add the ALL option\n                tracemenu.items.push({\n                    text: \"All\",\n                    menu: traceoptionsmenu()\n                });\n                // Add all the active layers\n                for (var i = 0; i < Gx.lyr.length; i++) {\n                    tracemenu.items.push({\n                        text: Gx.lyr[i].name,\n                        menu: traceoptionsmenu(i)\n                    });\n                }\n                return tracemenu;\n            }\n        };\n\n        var FILES_MENU = {\n            text: \"Files...\",\n            menu: {\n                title: \"FILES OPTIONS\",\n                items: [\n                    // Overlay File... is disabled\n                    // because it's actually very\n                    // difficult to bring up a\n                    // a file upload browse dialog\n                    /*\n                     * { text: \"Overlay File...\", handler: function() {\n                     * plot.change_settings( {phunits: 'R'} ); } },\n                     */\n                    {\n                        text: \"Deoverlay File...\",\n                        menu: function() {\n                            var Gx = plot._Gx;\n                            var deoverlaymenu = {\n                                title: \"DEOVERLAY\",\n                                items: []\n                            };\n                            deoverlaymenu.items.push({\n                                text: \"Deoverlay All\",\n                                handler: function() {\n                                    plot.deoverlay();\n                                }\n                            });\n                            /* jshint -W083 */\n                            /* TODO figure out how to not create functions within a loop */\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                var handler = (function(index) {\n                                    return function() {\n                                        plot.deoverlay(index);\n                                    };\n                                }(i));\n\n                                deoverlaymenu.items.push({\n                                    text: Gx.lyr[i].name,\n                                    handler: handler\n                                });\n                            }\n                            /* jshint +W083 */\n                            return deoverlaymenu;\n                        }\n                    }\n                ]\n            }\n        };\n\n        var PLUGINS_MENU = {\n            text: \"Plugins...\",\n            menu: {\n                title: \"PLUGINS\",\n                items: (function() { // Immediately\n                    // Invoked\n                    // Function\n                    var result = [];\n                    for (var i = 0; i < Gx.plugins.length; i++) {\n                        var plugin = Gx.plugins[i];\n                        if (plugin.impl.menu) {\n                            if (typeof plugin.impl.menu === 'function') {\n                                result.push(plugin.impl.menu());\n                            } else {\n                                result.push(plugin.impl.menu);\n                            }\n                        }\n                    }\n                    return result;\n                }())\n            }\n        };\n\n        var SAVE_MENU = {\n            text: \"Save as...\",\n            menu: {\n                title: \"SAVE AS\",\n                items: [{\n                    text: \"PNG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/png\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".png\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"JPG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/jpg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".jpg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }, {\n                    text: \"SVG\",\n                    handler: function() {\n                        var img = plot._Mx.active_canvas.toDataURL(\"image/svg\");\n                        var link = document.createElement(\"a\");\n                        link.href = img;\n                        link.download = \"SigPlot.\" + (new Date()).getTime() + \".svg\";\n                        link.display = \"none\";\n                        document.body.appendChild(link);\n                        link.click();\n                        document.body.removeChild(link);\n                    }\n                }]\n            }\n        };\n\n        var REFRESH_ITEM = {\n            text: \"Refresh\"\n            // no handler, just let the finalizer deal with it\n        };\n\n        var KEYPRESSINFO_ITEM = {\n            text: \"Keypress Info\",\n            handler: function() {\n                mx.message(Mx, KEYPRESS_HELP);\n            }\n        };\n\n        var EXIT_ITEM = {\n            text: \"Exit\",\n            handler: function() {\n                var evt = document.createEvent('Event');\n                evt.initEvent('sigplotexit', true, true);\n                mx.dispatchEvent(Mx, evt);\n            }\n        };\n\n        // Main Menu\n        var MAINMENU = {\n            title: \"SIG-PLOT\",\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [REFRESH_ITEM, CONTROLS_MENU, CXMODE_MENU, SCALING_MENU, VIEW_MENU,\n                GRID_MENU, SETTINGS_MENU, COLORMAP_MENU, TRACES_MENU, FILES_MENU,\n                PLUGINS_MENU, KEYPRESSINFO_ITEM, SAVE_MENU, EXIT_ITEM\n            ]\n        };\n\n        mx.menu(Mx, MAINMENU);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function sigplot_legend_menu(plot, index) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n\n        var DASHED = {\n            text: \"Dashed...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = -1 * finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                plot._Gx.lyr[ii].line = 3;\n                                plot._Gx.lyr[ii].thick = -1 * finalValue;\n                                plot._Gx.lyr[ii].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n\n        };\n\n        var COLORS = {\n            text: \"Colors...\",\n            menu: {\n                title: \"COLORS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"Red\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"red\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"red\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"red\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"pink\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"pink\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"pink\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Hot Pink\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#ff009e\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#ff009e\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#ff009e\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Orange\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"orange\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"orange\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"orange\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Yellow\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"yellow\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"yellow\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"yellow\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Lime Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"#80f741\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"#80f741\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"#80f741\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Green\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"green\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"green\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"green\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Blue\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"blue\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"blue\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"blue\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Purple\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].color === \"purple\" : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].color = \"purple\";\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].color = \"purple\";\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Custom Hexcode\",\n                    handler: function() {\n                        setupPrompt(\n                            plot,\n                            \"Color code (requires #):\",\n                            mx.hexValidator,\n                            function(finalValue) {\n                                if (index !== undefined) {\n                                    plot._Gx.lyr[index].color = finalValue;\n                                } else {\n                                    for (var ii = 0; ii < Gx.lyr.length; ii++) {\n                                        plot._Gx.lyr[ii].color = finalValue;\n                                    }\n                                }\n                            }, undefined, undefined, undefined, undefined);\n                    }\n                }]\n            }\n        };\n\n        var SOLID = {\n            text: \"Solid...\",\n            handler: function() {\n                // Figure out the current thickness\n                var thk = 1;\n                if (index !== undefined) {\n                    thk = Math.abs(plot._Gx.lyr[index].thick);\n                } else {\n                    if (Gx.lyr.length === 0) {\n                        return;\n                    }\n\n                    thk = Math.abs(plot._Gx.lyr[0].thick);\n                    var i;\n                    for (i = 0; i < Gx.lyr.length; i++) {\n                        if (thk !== Math.abs(plot._Gx.lyr[i].thick)) {\n                            thk = 1;\n                            break;\n                        }\n                    }\n                }\n                setupPrompt(\n                    plot,\n                    \"Line thickness:\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                            plot._Gx.lyr[index].thick = finalValue;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            var i;\n                            for (i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                                plot._Gx.lyr[i].thick = finalValue;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }, thk);\n            }\n        };\n\n        var TOGGLE = {\n            text: \"Toggle\",\n            style: (index !== undefined) ? \"checkbox\" : undefined,\n            checked: (index !== undefined) ? plot._Gx.lyr[index].display : undefined,\n            handler: function() {\n                if (index !== undefined) {\n                    plot._Gx.lyr[index].display = !plot._Gx.lyr[index].display;\n                } else {\n                    for (var i = 0; i < Gx.lyr.length; i++) {\n                        plot._Gx.lyr[i].display = !plot._Gx.lyr[i].display;\n                    }\n                }\n            }\n        };\n\n        var SYMBOLS = {\n            text: \"Symbols...\",\n            menu: {\n                title: \"SYMBOLS\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 0;\n                            plot._Gx.lyr[index].symbol = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 0;\n                                plot._Gx.lyr[i].symbol = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Pixels\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 1;\n                            plot._Gx.lyr[index].symbol = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 1;\n                                plot._Gx.lyr[i].symbol = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Circles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Squares\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 3;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Plusses\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 4 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 4;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 4;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"X's\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 5 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 4;\n                            plot._Gx.lyr[index].symbol = 5;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 4;\n                                plot._Gx.lyr[i].symbol = 5;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 6 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 6;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 6;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Downward Triangles\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].symbol === 7 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].radius = 6;\n                            plot._Gx.lyr[index].symbol = 7;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].radius = 6;\n                                plot._Gx.lyr[i].symbol = 7;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var LINE_TYPE = {\n            text: \"Line Type...\",\n            menu: {\n                title: \"LINE TYPE\",\n                items: [{\n                    text: \"Retain Current\"\n                }, {\n                    text: \"None\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 0 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 0;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 0;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Verticals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 1 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 1;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 1;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Horizontals\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 2 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 2;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 2;\n                            }\n                        }\n                    }\n                }, {\n                    text: \"Connecting\",\n                    checked: (index !== undefined) ? plot._Gx.lyr[index].line === 3 : undefined,\n                    handler: function() {\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].line = 3;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].line = 3;\n                            }\n                        }\n                    }\n                }]\n            }\n        };\n\n        var THICKNESS = {\n            text: \"Thickness...\",\n            handler: function() {\n                var thickness = 1;\n                if (index !== undefined) {\n                    thickness = plot._Gx.lyr[index].thick;\n                }\n                setupPrompt(\n                    plot,\n                    \"Thickness\",\n                    mx.intValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1;\n                        }\n                        finalValue = Math.max(0, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].thick = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].thick = finalValue;\n                            }\n                        }\n                    }, thickness, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var OPACITY = {\n            text: \"Opacity...\",\n            handler: function() {\n                var opacity = 1.0;\n                if (index !== undefined) {\n                    opacity = plot._Gx.lyr[index].opacity;\n                }\n                setupPrompt(\n                    plot,\n                    \"Opacity:\",\n                    mx.floatValidator,\n                    function(finalValue) {\n                        if (finalValue === \"\") {\n                            finalValue = 1.0;\n                        }\n                        finalValue = Math.max(0, finalValue);\n                        finalValue = Math.min(1, finalValue);\n\n                        if (index !== undefined) {\n                            plot._Gx.lyr[index].opacity = finalValue;\n                        } else {\n                            for (var i = 0; i < Gx.lyr.length; i++) {\n                                plot._Gx.lyr[i].opacity = finalValue;\n                            }\n                        }\n                    }, opacity, undefined,\n                    undefined, undefined);\n            }\n        };\n\n        var LEGEND_TRACE = {\n            title: Gx.lyr[index].name,\n            finalize: function() {\n                if (!Mx.prompt) {\n                    // A prompt may have been\n                    // created by a menu handler\n                    // - let it deal with\n                    // eventListener re-setting\n                    mx.addEventListener(Mx, \"mousedown\", plot.onmousedown,\n                        false);\n                }\n                plot.refresh();\n            },\n            items: [DASHED, COLORS, SOLID, TOGGLE, SYMBOLS, LINE_TYPE, THICKNESS, OPACITY]\n        };\n\n        mx.menu(Mx, LEGEND_TRACE);\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function rubberbox_cb(plot, triggerEvent) {\n        return function(event, xo, yo, xl, yl, action, mode) {\n            var Gx = plot._Gx;\n            var Mx = plot._Mx;\n\n            var x = Math.min(xo, xl);\n            var y = Math.min(yo, yl);\n            var w = Math.abs(xl - xo);\n            var h = Math.abs(yl - yo);\n\n            var takeAction = false;\n            if (event.which === triggerEvent) {\n                // On some browsers, a click will actually be sent as\n                // mousedown/mousemove/mouseup so\n                // don't make insanely small zooms...instead treat them as a\n                // click\n                if (mode === \"horizontal\") {\n                    takeAction = (w > 2);\n                } else if (mode === \"vertical\") {\n                    takeAction = (h > 2);\n                } else {\n                    takeAction = ((w > 2) && (h > 2));\n                }\n            }\n\n            if (!takeAction) {\n                // The mouse didn't shift enough to be considered\n                // as a rubberbox action so treat it as mouseup\n                plot.mouseup(event);\n            } else {\n                // action === null is disabled, but undefined is default\n                if ((action === undefined) || (action === \"zoom\")) {\n                    plot.pixel_zoom(xo, yo, xl, yl);\n                    plot.refresh();\n                } else if (action === \"select\") {\n                    var evt = document.createEvent('Event');\n                    evt.initEvent('mtag', true, true);\n                    evt.originalEvent = event;\n                    var re = pixel_to_real(plot, x, y);\n                    var rwh = pixel_to_real(plot, x + w, y + h);\n                    evt.x = re.x;\n                    evt.y = re.y;\n                    evt.xpos = x;\n                    evt.ypos = y;\n                    evt.w = Math.abs(rwh.x - re.x);\n                    evt.h = Math.abs(rwh.y - re.y);\n                    evt.wpxl = w;\n                    evt.hpxl = h;\n                    evt.shift = event.shiftKey;\n                    if (mx.dispatchEvent(Mx, evt)) {\n                        var mclkevt = document.createEvent('Event');\n                        mclkevt.initEvent('mclick', true, true);\n                        mclkevt.originalEvent = event;\n                        mclkevt.xpos = evt.xpos;\n                        mclkevt.ypos = evt.ypos;\n                        mclkevt.x = evt.x;\n                        mclkevt.y = evt.y;\n                        mclkevt.which = event.which; // not always available on all browser\n                    }\n                }\n            }\n        };\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function plot_init(plot, o) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if (!o.xlab) {\n            o.xlab = 0;\n        }\n        if (!o.ylab) {\n            o.ylab = 0;\n        }\n        if (o.useDomMenu) {\n            Mx.useDomMenu = true;\n        }\n\n        //Convert xunits and yunits to numbers if they are strings\n        o.xlab = m.unit_lookup(o.xlab);\n        o.ylab = m.unit_lookup(o.ylab);\n\n        // Equivalent to reading cmd line args\n        Gx.xmin = o.xmin === undefined ? 0.0 : o.xmin;\n        Gx.xmax = o.xmax === undefined ? 0.0 : o.xmax;\n        var havexmin = (o.xmin !== undefined);\n        var havexmax = (o.xmax !== undefined);\n        var address;\n        if (typeof o.cmode === \"number\") {\n            switch (o.cmode) {\n                case 1:\n                    address = \"MA\";\n                    break;\n                case 2:\n                    address = \"PH\";\n                    break;\n                case 3:\n                    address = \"RE\";\n                    break;\n                case 4:\n                    address = \"IM\";\n                    break;\n                case 5:\n                    address = \"IR\";\n                    break;\n                case 6:\n                    address = \"LO\";\n                    break;\n                case 7:\n                    address = \"L2\";\n                    break;\n                default:\n                    throw new RangeError(\"Invalid cmode value\");\n            }\n        } else {\n            address = o.cmode === undefined ? \"\" : o.cmode.toUpperCase();\n        }\n        var line = o.line === undefined ? 3 : o.line;\n        Gx.ylab = o.ylab;\n        Gx.ylabel = o.ylabel;\n        Gx.ymin = o.ymin === undefined ? 0.0 : o.ymin;\n        Gx.ymax = o.ymax === undefined ? 0.0 : o.ymax;\n        var haveymin = (o.ymin !== undefined);\n        var haveymax = (o.ymax !== undefined);\n        Gx.zmin = o.zmin;\n        Gx.zmax = o.zmax;\n        var havezmin = (o.zmin !== undefined);\n        var havezmax = (o.zmax !== undefined);\n\n        if (o.colors !== undefined) {\n            mx.setbgfg(Mx, o.colors.bg, o.colors.fg, Mx.xi);\n        }\n\n        if (o.xi) {\n            mx.invertbgfg(Mx);\n        }\n\n        Gx.forcelab = o.forcelab === undefined ? true : o.forcelab;\n\n        Gx.all = o.all === undefined ? false : o.all;\n        // By default, SIGPLOT auto-scales only on the first buffer size.\n        // \"expand\" is a feature added for websigplot that when\n        // combined with \"all\" will expand the y-range automaticall\n        // to accomodate all of the samples\n        Gx.expand = o.expand === undefined ? false : o.expand;\n\n        // TODO Gx.mimic = M$GET_SWITCH ('MIMIC')\n        Gx.xlab = o.xlab;\n        Gx.xlabel = o.xlabel;\n        Gx.segment = o.segment === undefined ? false : o.segment;\n        Gx.plab = 24;\n\n        var phunits = (o.phunits === undefined) ? 'D' : o.phunits;\n        if (phunits[0] === 'R') {\n            Gx.plab = 23;\n        } else if (phunits[0] === 'C') {\n            Gx.plab = 25;\n        }\n        Gx.xdiv = o.xdiv === undefined ? 5 : o.xdiv;\n        Gx.ydiv = o.ydiv === undefined ? 5 : o.ydiv;\n\n        Gx.xcompression = o.xcmp || 0;\n        Gx.rasterDownscale = o.downscale || 0;\n        Gx.rasterSmoothing = o.smoothing || false;\n\n        Mx.origin = 1;\n        if (o.yinv) {\n            Mx.origin = 4;\n        }\n        Gx.pmt = o.pmt === undefined ? 1.0 : o.pmt;\n        Gx.bufmax = o.bufmax === undefined ? 32768 : o.bufmax;\n        Gx.sections = o.nsec === undefined ? 0 : o.nsec;\n        Gx.anno_type = o.anno_type === undefined ? 0 : o.anno_type;\n\n        Gx.xfmt = o.xfmt === undefined ? \"\" : o.xfmt;\n        Gx.yfmt = o.yfmt === undefined ? \"\" : o.yfmt;\n\n        // TODO Gx.xf.msgid = M$GET_SWITCH ('MSGID')\n        // Gx.xf.msgmask = max (0, M$GET_SWITCH ('MASK'))\n\n        Gx.index = o.index === undefined ? false : o.index;\n        var imode = (Gx.index || (address.slice(0, 2) === \"IN\"));\n        if (imode) {\n            if (havexmin && (Gx.xmin === 1.0)) {\n                havexmin = false;\n            }\n            if (havexmax && (Gx.xmin === 1.0)) {\n                havexmax = false;\n            }\n        }\n\n        Gx.xdata = false;\n        Gx.note = o.note || \"\";\n        Gx.hold = 0;\n        Gx.always_show_marker = o.always_show_marker || false;\n\n        m.vstype('D');\n\n        if (!o.inputs) {\n            basefile(plot, false);\n        } else {\n            // TODO load files\n        }\n\n        var cmode = address;\n\n        if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n            Gx.cmode = 1;\n        } else {\n            Gx.cmode = 3;\n        }\n\n        if ((cmode === \"MA\") || (cmode === \"INMA\") || (cmode === \"ABMA\") ||\n            (cmode === \"__MA\") || (cmode === \"MAGNITUDE\")) {\n            Gx.cmode = 1;\n        }\n        if ((cmode === \"PH\") || (cmode === \"INPH\") || (cmode === \"ABPH\") ||\n            (cmode === \"__PH\") || (cmode === \"PHASE\")) {\n            Gx.cmode = 2;\n        }\n        if ((cmode === \"RE\") || (cmode === \"INRE\") || (cmode === \"ABRE\") ||\n            (cmode === \"__RE\") || (cmode === \"REAL\")) {\n            Gx.cmode = 3;\n        }\n        if ((cmode === \"IM\") || (cmode === \"INIM\") || (cmode === \"ABIM\") ||\n            (cmode === \"__IM\") || (cmode === \"IMAGINARY\")) {\n            Gx.cmode = 4;\n        }\n        if ((cmode === \"LO\") || (cmode === \"D1\") || (cmode === \"INLO\") || (cmode === \"IND1\") ||\n            (cmode === \"ABIM\") || (cmode === \"ABD1\") || (cmode === \"__LO\") ||\n            (cmode === \"__D1\") || (cmode === \"10*LOG10\")) {\n            Gx.cmode = 6;\n        }\n        if ((cmode === \"L2\") || (cmode === \"D2\") || (cmode === \"INL2\") || (cmode === \"IND2\") ||\n            (cmode === \"ABLO\") || (cmode === \"ABD2\") || (cmode === \"__L2\") ||\n            (cmode === \"__D2\") || (cmode === \"20*LOG10\")) {\n            Gx.cmode = 7;\n        }\n        if ((cmode === \"RI\") || (cmode === \"IR\") || (cmode === \"INRI\") || (cmode === \"INIR\") ||\n            (cmode === \"ABRI\") || (cmode === \"ABIR\") || (cmode === \"__RI\") ||\n            (cmode === \"__IR\") || (cmode === \"IMAG/REAL\") || (cmode === \"REAL/IMAG\")) {\n            if (Gx.index) {\n                m.log.error(\"Imag/Real mode not permitted in INDEX mode\");\n            } else {\n                Gx.cmode = 5;\n            }\n        }\n\n        Gx.basemode = Gx.cmode;\n\n        plot.change_settings({\n            cmode: Gx.cmode\n        });\n\n        // if ( (Gx.forcelab) .and. (Gx.xlab .le. 0) .and.\n        // & (Gx.ylab .le. 0) ) then\n        // call M$WARNING\n        // & ('/xlab or /ylab is missing with /forcelab usage')\n        // Gx.forcelab = .false.\n        // endif\n\n        Gx.dbmin = 1.0e-20;\n        if (Gx.cmode >= 6) {\n            var dbscale = 10.0;\n            if (Gx.cmode === 7) {\n                dbscale = 20.0;\n            }\n            if ((cmode[0] === \"L\") || (cmode[0] === \"1\") || (cmode[0] === \"2\")) {\n                if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-10);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-10);\n                } else {\n                    Gx.ymin = Math.max(Gx.ymin, 1e-20);\n                    Gx.ymax = Math.max(Gx.ymax, 1e-20);\n                }\n                Gx.ymin = m.log10(Gx.ymin) * dbscale;\n                Gx.ymax = m.log10(Gx.ymax) * dbscale;\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].cx)) {\n                Gx.ymin = Math.max(-18.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-18.0 * dbscale, Gx.ymax);\n                Gx.dbmin = 1e-37;\n            } else if (Math.min(Gx.ymin, Gx.ymax) < -20.0 * dbscale) {\n                Gx.ymin = Math.max(-37.0 * dbscale, Gx.ymin);\n                Gx.ymax = Math.max(-37.0 * dbscale, Gx.ymax);\n                Gx.dbmin = Math.pow(10, Math.min(Gx.ymin, Gx.ymax) / dbscale);\n            }\n        }\n\n        Mx.level = 0;\n        if (imode && !Gx.index) {\n            if (havexmin) {\n                Gx.xmin = Gx.xstart + Gx.xdelta * (Gx.xmin - 1.0);\n            }\n            if (havexmin) {\n                Gx.xmax = Gx.xstart + Gx.xdelta * (Gx.xmax - 1.0);\n            }\n        }\n        Gx.xmult = o.xmult;\n        Gx.ymult = o.xmult;\n\n        //Convert string inputs of autox to numbers\n        switch (o.autox) {\n            case \"none\":\n                o.autox = -1;\n                break;\n            case \"min\":\n                o.autox = 1;\n                break;\n            case \"max\":\n                o.autox = 2;\n                break;\n            case \"full\":\n                o.autox = 3;\n                break;\n        }\n\n        Gx.autox = o.autox === undefined ? -1 : o.autox;\n        if (Gx.autox < 0) {\n            Gx.autox = 0;\n            if (!havexmin) {\n                Gx.autox += 1;\n            }\n            if (!havexmax) {\n                Gx.autox += 2;\n            }\n        }\n\n        //Convert string inputs of autoy to numbers\n\n        switch (o.autoy) {\n            case \"none\":\n                o.autoy = -1;\n                break;\n            case \"min\":\n                o.autoy = 1;\n                break;\n            case \"max\":\n                o.autoy = 2;\n                break;\n            case \"full\":\n                o.autoy = 3;\n                break;\n        }\n\n        Gx.autoy = o.autoy === undefined ? -1 : o.autoy;\n        if (Gx.autoy < 0) {\n            Gx.autoy = 0;\n            if (!haveymin) {\n                Gx.autoy += 1;\n            }\n            if (!haveymax) {\n                Gx.autoy += 2;\n            }\n        }\n\n        //Convert string inputs of autoz to numbers\n\n        switch (o.autoz) {\n            case \"none\":\n                o.autoz = -1;\n                break;\n            case \"min\":\n                o.autoz = 1;\n                break;\n            case \"max\":\n                o.autoz = 2;\n                break;\n            case \"full\":\n                o.autoz = 3;\n                break;\n        }\n\n        Gx.autoz = o.autoz === undefined ? -1 : o.autoz;\n        if (Gx.autoz < 0) {\n            Gx.autoz = 0;\n            if (!havezmin) {\n                Gx.autoz += 1;\n            }\n            if (!havezmax) {\n                Gx.autoz += 2;\n            }\n        }\n        Gx.autol = o.autol === undefined ? -1 : o.autol;\n\n        if (!havexmin) {\n            Gx.xmin = undefined;\n        }\n        if (!havexmax) {\n            Gx.xmax = undefined;\n        }\n\n        scale_base(plot, {\n            get_data: true\n        }, Gx.xmin, Gx.xmax, Gx.xlab, Gx.ylab);\n\n        if (!havexmin) {\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (!havexmax) {\n            Gx.xmax = Mx.stk[0].xmax;\n        }\n        if (!haveymin) {\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        if (!haveymax) {\n            Gx.ymax = Mx.stk[0].ymax;\n        }\n\n        if (Gx.xmin > Gx.xmax) {\n            Mx.stk[0].xmin = Gx.xmax;\n            Gx.xmax = Gx.xmin;\n            Gx.xmin = Mx.stk[0].xmin;\n        }\n        if (Gx.ymin > Gx.ymax) {\n            Mx.stk[0].ymin = Gx.ymax;\n            Gx.ymax = Gx.ymin;\n            Gx.ymin = Mx.stk[0].ymin;\n        }\n        Mx.stk[0].xmin = Gx.xmin;\n        Mx.stk[0].xmax = Gx.xmax;\n        Mx.stk[0].ymin = Gx.ymin;\n        Mx.stk[0].ymax = Gx.ymax;\n\n        Gx.panxmin = Math.min(Gx.panxmin, Gx.xmin);\n        Gx.panxmax = Math.max(Gx.panxmax, Gx.xmax);\n        Gx.panymin = Math.min(Gx.panymin, Gx.ymin);\n        Gx.panymax = Math.max(Gx.panymax, Gx.ymax);\n\n        Gx.panxpad = o.panxpad;\n        Gx.panypad = o.panypad;\n\n        var xran = (Gx.panxmax - Gx.panxmin);\n        var yran = (Gx.panymax - Gx.panymin);\n\n        Gx.panxmin -= m.pad(xran, Gx.panxpad);\n        Gx.panxmax += m.pad(xran, Gx.panxpad);\n        Gx.panymin -= m.pad(yran, Gx.panypad);\n        Gx.panymax += m.pad(yran, Gx.panypad);\n\n        Gx.xmin = Mx.stk[0].xmin;\n        Gx.ymin = Mx.stk[0].ymin;\n\n        if (o.font_family) {\n            Mx.font_family = o.font_family;\n        }\n        if (o.font_width) {\n            Mx.font_width = o.font_width;\n        }\n        if (o.font_scaled) {\n            Mx.font_scaled = true;\n        }\n\n        var font_width = Mx.font_width;\n        if (Mx.font_scaled) {\n            font_width = Math.min(Mx.font_width, Mx.width / 64);\n        }\n        mx.set_font(Mx, font_width);\n\n        Gx.ncolors = o.ncolors === undefined ? 500 : o.ncolors;\n        Gx.cmap = null;\n        if (o.cmap !== undefined) {\n            Gx.cmap = o.cmap;\n        } else {\n            Gx.cmap = o.xc === undefined ? -1 : o.xc;\n        }\n\n        setup_cmap(plot, Gx.cmap);\n\n        // TODO setup annotate, boxes and points facilities\n\n        // TODO initialize layer structure line types\n\n        if (o.xcnt === \"leftmouse\") {\n            Gx.cntrls = 1;\n        } else if (o.xcnt === \"continuous\") {\n            Gx.cntrls = 2;\n        } else {\n            Gx.cntrls = o.xcnt === undefined ? 1 : o.xcnt;\n        }\n\n        Gx.default_rubberbox_mode = o.rubberbox_mode === undefined ? \"box\" : o.rubberbox_mode;\n        Gx.default_rubberbox_action = o.rubberbox_action === undefined ? \"zoom\" : o.rubberbox_action;\n        Gx.default_rightclick_rubberbox_mode = o.rightclick_rubberbox_mode === undefined ? \"box\" : o.rightclick_rubberbox_mode;\n        Gx.default_rightclick_rubberbox_action = o.rightclick_rubberbox_action === undefined ? null : o.rightclick_rubberbox_action;\n\n        Gx.cross = o.cross === undefined ? false : o.cross;\n        Gx.grid = o.nogrid === undefined ? true : !o.nogrid;\n        Gx.fillStyle = o.fillStyle;\n        Gx.gridBackground = o.gridBackground;\n        Gx.gridStyle = o.gridStyle;\n        Gx.wheelZoom = o.wheelZoom;\n        Gx.wheelZoomPercent = o.wheelZoomPercent;\n        Gx.legend = o.legend === undefined ? false : o.legend;\n        Gx.no_legend_button = o.no_legend_button === undefined ? false : o.no_legend_button;\n        Gx.legendBtnLocation = null;\n        Gx.pan = o.nopan === undefined ? true : !o.nopan;\n        Gx.nomenu = o.nomenu === undefined ? false : o.nomenu;\n\n        // TODO Gx.lmap.ip = 0\n        Gx.modmode = 0;\n        Gx.modlayer = -1; // 0-based indexing instead of 1\n        Gx.modsource = 0;\n        Gx.modified = (o.mod && Gx.lyr.length > 0);\n        // TODO Gx.marks(5) = 5\n        Gx.nmark = 0;\n        Gx.iabsc = 0;\n        if (Gx.index) {\n            Gx.iabsc = 1;\n        }\n        // TODO if (o.specs > 0) Gx.iabsc = M$SEARCH('IRS',c(1:1))\n        Gx.specs = !o.nospecs;\n\n        Gx.scroll_time_interval = o.scroll_time_interval === undefined ? Gx.scroll_time_interval : o.scroll_time_interval;\n\n        Gx.autohide_readout = o.autohide_readout;\n        Gx.autohide_panbars = o.autohide_panbars;\n        Gx.x_scrollbar_location = o.x_scrollbar_location;\n        if (Gx.specs) {\n            Gx.show_x_axis = !o.noxaxis;\n            Gx.show_y_axis = !o.noyaxis;\n            Gx.show_readout = !o.noreadout;\n            if (Gx.show_x_axis || Gx.show_y_axis || Gx.show_readout) {\n                Gx.specs = true;\n            } else {\n                Gx.specs = false;\n            }\n        } else {\n            Gx.show_x_axis = false;\n            Gx.show_y_axis = false;\n            Gx.show_readout = false;\n        }\n        Gx.hide_note = o.hide_note || false;\n\n        Gx.xmrk = 0.0;\n        Gx.ymrk = 0.0;\n\n        if (!o.nodragdrop) {\n            mx.addEventListener(Mx, \"dragover\", function(evt) {\n                evt.preventDefault();\n            }, false);\n\n            mx.addEventListener(Mx, \"drop\", (function(plot) {\n                return function(evt) {\n                    var files = evt.dataTransfer.files;\n                    if (files.length > 0) {\n                        evt.preventDefault();\n                        plot.load_files(files);\n                    }\n                };\n            }(plot)), false);\n        }\n\n        Gx.initialized = true;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function basefile(plot, open) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        // != BASEFILE(false)\n\n        // unlike SIGPLOT, where if Gx.index == 1\n        // then xstart = 1.0 and xdelta = 1.0...technically\n        // Gx.retx is supposed to be the real X coordinate\n        // and Gx.aretx is supposed to be the X coordinate in the\n        // current abscissa mode\n        var hcb = plot.get_hcb_by_lyrn(0);\n        if (open) {\n            if (hcb) {\n                Gx.xstart = hcb.xstart;\n                Gx.xdelta = hcb.xdelta;\n            } else {\n                Gx.xstart = 0.0;\n                Gx.xdelta = 1.0;\n            }\n            Mx.origin = 1;\n            if (Gx.autoz & 1) {\n                Gx.zmin = undefined;\n            }\n            if (Gx.autoz & 2) {\n                Gx.zmax = undefined;\n            }\n        } else {\n            Gx.xstart = 0.0;\n            Gx.xdelta = 1.0;\n            Gx.autol = -1;\n            Mx.origin = 1;\n            if (Gx.autoz & 1) {\n                Gx.zmin = undefined;\n            }\n            if (Gx.autoz & 2) {\n                Gx.zmax = undefined;\n            }\n        }\n\n        // if (!open) {\n        // Gx.lay[0].cx = false;\n        // }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_accessories(plot, mode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        if (mode > 0) {\n            if ((mode >= 4) && (Gx.show_readout) && (!Gx.hide_note)) {\n                var ln = Gx.note.length;\n                mx.text(Mx, Mx.width - Gx.lbtn - (ln + 1) * Mx.text_w,\n                    Mx.text_h, Gx.note);\n            }\n            if (mode >= 4) {\n                draw_panbars(plot);\n            }\n            if ((mode >= 1) && (Gx.legend)) {\n                draw_legend(plot);\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_plugins(plot) {\n        var Gx = plot._Gx;\n        var ctx = plot._Mx.canvas.getContext(\"2d\");\n        var canvas;\n\n        var plugin_index = 0;\n        while (plugin_index < Gx.plugins.length) {\n            var plugin = Gx.plugins[plugin_index].impl;\n            if (plugin.refresh) {\n                canvas = Gx.plugins[plugin_index].canvas;\n\n                // Ensure the plugin canvas has the same size as the plot\n                if (canvas.width !== plot._Mx.canvas.width) {\n                    canvas.width = plot._Mx.canvas.width;\n                }\n                if (canvas.height !== plot._Mx.canvas.height) {\n                    canvas.height = plot._Mx.canvas.height;\n                }\n\n                // If the plugin canvas is visible, draw it\n                if (canvas.height !== 0 && canvas.width !== 0) {\n                    if (canvas.width !== plot._Mx.canvas.width) {\n                        canvas.width = plot._Mx.canvas.width;\n                    }\n                    if (canvas.height !== plot._Mx.canvas.height) {\n                        canvas.height = plot._Mx.canvas.height;\n                    }\n                    canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n                    Gx.plugins[plugin_index].impl.refresh(canvas);\n                    ctx.drawImage(canvas, 0, 0);\n                }\n            }\n            plugin_index = plugin_index + 1;\n        }\n    }\n\n    function get_legend_pos(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var tw = Mx.text_w;\n        var xs = tw * 23;\n        var ys = (Gx.lyr.length + 1) * Mx.text_h;\n        var xc = Mx.r - xs;\n        var yc = Mx.t;\n\n        var legendPos = {\n            x: xc + 2,\n            y: yc + 2,\n            width: xs - 5,\n            height: ys - 5\n        }; // default legend size\n\n        return legendPos;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_legend(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        //Gx.always_show_marker = true;\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        var i = 0;\n        var n = 0; // integer*4\n        var ix = 0; // integer*4\n        var iy = 0; // integer*4\n        var ln = 0; // integer*4\n        var tw = 0; // integer*4\n        var xc = 0; // integer*4\n        var yc = 0; // integer*4\n        var xs = 0; // integer*4\n        var ys = 0; // integer*4\n        var thk = 0; // integer*4\n        var ic = 0; // integer*4\n\n        tw = Mx.text_w;\n        xs = tw * 23;\n        ys = (Gx.lyr.length + 1) * Mx.text_h;\n        xc = Mx.r - xs;\n        yc = Mx.t;\n\n        var legendPos = get_legend_pos(plot);\n\n        // Determine legend position and label offset based on label sizes\n        var defLabelWidth = 98; // a magic number - default width of pixels\n        var maxLabelWidth = 0;\n        var labelOffset = 0;\n        for (n = 0; n < Gx.lyr.length; n++) { // figure out maximum label\n            // length\n            var labelLength = ctx.measureText(Gx.lyr[n].name).width;\n            if (labelLength > maxLabelWidth) {\n                maxLabelWidth = labelLength;\n            }\n        }\n        if (maxLabelWidth > defLabelWidth) {\n            labelOffset = (maxLabelWidth - defLabelWidth);\n            legendPos.width += labelOffset;\n            legendPos.x -= labelOffset;\n        }\n\n        ctx.strokeStyle = Mx.fg; // Mx.xwfg swapped in for FGColor\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height); // Creating a filled box instead of using\n        // clear_area\n        ctx.strokeRect(legendPos.x, legendPos.y, legendPos.width,\n            legendPos.height);\n\n        for (n = 0; n < Gx.lyr.length; n++) {\n            ix = Math.floor(xc + 4 * tw);\n            iy = Math.floor(yc + n * Mx.text_h + Mx.text_h); // additional text_h to\n            // account for 0-based\n            // indexing\n            if (n === Gx.modlayer) {\n                mx.text(Mx, xc + tw - labelOffset, iy + Math.floor(Mx.text_w / 2), '**'); // Added text_w/2\n                // offset\n            }\n            if (Gx.lyr[n].display) {\n                // TODO refactor this code so that each layer type is responsible\n                // for drawing it's own legend icon, providing flexibliity down the road\n                // for other layer types\n                if (Gx.lyr[n] instanceof Layer1D) {\n                    ic = Gx.lyr[n].color;\n                    if (Gx.lyr[n].line > 0) {\n                        thk = m.sign(Math.min(tw, Math.abs(Gx.lyr[n].thick)),\n                            Gx.lyr[n].thick);\n                        // added magic -3 offset to y coordinates to center lines\n                        // with text\n                        if (thk < 0 || thk === mx.L_dashed) {\n                            mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk), {\n                                mode: \"dashed\",\n                                on: 4,\n                                off: 4\n                            });\n                        } else {\n                            mx.draw_line(Mx, ic, ix - labelOffset, iy - 3, (ix + tw * 2) - labelOffset, iy - 3, Math.abs(thk));\n                        }\n                    }\n                    if (Gx.lyr[n].symbol > 0) {\n                        // New logic here with 0.6*tw to help with legend symbol\n                        // sizing\n                        if (Gx.lyr[n].radius < 0) {\n                            thk = -m.trunc(0.6 * tw);\n                        } else {\n                            thk = Math.min(Gx.lyr[n].radius, m.trunc(0.6 * tw));\n                        }\n\n                        mx.draw_symbol(Mx, ic, ix + tw - labelOffset, iy - 3,\n                            Gx.lyr[n].symbol, thk);\n                    }\n                } else if (Gx.lyr[n] instanceof Layer2D) {\n                    //draw colorbar for 2D layers.  The bar needs to leave space for the modlayer\n                    // icon which occupies the first text-width\n                    mx.legend_colorbar(Mx, xc + (2 * tw) - labelOffset, iy - (Mx.text_h / 2),\n                        (tw * 4), (Mx.text_h / 2));\n                }\n            }\n            ix = ix + tw * 3;\n            iy = iy + Mx.text_h * 0.3;\n            mx.text(Mx, ix - labelOffset, iy, Gx.lyr[n].name);\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function form_plotnote(plot) {\n        var Gx = plot._Gx;\n        if (Gx.note) {\n            return;\n        }\n\n        var hcb0 = plot.get_hcb_by_lyrn(0);\n        if (_.size(Gx.HCB_UUID) === 0) {\n            Gx.note = \"\";\n        } else if (hcb0 && hcb0.plotnote === undefined) {\n            // if layer 0 doesn't have a plot note, build one\n            var files = [];\n            for (var n = 0; n < Gx.HCB.length; n++) {\n                var hcb = plot.get_hcb_by_lyrn(n);\n                if (hcb.file_name) {\n                    files.push(hcb.file_name);\n                }\n            }\n            Gx.note = files.join(\"|\").toUpperCase();\n        }\n    }\n\n    function draw_pcut_x(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined) || (Gx.x_cut_data === undefined)) {\n            return;\n        }\n\n        //fill variables to draw x-cut box along bottom\n        // one-pixel lines need to be draw on half-pixel boundaries\n        var plot_width = Mx.r - Mx.l;\n        Gx.x_box_x = Math.floor(Mx.l - 2) + 0.5;\n        Gx.x_box_y = Math.floor(Mx.b + 25) + 0.5;\n        Gx.x_box_w = Math.floor(plot_width + 4);\n        Gx.x_box_h = Math.floor((5 * Mx.text_h) + 20);\n\n        mx.draw_box(Mx, Mx.fg, Gx.x_box_x, Gx.x_box_y, Gx.x_box_w, Gx.x_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.x_cut_data.length; ii++) {\n            var z = plot._Gx.x_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.x_box_h / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var xrt = plot._Gx.x_box_w / plot._Gx.x_cut_data.length;\n            var xpx = Math.round(ii * xrt);\n\n            var xnew = plot._Gx.x_box_x + xpx;\n            var ynew = (plot._Gx.x_box_y + plot._Gx.x_box_h - zpx);\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_pcut_y(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((Gx.zmin === undefined) || (Gx.zmax === undefined) || (Gx.y_cut_data === undefined)) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n\n        //fill variables to draw y-cut box along right sidea\n        // one-pixel lines need to be draw on half-pixel boundaries\n        Gx.y_box_x = Math.floor(Mx.r + 25) + 0.5;\n        Gx.y_box_y = Math.floor(Mx.t - 2) + 0.5;\n        Gx.y_box_w = Math.floor((5 * Mx.text_w) + 20);\n        Gx.y_box_h = Math.floor(plot_height + 2);\n\n        if (Gx.lg_colorbar) { //move over box if large colorbar displayed\n            Gx.y_box_x += 100;\n        }\n\n        //draw y-cut box\n        mx.draw_box(Mx, Mx.fg, Gx.y_box_x, Gx.y_box_y, Gx.y_box_w, Gx.y_box_h, 1, Mx.bg);\n\n        var ctx = Mx.active_canvas.getContext(\"2d\");\n        ctx.beginPath();\n        ctx.lineWidth = 1;\n        ctx.strokeStyle = Mx.fg;\n\n        var x = null;\n        var y = null;\n        for (var ii = 0; ii < plot._Gx.y_cut_data.length; ii++) {\n            var z = plot._Gx.y_cut_data[ii]; // the real z-value\n            // constrain to bounds\n            z = Math.min(Math.max(z, Gx.zmin), Gx.zmax);\n            var zrt = plot._Gx.y_box_w / (Gx.zmax - Gx.zmin); // the z-value to pixel ratio\n            var zpx = Math.round((z - Gx.zmin) * zrt);\n\n            var yrt = plot._Gx.y_box_h / plot._Gx.y_cut_data.length;\n            var ypx = Math.round(ii * yrt);\n\n            var xnew = (plot._Gx.y_box_x + zpx);\n            var ynew = plot._Gx.y_box_y + ypx;\n\n            if (ii === 0) {\n                ctx.moveTo(xnew, ynew);\n            } else if ((xnew !== x) || (ynew !== y)) {\n                // only draw the line if we are moving to a new point\n                ctx.lineTo(xnew, ynew);\n                x = xnew;\n                y = ynew;\n            }\n        }\n        ctx.stroke();\n    }\n\n    function draw_layers(plot) {\n        let Gx = plot._Gx;\n        let Mx = plot._Mx;\n\n        var layers = Gx.lyr;\n        for (var n = 0; n < layers.length; n++) {\n            //if (Gx.sections !== 0) {\n            // TODO\n            //}\n            draw_layer(plot, layers[n]);\n        }\n\n        // if we are allowing auto-scaling on y\n        if ((Gx.autol > 1) && (Gx.panymin !== undefined) && (Gx.panymax !== undefined)) {\n            var fac = 1.0 / (Math.max(Gx.autol, 1));\n\n            Gx.panymin = Gx.panymin * fac + Mx.stk[0].ymin * (1.0 - fac);\n            Gx.panymax = Gx.panymax * fac + Mx.stk[0].ymax * (1.0 - fac);\n\n            if (((Gx.autoy & 1) !== 0)) {\n                Mx.stk[0].ymin = Gx.panymin;\n            }\n            if (((Gx.autoy & 2) !== 0)) {\n                Mx.stk[0].ymax = Gx.panymax;\n            }\n        }\n    }\n\n    /**\n     * Draws the specified layer.\n     *\n     * This is expected to be called after clearing the plot.\n     *\n     * @param {sigplot.Plot}\n     *            the plot object\n     * @param {Number}\n     *            the layer to draw\n     * @private\n     * @memberOf sigplot\n     */\n    function draw_layer(plot, layer) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!layer.display) || (Gx.hold !== 0)) {\n            return;\n        }\n\n        let lyr_bnds = layer.draw();\n        if (lyr_bnds && Gx.autol !== 0) {\n            set_panbounds(plot, lyr_bnds);\n        }\n\n        // TODO consider if this is a source of performance\n        // issues on streaming plots\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdraw', true, true);\n        evt.index = layer.index;\n        evt.name = layer.name; // the name of the layer\n        evt.layer = layer;\n        mx.dispatchEvent(Mx, evt);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function delete_layer(plot, n) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        //if (n < Gx.modlayer) Gx.modlayer = Gx.modlayer - 1;\n        //if (n < Gx.modsource) Gx.modsource = Gx.modsource - 1;\n\n        // Notify listeners that a layer is about to be deleted\n        var evt = document.createEvent('Event');\n        evt.initEvent('lyrdel', true, true);\n        evt.index = n;\n        evt.name = Gx.lyr[n].name; // the name of the layer\n        evt.layer = Gx.lyr[n];\n        var executeDefault = mx.dispatchEvent(Mx, evt);\n        if (!executeDefault) {\n            return; // Delete was prevented\n        }\n\n        Gx.lyr[n].ybufn = 0;\n        Gx.lyr[n].ybuf = null;\n        if (n < Gx.lyr.length - 1) {\n            var lyr = Gx.lyr[n];\n            for (var i = n; i < Gx.lyr.length - 1; i++) {\n                Gx.lyr[i] = Gx.lyr[i + 1];\n            }\n        }\n        Gx.lyr.length -= 1;\n\n        if (_.size(Gx.HCB_UUID) > 0) {\n            Gx.panxmin = 1.0;\n            Gx.panxmax = -1.0;\n            Gx.panymin = 1.0;\n            Gx.panymax = -1.0;\n        }\n    }\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n\n    function draw_p_cuts(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        if (Gx.lyr[0].hcb[\"class\"] !== 2) {\n            return;\n        }\n\n        var plot_height = Mx.b - Mx.t;\n        var plot_width = Mx.r - Mx.l;\n        var height = Gx.lyr[0].yframe;\n        var width = Gx.lyr[0].xframe;\n\n        if (Gx.p_cuts) {\n            if (((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.p_cuts_xpos !== Mx.xpos))) {\n                var line = 0;\n                var i = 0;\n\n                if (Gx.lyr[0].yCutData) {\n                    Gx.y_cut_data = Gx.lyr[0].yCutData(\n                        pixel_to_real(plot, Mx.xpos, 0).x,\n                        true\n                    );\n\n                    draw_pcut_y(plot);\n                    if (!Gx.lyr[0].hcb.pipe) {\n                        Gx.p_cuts_xpos = Mx.xpos;\n                    }\n                }\n            }\n            if (((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.p_cuts_ypos !== Mx.ypos))) {\n                var row = 0;\n                var start = 0;\n                var finish = 0;\n                var i = 0;\n\n                //fill data for x_cut for this mouse ypos\n                if (Gx.lyr[0].xCutData) {\n                    Gx.x_cut_data = Gx.lyr[0].xCutData(\n                        pixel_to_real(plot, 0, Mx.ypos).y,\n                        true\n                    );\n                    draw_pcut_x(plot);\n\n                    // If we are a static file, store off the position\n                    // so we don't invoke xCutData on refreshes unless\n                    // the mouse moves\n                    if (!Gx.lyr[0].hcb.pipe) {\n                        Gx.p_cuts_ypos = Mx.ypos;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_crosshairs(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.cross) {\n            if ((Gx.cross === \"vertical\") || (Gx.cross === true)) {\n                if ((Mx.xpos >= Mx.l) && (Mx.xpos <= Mx.r) && (Gx.cross_xpos !== Mx.xpos)) {\n                    if (Gx.cross_xpos !== undefined) {\n                        mx.rubberline(Mx, Gx.cross_xpos, Mx.t, Gx.cross_xpos, Mx.b);\n                    }\n                    mx.rubberline(Mx, Mx.xpos, Mx.t, Mx.xpos, Mx.b);\n                    Gx.cross_xpos = Mx.xpos;\n                }\n            }\n            if ((Gx.cross === \"horizontal\") || (Gx.cross === true)) {\n                if ((Mx.ypos >= Mx.t) && (Mx.ypos <= Mx.b) && (Gx.cross_ypos !== Mx.ypos)) {\n                    if (Gx.cross_ypos !== undefined) {\n                        mx.rubberline(Mx, Mx.l, Gx.cross_ypos, Mx.r, Gx.cross_ypos);\n                    }\n\n                    mx.rubberline(Mx, Mx.l, Mx.ypos, Mx.r, Mx.ypos);\n                    Gx.cross_ypos = Mx.ypos;\n                }\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_marker(plot) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (Gx.xmrk !== null && Gx.ymrk !== null) {\n            var pix = mx.real_to_pixel(Mx, Gx.xmrk, Gx.ymrk);\n            if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 1)) {\n                if (pix.clipped) {\n                    return;\n                }\n            } else if ((Gx.lyr.length > 0) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                if (pix.clipped_x || !pix.clipped_y) {\n                    return;\n                }\n            }\n            var ctx = Mx.active_canvas.getContext(\"2d\");\n            ctx.beginPath();\n            ctx.strokeStyle = Mx.xwfg;\n            ctx.fillStyle = Mx.xwfg;\n            ctx.arc(pix.x, pix.y, 2, 0, 360);\n            ctx.stroke(); // just draw the arc's outline\n\n            // TODO add x/y coord\n            ctx.textBaseline = \"alphabetic\";\n            ctx.textAlign = \"left\";\n            ctx.fillStyle = Mx.fg;\n            ctx.font = Mx.font.font;\n\n            var text = \"x:\" + mx.format_g(Gx.xmrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5);\n            text = \"y:\" + mx.format_g(Gx.ymrk, 6, 3, true);\n            ctx.fillText(text, pix.x + 5, pix.y - 5 + Mx.text_h);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changephunits(plot, newphunits) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n        var newplab = Gx.plab;\n        if (newphunits === 'R') {\n            newplab = 23;\n        } else if (newphunits === 'D') {\n            newplab = 24;\n        }\n        if (newphunits === 'C') {\n            newplab = 25;\n        }\n        if (newplab !== Gx.plab) {\n            var phscale = [Math.PI, 180.0, 0.5];\n            var dscl = phscale[newplab - 23] / phscale[Gx.plab - 23];\n            Gx.plab = newplab;\n            if (Gx.cmode === 2) {\n                for (var i = 0; i <= Mx.level; i++) {\n                    Mx.stk[i].ymin = Mx.stk[i].ymin * dscl;\n                    Mx.stk[i].ymax = Mx.stk[i].ymax * dscl;\n                    Mx.stk[i].yscl = Mx.stk[i].yscl * dscl;\n                }\n\n                Gx.panymin = Gx.panymin * dscl;\n                Gx.panymax = Gx.panymax * dscl;\n                plot.refresh();\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function changemode(plot, newmode) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        Gx.xdata = false;\n        for (var n = 0; n < Gx.lyr.length; n++) {\n            if (newmode === 5) {\n                Gx.lyr[n].xdata = true;\n            } else {\n                Gx.lyr[n].xdata = false; // TODO (Gx.lyr(n).xsub > 0)\n            }\n            if (Gx.lyr[n].xdata) {\n                Gx.xdata = true;\n            }\n        }\n\n        if (newmode === Gx.cmode) {\n            return;\n        } else if (newmode === 5 && Gx.index) {\n            m.log.error(\"Imag/Real mode not permitted in INDEX mode\");\n        } else if (Gx.lyr.length <= 0) {\n            Gx.cmode = newmode;\n            // The call to display specs isn't found in sigplot.for;\n            // which causes a small bug where the plot mode is\n            // changed but the mode label in the specs area\n            // isn't updated.\n            display_specs(plot);\n        } else if (newmode > 0) {\n            var oldmode = Gx.cmode;\n            Gx.cmode = newmode;\n\n            var autox = Gx.autox;\n            var autoy = Gx.autoy;\n            Gx.autox = 3;\n            Gx.autoy = 3;\n\n            if ((newmode === 5) || (oldmode === 5)) {\n                Gx.panxmin = 1.0;\n                Gx.panxmax = -1.0;\n                Gx.panymin = 1.0;\n                Gx.panymax = -1.0;\n                Mx.level = 0;\n\n                if (newmode === Gx.basemode) {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else if ((newmode === 5) || (Gx.basemode === 5)) {\n                    scale_base(plot, {\n                        get_data: true\n                    });\n                } else {\n                    Mx.stk[0].xmin = Gx.xmin;\n                    Mx.stk[0].xmax = Gx.xmax;\n                    scale_base(plot, {\n                        get_data: true\n                    }, Gx.xmin, Gx.xmax);\n                }\n            } else {\n                if ((_.size(Gx.HCB_UUID) === 0) && (newmode === Gx.basemode)) {\n                    Gx.panymin = 1.0;\n                    Gx.panymax = -1.0;\n                    Mx.stk[0].ymin = Gx.ymin;\n                    Mx.stk[0].ymax = Gx.ymax;\n                } else {\n                    scale_base(plot, {}, Mx.stk[Mx.level].xmin,\n                        Mx.stk[Mx.level].xmax);\n                }\n                for (var n = 1; n <= Mx.level; n++) {\n                    Mx.stk[n].ymin = Mx.stk[0].ymin;\n                    Mx.stk[n].ymax = Mx.stk[0].ymax;\n                }\n            }\n            Gx.autox = autox;\n            Gx.autoy = autoy;\n            plot.refresh();\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function draw_panbars(plot) {\n        var k; // integer*4\n        //var i1; // integer*4\n        //var itext; // integer*4\n\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        if ((!Gx.pan) || (Mx.widget)) {\n            return;\n        }\n\n        k = Mx.level; // Y scrollbar\n\n        var out = {\n            ps: Mx.stk[k].ymin,\n            pe: Mx.stk[k].ymax\n        };\n        var need_y_scrollbar = ((out.ps !== Gx.panymin) || (out.pe !== Gx.panymax));\n        need_y_scrollbar = need_y_scrollbar && (Mx.level > 0);\n\n        if (Gx.autohide_panbars && (!need_y_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n            var ctx = Mx.canvas.getContext(\"2d\");\n            ctx.fillStyle = Mx.bg;\n            ctx.fillRect(Gx.pyl, Mx.t, Gx.pyl + Gx.pthk, Mx.b - Mx.t);\n        } else {\n            var i1 = mx.scrollbar(Mx, 0, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t, Mx.b, out,\n                Gx.panymin, Gx.panymax, undefined, Mx.scrollbar_y);\n            Mx.stk[k].ymin = out.ps;\n            Mx.stk[k].ymax = out.pe;\n        }\n\n        if (Gx.pl < Mx.width) { // X scrollbar\n            out = {\n                ps: Mx.stk[k].xmin,\n                pe: Mx.stk[k].xmax\n            };\n            var need_x_scrollbar = ((out.ps !== Gx.panxmin) || (out.pe !== Gx.panxmax));\n            need_x_scrollbar = need_x_scrollbar && (!Gx.all || (Mx.level > 0));\n\n            if (Gx.autohide_panbars && (!need_x_scrollbar || !plot.mouseOnCanvas) && !Gx.panning) {\n                var ctx = Mx.canvas.getContext(\"2d\");\n                ctx.fillStyle = Mx.bg;\n                ctx.fillRect(Gx.pl, Gx.pt - 1, Gx.pr - Gx.pl, Gx.pthk + 4);\n            } else {\n                var i1 = mx.scrollbar(Mx, 0, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out,\n                    Gx.panxmin, Gx.panxmax, undefined, Mx.scrollbar_x);\n                Mx.stk[k].xmin = out.ps;\n                Mx.stk[k].xmax = out.pe;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pan(plot, action, flag, mouseEvent) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var i; // an integer*4\n        var k; // an integer*4\n        // var ih // an integer*4\n        // var iw; // an integer*4\n        // var imin; // an integer*4\n        // var imax; // an integer*4\n        var j; // an integer*4\n        var xmin; // a real*8\n        var xmax; // a real*8\n        var xran; // a real*8\n        // var xtemp; // a real*8\n        var ymin; // a real*8\n        var ymax; // a real*8\n        var yran; // a real*8\n        // var ytemp; // a real*8\n        var warn; // a logical*4\n\n        var scrollbarState;\n\n        var sbx = new mx.SCROLLBAR(); // a SCROLLBAR\n        var sby = new mx.SCROLLBAR(); // a SCROLLBAR\n\n        var SIGPLOT_PAN = false;\n        k = Mx.level;\n        if (Gx.panmode > 0) {\n            sbx.flag = 11;\n            sby.flag = 11;\n        } else {\n            sbx.flag = -12;\n            sby.flag = -12;\n        }\n        if (flag === 0) {\n            sbx.action = 0;\n            sby.action = 0;\n        }\n\n        warn = true;\n        if (action.substring(0, 1) === 'Y') {\n            ymin = Mx.stk[k].ymin;\n            ymax = Mx.stk[k].ymax;\n            yran = ymax - ymin;\n            if (action === 'YPAN') {\n                scrollbarState = Mx.scrollbar_y;\n\n                var out = {\n                    ps: ymin,\n                    pe: ymax\n                };\n                i = mx\n                    .scrollbar(Mx, sby, Gx.pyl, Gx.pyl + Gx.pthk, Mx.t,\n                        Mx.b, out, Gx.panymin, Gx.panymax, mouseEvent,\n                        scrollbarState);\n                ymin = out.ps;\n                ymax = out.pe;\n                // TODO: Warn only if Scrollbar arrow is pressed and no\n                // movement.\n                if (sby.action !== 0) {\n                    j = mx.scroll(Mx, sby, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'YCENTER') {\n                // Orig code : ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) /\n                // 2) / (Mx.b - Mx.t) // TODO Worry about any int division here?\n                ymin = ymin - yran * (Mx.ypos - (Mx.t + Mx.b) / 2) / (Mx.b - Mx.t);\n                ymax = ymin + yran;\n                warn = false;\n            }\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n\n                plot.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('ypan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                plot.inPan = false;\n\n                plot.refresh();\n                // MSGDO(MSK_PANY, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        } else {\n            xmin = Mx.stk[k].xmin;\n            xmax = Mx.stk[k].xmax;\n            xran = xmax - xmin;\n            if (action === 'XPAN') {\n                scrollbarState = Mx.scrollbar_x;\n\n                var out = {\n                    ps: xmin,\n                    pe: xmax\n                };\n                i = mx\n                    .scrollbar(Mx, sbx, Gx.pl, Gx.pr, Gx.pt, Gx.pt + Gx.pthk, out, Gx.panxmin, Gx.panxmax,\n                        mouseEvent, scrollbarState);\n                xmin = out.ps;\n                xmax = out.pe;\n                // TODO: Warn only if Scrollbox arrow is pressed and no\n                // movement.\n                if (sbx.action !== 0) {\n                    j = mx.scroll(Mx, sbx, mx.XW_UPDATE, undefined,\n                        scrollbarState);\n                }\n                warn = false;\n            } else if (action === 'XCENTER') {\n                // Original code : xmin = xmin + xran * (Mx.xpos - (Mx.l + Gx.r)\n                // / 2) / (Mx.r - Mx.l) // TODO Worry about any int division\n                // here?\n                xmin = xmin + xran * (Mx.xpos - (Mx.l + Mx.r) / 2) / (Mx.r - Mx.l);\n                if (xmin !== Mx.stk[k].xmin) {\n                    xmax = xmin + xran;\n                }\n                warn = false;\n            }\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n\n                plot.inPan = true; // prevent recursive pans\n                var evt = document.createEvent('Event');\n                evt.initEvent('xpan', true, true);\n                evt.level = Mx.level;\n                evt.xmin = Mx.stk[Mx.level].xmin;\n                evt.ymin = Mx.stk[Mx.level].ymin;\n                evt.xmax = Mx.stk[Mx.level].xmax;\n                evt.ymax = Mx.stk[Mx.level].ymax;\n                mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n                plot.inPan = false;\n\n                plot.refresh();\n                // MSGDO (MSK_PANX, Mx.level); // just sets plotinfo.xmin and\n                // xmax into the MQD for the menu\n                SIGPLOT_PAN = true;\n            }\n            // TODO Later - Implement a messagebox status method\n            // else if (warn) {\n            // mx.message('All panned out', -1.0);\n            // }\n        }\n\n        return SIGPLOT_PAN;\n    }\n\n    /**\n     * Direct method to handle the dragging of a scrollbar.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param event\n     *            The mouse move event.\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_scrollbar(plot, scrollAction, event) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n        var min;\n        var max;\n\n        // ----- Retrieve appropriate SCROLLBAR -----\n        var scrollbar;\n        if (scrollAction === \"XPAN\") {\n            scrollbar = plot._Mx.scrollbar_x;\n        } else if (scrollAction === \"YPAN\") {\n            scrollbar = plot._Mx.scrollbar_y;\n        } else {\n            throw \"Unable to drag scrollbar - scrollAction is not 'XPAN' or 'YPAN'!!\";\n        }\n\n        // ----- OLD SIGPLOT.PAN Logic -----\n        scrollbar.flag = -12; // TODO Necessary?\n        var k = Mx.level;\n        if (scrollAction === \"XPAN\") {\n            min = Mx.stk[k].xmin;\n            max = Mx.stk[k].xmax;\n        } else if (scrollAction === \"YPAN\") {\n            min = Mx.stk[k].ymin;\n            max = Mx.stk[k].ymax;\n        } else {\n            min = undefined;\n            max = undefined;\n        }\n\n        // ----- MX.SCROLLBAR Logic -----\n        var rangeOut = {\n            \"min\": min,\n            \"max\": max\n        };\n        drag_updateRange(Mx, Gx, scrollbar, scrollAction, rangeOut, event);\n        min = rangeOut.min;\n        max = rangeOut.max;\n\n        // ----- UPDATE SCROLLBAR -----\n        scrollbar.smin = min;\n        scrollbar.srange = max - min;\n        mx.redrawScrollbar(scrollbar, Mx, undefined);\n\n        // ----- Update the viewbox -----\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            scrollAction.slice(0, 1));\n\n        plot.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (scrollAction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (scrollAction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        plot.inPan = false;\n\n        scrollbar.action = 0; // TODO New step - reset action of the scrollbar\n        // after drag is done...\n        plot.refresh();\n    }\n\n    /**\n     * Method to update plot range based on a drag event. Takes the mouse offset\n     * introduced by the drag and adds a scale factor.\n     *\n     * @param Gx\n     *            The GX Context to work with.\n     * @param scrollbar\n     *            The Scrollbar to use.\n     * @param scrollAction\n     *            The scroll action being performed. Either \"YPAN\" or \"XPAN\" are\n     *            accepted.\n     * @param range\n     *            The plot' min and max range values to update.\n     * @param event\n     *            The mouse move event.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function drag_updateRange(Mx, Gx, scrollbar, scrollAction, range, event) {\n        scrollbar.action = mx.SB_DRAG;\n\n        if (scrollAction === \"YPAN\") {\n            var scaleFactor = Mx.scrollbar_y.trange / Mx.scrollbar_y.h;\n            if (scrollbar.origin === 4) { // inverted y\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenY - Gx.panning.ypos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.ymin - realOffset) < Gx.panymin) { // At the left\n                // edge\n                range.max = Gx.panymin + (range.max - range.min);\n                range.min = Gx.panymin;\n            } else if ((Gx.panning.ymax - realOffset) > Gx.panymax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panymax - (range.max - range.min);\n                range.max = Gx.panymax;\n            } else {\n                range.min = Gx.panning.ymin - realOffset;\n                range.max = Gx.panning.ymax - realOffset;\n            }\n        } else if (scrollAction === \"XPAN\") {\n            var scaleFactor = Mx.scrollbar_x.trange / Mx.scrollbar_x.w;\n            if (scrollbar.origin === 3) { // inverted x\n                scaleFactor *= -1;\n            }\n            var mouseOffset = event.screenX - Gx.panning.xpos;\n            var realOffset = mouseOffset * scaleFactor;\n\n            if ((Gx.panning.xmin + realOffset) < Gx.panxmin) { // At the left\n                // edge\n                range.max = Gx.panxmin + (range.max - range.min);\n                range.min = Gx.panxmin;\n            } else if ((Gx.panning.xmax + realOffset) > Gx.panxmax) { // At\n                // the\n                // right\n                // edge\n                range.min = Gx.panxmax - (range.max - range.min);\n                range.max = Gx.panxmax;\n            } else {\n                range.min = Gx.panning.xmin + realOffset;\n                range.max = Gx.panning.xmax + realOffset;\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function setupPrompt(plot, promptText, isValid, onSuccess, inputValue,\n        xpos, ypos, callback) {\n        var Mx = plot._Mx;\n\n        if (Mx.prompt) {\n            throw \"Prompt already exists! Can only have one prompt at a time!\";\n        }\n\n        // Disable Mx keypress/mouse listeners\n        mx.disableListeners(Mx);\n\n        // Disable Plot keypress/mouse listeners\n        plot.disable_listeners();\n\n        // Add on to the onSuccess method with plot specifics\n        var realOnSuccess = function(plot, onSuccess) {\n            return function(value) {\n                onSuccess(value);\n\n                // Re-enable Mx keypress/mouse listeners\n                mx.enableListeners(Mx);\n\n                // Re-enable Plot keypress/mouse listeners\n                plot.enable_listeners();\n\n                plot.refresh();\n\n                if (callback !== undefined) {\n                    callback();\n                }\n            };\n        };\n\n        var refresh = function() { // TODO Refactor this setup method to be\n            // more like mx.menu/main menu widget?\n            plot.refresh();\n        };\n\n        // Create the prompt\n        var errorMessageTimeout = 5000;\n\n        try {\n            mx.prompt(Mx, promptText, isValid, realOnSuccess(plot, onSuccess),\n                refresh, inputValue, xpos, ypos, errorMessageTimeout);\n        } catch (err) {\n            console.log(\"ERROR: Failed to set up prompt due to: \" + err);\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function enable_listeners(plot) {\n        var Mx = plot._Mx;\n        mx.addEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.addEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove, false);\n        document.addEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.addEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.addEventListener(\"mousedown\", plot.dragMouseDownHandler, false);\n        window.addEventListener(\"mousemove\", plot.throttledDragOnMouseMove, false);\n        window.addEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.addEventListener(\"wheel\", plot.wheelHandler, false);\n        window.addEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.addEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.addEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function disable_listeners(plot) {\n        var Mx = plot._Mx;\n\n        mx.removeEventListener(Mx, \"mousedown\", plot.onmousedown, false);\n        mx.removeEventListener(Mx, \"mousemove\", plot.throttledOnMouseMove,\n            false);\n        document.removeEventListener(\"mouseup\", plot.docMouseUp, false);\n        mx.removeEventListener(Mx, \"mouseup\", plot.mouseup, false);\n        window.removeEventListener(\"mousedown\", plot.dragMouseDownHandler,\n            false);\n        window.removeEventListener(\"mousemove\", plot.throttledDragOnMouseMove,\n            false);\n        window.removeEventListener(\"mouseup\", plot.dragMouseUpHandler, false);\n        window.removeEventListener(\"wheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"mousewheel\", plot.wheelHandler, false);\n        window.removeEventListener(\"DOMMouseScroll\", plot.wheelHandler, false);\n        window.removeEventListener(\"keypress\", plot.onkeypress, false);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function display_specs(plot) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var ctx = Mx.canvas.getContext(\"2d\");\n\n        // section logic\n        if (Gx.sections !== 0) {\n            // TODO\n        } else {\n            Gx.isec = 0;\n        }\n\n        // transform into realworld coordinates\n        // is already done by the mousemove listener\n        // adjust for abscissa mode\n        if (Mx.warpbox) {\n            var re = pixel_to_real(plot, Mx.warpbox.xo, Mx.warpbox.yo);\n            var rwh = pixel_to_real(plot, Mx.warpbox.xl, Mx.warpbox.yl);\n\n            Gx.aretx = re.x;\n            Gx.arety = re.y;\n            Gx.dretx = rwh.x - re.x;\n            Gx.drety = rwh.y - re.y;\n        } else {\n            Gx.aretx = Gx.retx;\n            Gx.arety = Gx.rety;\n            Gx.dretx = Gx.retx - Gx.xmrk;\n            Gx.drety = Gx.rety - Gx.ymrk;\n        }\n\n        if ((Gx.cmode === 5) && (Gx.iabsc === 1)) {\n            Gx.iabsc = 2;\n        } // R/I mode\n        if (Gx.iabsc === 1) { // index\n            Gx.aretx = Math.round((Gx.aretx - Gx.xstart) / Gx.xdelta);\n            if (!Gx.index) {\n                Gx.aretx += 1;\n            }\n            Gx.dretx = Math.round(Gx.dretx / Gx.xdelta);\n        } else if (Gx.iabsc === 2) { // 1/absc\n            if (Gx.aretx !== 0.0) {\n                Gx.aretx = 1.0 / Gx.aretx;\n            }\n            if (Gx.arety !== 0.0) {\n                Gx.arety = 1.0 / Gx.arety;\n            }\n            if (Gx.dretx !== 0.0) {\n                Gx.dretx = 1.0 / Gx.dretx;\n            }\n            if (Gx.drety !== 0.0) {\n                Gx.drety = 1.0 / Gx.drety;\n            }\n        }\n\n        if ((!Gx.show_readout) || (Mx.widget)) {\n            return;\n        }\n\n        // Clear the specs area\n        // First clear the y-row\n        ctx.fillStyle = Mx.bg;\n        var iy = Math.floor(Mx.height - 2.5 * Mx.text_h);\n        ctx.fillRect(Mx.text_w, iy - 1, 49 * Mx.text_w, iy + 1.5 * Mx.text_h);\n\n        // Then clear the x-row\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        var k = Math.max(Gx.pr + Mx.text_w, Mx.width - Mx.text_w * 2);\n        ctx.fillStyle = Mx.bg;\n        ctx.fillRect(k, iy - Mx.text_h, Mx.text_w, Mx.text_h);\n\n        if (Gx.autohide_readout && !plot.mouseOnCanvas && !Gx.panning) {\n            return;\n        }\n\n        var xval, yval, xdelta, ydelta;\n        // TODO handle xfmt/yfmt using m.d2a_form equivalent\n        if ((Gx.iabsc === 0) && (Gx.ylab === 4)) {\n            yval = (m.sec2tspec(Gx.arety) + \"                \").substring(0, 16);\n            ydelta = (m.sec2tspec(Gx.drety, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            yval = mx.format_g(Gx.arety, 16, 9, true);\n            ydelta = mx.format_g(Gx.drety, 16, 9);\n        }\n        if ((Gx.iabsc === 0) && (Gx.xlab === 4)) {\n            xval = (m.sec2tspec(Gx.aretx) + \"                \").substring(0, 16);\n            xdelta = (m.sec2tspec(Gx.dretx, \"delta\") + \"                \").substring(0, 16);\n        } else {\n            xval = mx.format_g(Gx.aretx, 16, 9, true);\n            xdelta = mx.format_g(Gx.dretx, 16, 9);\n        }\n\n        var chara = \"y: \" + yval + \" dy: \" + ydelta + \" L=\" + Mx.level + \" \" + cxm[Gx.cmode - 1];\n        var charb = \"x: \" + xval + \" dx: \" + xdelta + \" \" + cam[Gx.iabsc];\n        if (Gx.iabsc === 3) {\n            if (Gx.dretx === 0.0) {\n                chara = chara.substr(0, 20) + \"sl: Inf             \" + chara.substr(40, chara.length);\n            } else {\n                chara = chara.substr(0, 20) + \"sl: \" + mx.format_g(Gx.drety / Gx.dretx, 16, 9) + chara.substr(40, chara.length);\n            }\n        }\n\n        iy = Math.floor(Mx.height - 1.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, chara);\n        iy = Math.floor(Mx.height - 0.5 * Mx.text_h);\n        mx.text(Mx, Mx.text_w, iy, charb);\n\n        if (mx.LEGACY_RENDER) {\n            // display controls indicator\n            if (k < Mx.width) {\n                if (Gx.cntrls > 0) {\n                    mx.text(Mx, k, iy, 'C');\n                } else {\n                    mx.text(Mx, k, iy, ' ');\n                }\n            }\n        }\n\n        // If one of the layers is 2D we can draw a color-bar.\n        // Note that if two Layer2D are drawn it is possible to\n        // use a different color bar for each.\n        var needsColorBar = Gx.lyr.some(function(lyr) {\n            return (lyr instanceof Layer2D);\n        });\n\n        if (needsColorBar) {\n            // draw color bar - large\n            var x = 0;\n            var y = 0;\n            var w = 0;\n            var h = 0;\n            if (Gx.lg_colorbar) {\n                var plot_height = Mx.b - Mx.t;\n\n                x = Mx.r + 35;\n                y = Mx.t + (1 / 8) * plot_height;\n                w = 5 * Mx.text_w;\n                h = (3 / 4) * plot_height;\n\n                // If I have a large color bar, I probably also want to add buttons\n                var ctx = Mx.active_canvas.getContext(\"2d\");\n                ctx.strokeStyle = \"rgba(124, 123, 121, 0.8)\";\n                ctx.fillStyle = \" rgba(124, 123, 121, 0.8)\";\n\n                // For more precise referencing\n                var colorbar_x = x;\n                var colorbar_y = y;\n                var colorbar_width = w;\n                var colorbar_height = h;\n                var button_width = colorbar_width - 2;\n                var button_height = button_width / 2;\n                var button_x = colorbar_x + ((colorbar_width - button_width) / 2);\n                var button_y = colorbar_y - 10;\n\n                // Draw the top button\n                ctx.beginPath();\n                ctx.moveTo(button_x, button_y);\n                ctx.lineTo(button_x + button_width, button_y);\n                ctx.lineTo(button_x + (1 / 2) * button_width, button_y - button_height);\n                ctx.lineTo(button_x, button_y);\n                ctx.stroke();\n                ctx.fill();\n\n                // Draw the bottom button\n                var button_y_2 = button_y + colorbar_height + 20;\n\n                ctx.beginPath();\n                ctx.moveTo(button_x, button_y_2);\n                ctx.lineTo(button_x + button_width, button_y_2);\n                ctx.lineTo(button_x + (1 / 2) * button_width, button_y_2 + button_height);\n                ctx.lineTo(button_x, button_y_2);\n                ctx.stroke();\n                ctx.fill();\n\n                // Store this info so we can access it later\n\n                Gx.cbb_top_x1 = button_x;\n                Gx.cbb_top_y1 = button_y;\n                Gx.cbb_bot_x1 = button_x;\n                Gx.cbb_bot_y1 = button_y_2;\n                Gx.cbb_width = button_width;\n                Gx.cbb_height = button_height;\n\n            } else { // draw a small colorbar\n                x = (49 * Mx.text_w) - 3;\n                y = Mx.height - Mx.text_h * 2.5;\n                w = Mx.text_w;\n                h = Mx.text_h * 2;\n            }\n\n\n            mx.colorbar(Mx, x, y, w, h);\n        }\n\n        //draw boxes for the p_cuts\n        if (Gx.p_cuts && (Gx.lyr.length === 1) && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n            draw_pcut_y(plot);\n            draw_pcut_x(plot);\n        }\n\n    }\n\n    /**\n     * Determine the effective bounds of the plottable area, which is defined\n     * via the pan-boundaries (panxmin/panxmax/panymin/panymax).  Then check\n     * the stack (i.e. the viewable area) and update accordingly.\n     *  \n     * @memberOf sigplot\n     * @private\n     * \n     * @param plot\n     *         the plot to scale\n     * @param mode\n     *         various mode options (deprecated)\n     * @param xxmin\n     *         the xmin to begin scaling at\n     * @param xxmax\n     *         the xmax to end scaling at\n     * @param xlab\n     *         force a specific x-label\n     * @param ylab\n     *         force a specific y-label\n     */\n    function scale_base(plot, mode, xxmin, xxmax, xlab, ylab) {\n        const Mx = plot._Mx;\n        const Gx = plot._Gx;\n\n        // Reset pan boundaries\n        Gx.panxmin = undefined;\n        Gx.panxmax = undefined;\n        Gx.panymin = undefined;\n        Gx.panymax = undefined;\n\n        // Determine if we have been requested to only scale a subset of the xrange\n        // TODO - this is kinda holdover from 1D only mode and should be reconsidered\n        // given that SigPlot can do both 1D and 2D\n        let xmin = xxmin;\n        let xmax = xxmax;\n        const noxmin = (xmin === undefined);\n        const noxmax = (xmax === undefined);\n\n        if (Gx.lyr.length === 0) {\n            // If there are no layers we simply show -1 to 1 on each axis\n            Gx.panxmin = -1.0;\n            Gx.panxmax = 1.0;\n            Gx.panymin = -1.0;\n            Gx.panymax = 1.0;\n        } else {\n            // If there is at least on layer\n\n            // If specific xlabel/ylabel wasn't provided use the first layer\n            if (xlab === undefined) {\n                Gx.xlab = Gx.lyr[0].xlab;\n            }\n            if (ylab === undefined) {\n                Gx.ylab = Gx.lyr[0].ylab;\n            }\n\n            // Iterate over each layer\n            for (var n = 0; n < Gx.lyr.length; n++) {\n                // If a layer isn't displayed it's not considered as part of rescaling\n                if (Gx.lyr[n].display === false) {\n                    continue;\n                }\n                // If xmin wasn't provided as an argument, grab the layers\n                if (noxmin) {\n                    xmin = Gx.lyr[n].xmin;\n                } else {\n                    xmin = xxmin;\n                }\n                // If xmax wasn't provided as an argument, grab the layers\n                if (noxmax) {\n                    xmax = Gx.lyr[n].xmax;\n                } else {\n                    xmax = xxmax;\n                }\n\n                // If the labels between layers aren't consistent, use None instead\n                if (Gx.xlab !== Gx.lyr[n].xlab) {\n                    Gx.xlab = 0; // If the layers aren't consistent use None\n                }\n                if (Gx.ylab !== Gx.lyr[n].ylab) {\n                    Gx.ylab = 0; // If the layers aren't consistent use None\n                }\n\n                // Ask the layer for it's bounds\n                let lyr_bnds = Gx.lyr[n].get_pan_bounds();\n                // And update the boundaries accordingly\n                set_panbounds(plot, lyr_bnds);\n            } // end per-layer iteration\n        }\n\n        var xran = Gx.panxmax - Gx.panxmin;\n        if (xran < 0.0) {\n            Gx.panxmax = Gx.panxmin;\n            Gx.panxmin = Gx.panxmax + xran;\n            xran = -xran;\n        }\n        if (xran <= 1.0e-20) {\n            Gx.panxmin = Gx.panxmin - 1.0;\n            Gx.panxmax = Gx.panxmax + 1.0;\n        }\n        xran = Gx.panxmax - Gx.panxmin;\n\n        Gx.panxmin -= m.pad(xran, Gx.panxpad);\n        Gx.panxmax += m.pad(xran, Gx.panxpad);\n\n        if (((Gx.autox & 1) !== 0) && noxmin) {\n            Mx.stk[0].xmin = Gx.panxmin;\n        }\n        // If autox is set to allow auto-xmax _and_ xmax was not provided by scale_base\n        if (((Gx.autox & 2) !== 0) && noxmax) {\n            // the top-level stack xmax becomes the panxmax\n            Mx.stk[0].xmax = Gx.panxmax;\n            // unless 'All' mode is set or 'xdata' mode is used\n            // we emulate XPLOT by only showing the first 32768 points\n            if (!(Gx.all || Gx.xdata)) {\n                for (var n = 0; n < Gx.lyr.length; n++) {\n                    if (Gx.lyr[n].display === false) {\n                        continue;\n                    }\n                    xmax = Math.min(Gx.lyr[n].xmax, Mx.stk[0].xmax);\n                    var dpts = Math.abs((xmax - Gx.lyr[n].xmin) / Gx.lyr[n].xdelta) - Gx.bufmax + 1.0;\n                    if (dpts > 0) {\n                        Mx.stk[0].xmax = xmax - dpts * Math.abs(Gx.lyr[n].xdelta);\n                    }\n                }\n            }\n        }\n\n        if (((Gx.autoy & 1) !== 0)) {\n            Mx.stk[0].ymin = Gx.panymin;\n            for (var i = 0; i < Mx.stk.length; i++) {\n                if (Mx.stk[i].ymin === undefined) {\n                    Mx.stk[i].ymin = Gx.panymin;\n                }\n            }\n        }\n        if (((Gx.autoy & 2) !== 0)) {\n            Mx.stk[0].ymax = Gx.panymax;\n            for (var j = 0; j < Mx.stk.length; j++) {\n                if (Mx.stk[j].ymax === undefined) {\n                    Mx.stk[j].ymax = Gx.panymax;\n                }\n            }\n        }\n\n        if ((Gx.panymin !== undefined) && (Gx.panymax !== undefined)) {\n            var yran = (Gx.panymax - Gx.panymin);\n            Gx.panymin -= m.pad(yran, Gx.panypad);\n            Gx.panymax += m.pad(yran, Gx.panypad);\n        }\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function set_panbounds(plot, {\n        xmin,\n        xmax,\n        ymin,\n        ymax\n    }) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        if (xmin !== undefined) {\n            if (Gx.panxmin === undefined) {\n                Gx.panxmin = xmin;\n            } else {\n                Gx.panxmin = Math.min(Gx.panxmin, xmin);\n            }\n        }\n        if (xmax !== undefined) {\n            if (Gx.panxmax === undefined) {\n                Gx.panxmax = xmax;\n            } else {\n                Gx.panxmax = Math.max(Gx.panxmax, xmax);\n            }\n        }\n        if (ymin !== undefined) {\n            if (Gx.panymin === undefined) {\n                Gx.panymin = ymin;\n            } else {\n                Gx.panymin = Math.min(Gx.panymin, ymin);\n            }\n        }\n        if (ymax !== undefined) {\n            if (Gx.panymax === undefined) {\n                Gx.panymax = ymax;\n            } else {\n                Gx.panymax = Math.max(Gx.panymax, ymax);\n            }\n        }\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function pixel_to_real(plot, xpos, ypos) {\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var ret = mx.pixel_to_real(Mx, xpos, ypos);\n        if (Gx.index) {\n            ret.x = ret.x * Gx.xdelta;\n        }\n\n        return ret;\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInRectangle(x, y, rect_x, rect_y, rect_width, rect_height) {\n        return (x >= rect_x && x <= rect_x + rect_width && y >= rect_y && y <= rect_y + rect_height);\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function coordsInTriangle(x, y, tri_x1, tri_y1, tri_x2, tri_y2, tri_x3, tri_y3) {\n        // Uses barycentric coordinates\n        // https://en.wikipedia.org/wiki/Barycentric_coordinate_system ( and http://blackpawn.com/texts/pointinpoly/)\n\n        // Compute vectors\n        var v0 = [tri_x3 - tri_x1, tri_y3 - tri_y1];\n        var v1 = [tri_x2 - tri_x1, tri_y2 - tri_y1];\n        var v2 = [x - tri_x1, y - tri_y1];\n\n        // Compute dot products\n        var dot00 = (v0[0] * v0[0]) + (v0[1] * v0[1]);\n        var dot01 = (v0[0] * v1[0]) + (v0[1] * v1[1]);\n        var dot02 = (v0[0] * v2[0]) + (v0[1] * v2[1]);\n        var dot11 = (v1[0] * v1[0]) + (v1[1] * v1[1]);\n        var dot12 = (v1[0] * v2[0]) + (v1[1] * v2[1]);\n\n        var inv_denom = 1 / (dot00 * dot11 - dot01 * dot01);\n\n        var u = (dot11 * dot02 - dot01 * dot12) * inv_denom;\n        var v = (dot00 * dot12 - dot01 * dot02) * inv_denom;\n\n        /*\n        console.log(\"u \", u);\n        console.log(\"v \", v);\n        */\n\n        return (u >= 0 && v >= 0 && u + v < 1);\n\n    }\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanRegion(plot, coord) {\n        var inPanRegion = false;\n        var Gx = plot._Gx;\n        var Mx = plot._Mx;\n\n        var x = 0;\n        var y = 0;\n        if (coord === undefined) {\n            x = Mx.xpos;\n            y = Mx.ypos;\n\n            if (!plot.mouseOnCanvas) {\n                return false;\n            }\n        } else {\n            x = coord.x;\n            y = coord.y;\n        }\n\n        var command = ' ';\n\n        if (!Gx.pan) {\n            return false;\n        }\n\n        var outside_right_border = (x > Mx.r);\n        var above_top_border = (y <= Gx.pt + Gx.pthk + 2);\n        var below_bottom_border = (y > Gx.pt - 2);\n        var between_top_and_bottom = (y >= Mx.t && y <= Mx.b);\n        var between_left_and_right = (x >= Gx.pl && x <= Gx.pr);\n        var has_bottom_scrollbar = (Gx.show_readout || (Gx.x_scrollbar_location === \"bottom\"));\n\n        if (outside_right_border && between_top_and_bottom) { // YPAN\n            command = 'YPAN'; // Y scrollbar\n            // TODO do we want to\n            // reset the xposition?\n\n            if (Gx.lg_colorbar && (Gx.lyr[0].hcb[\"class\"] === 2)) {\n                // Need to do an additional check since there is area outside Mx.r that is NOT the pan region\n                var right_of_colorbar = (x > Mx.r + 100); // Mx.r = Mx.r - 100 is how we moved it initally\n                if (right_of_colorbar) {\n                    inPanRegion = true;\n                } else {\n                    inPanRegion = false;\n                }\n\n            } else {\n                Mx.xpos = Gx.pyl + m.trunc(Gx.pthk / 2);\n                inPanRegion = true;\n            }\n            //possibly do another check for p_cuts as well;\n        } else if (has_bottom_scrollbar && between_left_and_right && below_bottom_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        } else if (!has_bottom_scrollbar && between_left_and_right && above_top_border) {\n            command = 'XPAN'; // X scrollbar\n            Mx.ypos = Gx.pt + m.trunc(Gx.pthk / 2); // TODO Do we want to reset\n            // the yposition?\n            inPanRegion = true;\n        }\n\n        return {\n            inPanRegion: inPanRegion,\n            command: command\n        };\n    }\n\n\n    /**\n     * @memberOf sigplot\n     * @private\n     */\n    function inPanCenterRegion(plot) {\n        var inCenterRegion = false;\n        var Mx = plot._Mx;\n        var x = Mx.xpos;\n        var y = Mx.ypos;\n        var th = Mx.text_h;\n        var tw = Mx.text_w;\n        var command = ' ';\n\n        if (x < Mx.l - tw && y <= Mx.b && y >= Mx.t) { // YCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"blue\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(0, Mx.t, Mx.l - tw, Mx.b -\n            // Mx.t);\n            command = 'YCENTER';\n            inCenterRegion = true;\n        } else if (y > Mx.b + m.trunc(0.5 * tw) && y <= Mx.b + m.trunc(m.trunc(3 * th) / 2) && x >= Mx.l && x <= Mx.r) { // XCENTER\n            // Mx.canvas.getContext(\"2d\").strokeStyle = \"red\";\n            // Mx.canvas.getContext(\"2d\").strokeRect(Mx.l, Mx.b + m.trunc(.5 *\n            // tw),\n            // Mx.r - Mx.l, (Mx.b + m.trunc(m.trunc(3 * th) / 2)) - (Mx.b +\n            // m.trunc(.5 * tw)));\n            command = 'XCENTER';\n            inCenterRegion = true;\n        }\n\n        return {\n            inCenterRegion: inCenterRegion,\n            command: command\n        };\n    }\n\n    /**\n     * Returns true if position is within the given scrollbar's area. Depends on\n     * mx.scroll_real2pix method.\n     *\n     * @param position\n     *            An object containing 'x' and 'y' pixel values that represent a\n     *            position.\n     * @param scrollbar\n     *            The scrollbar object itself.\n     *\n     * @private\n     * @memberOf sigplot\n     */\n    function onScrollbar(position, scrollbar) {\n        var s1;\n        var sw;\n\n        /*\n         * Compute s, the offset in pixels from the 'origin' of the scrollbar's\n         * on-screen region.\n         */\n        var s;\n        if (scrollbar.origin & 1) {\n            s = position.x - scrollbar.x;\n            if (scrollbar.origin & 2) {\n                s = scrollbar.w - s;\n            }\n        } else {\n            s = position.y - scrollbar.y;\n            if (scrollbar.origin <= 2) {\n                s = scrollbar.h - s;\n            }\n        }\n\n        // Update s1 and sw values\n        var scrollReal2PixOut = mx.scroll_real2pix(scrollbar);\n        s1 = scrollReal2PixOut.s1;\n        sw = scrollReal2PixOut.sw;\n\n        // Determine if mouse is on scrollbar\n        if (s >= s1 && s <= s1 + sw) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Performs the middle-click scroll-menu action specified on the plot.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param action\n     *            The scrollbar action to perform.\n     * @param direction\n     *            The scroll direction to update. Acceptable directions are\n     *            either \"XPAN\" or \"YPAN\".\n     * @memberOf sigplot\n     * @private\n     */\n    function middleClickScrollMenuAction(plot, action, direction) {\n        var Mx = plot._Mx;\n\n        // Determine the appropriate scrollbar to work with\n        var scrollbar;\n        if (direction === \"XPAN\") {\n            scrollbar = Mx.scrollbar_x;\n        } else if (direction === \"YPAN\") {\n            scrollbar = Mx.scrollbar_y;\n        }\n\n        // Set scrollbar action\n        scrollbar.action = action;\n        scrollbar.step = 0.1 * scrollbar.srange;\n        scrollbar.page = 9 * scrollbar.step;\n        scrollbar.scale = 2.0;\n\n        // Update min and range to the appropriate values based on action\n        mx.scroll(Mx, scrollbar, mx.XW_COMMAND, undefined, scrollbar);\n\n        // Update the viewbox based on new min and max values\n        updateViewbox(plot, scrollbar.smin, scrollbar.smin + scrollbar.srange,\n            direction.slice(0, 1));\n\n        plot.inPan = true; // prevent recursive pans\n        var evt = document.createEvent('Event');\n        if (direction === \"XPAN\") {\n            evt.initEvent('xpan', true, true);\n        } else if (direction === \"YPAN\") {\n            evt.initEvent('ypan', true, true);\n        }\n        evt.level = Mx.level;\n        evt.xmin = Mx.stk[Mx.level].xmin;\n        evt.ymin = Mx.stk[Mx.level].ymin;\n        evt.xmax = Mx.stk[Mx.level].xmax;\n        evt.ymax = Mx.stk[Mx.level].ymax;\n        mx.dispatchEvent(Mx, evt); // TODO should we allow pan to be cancelled?\n        plot.inPan = false;\n\n    }\n\n    /**\n     * Updates a plot's viewbox along a given axis to the provided min and max\n     * values.\n     *\n     * @param plot\n     *            The plot to work with.\n     * @param newMin\n     *            The new minimum axis value to use\n     * @param newMax\n     *            The new maximum axis value to use\n     * @param axis\n     *            The axis to update. Acceptable axis values are \"X\" or \"Y\".\n     * @memberOf sigplot\n     * @private\n     */\n    function updateViewbox(plot, newMin, newMax, axis) {\n        var Mx = plot._Mx;\n        var Gx = plot._Gx;\n\n        var k = Mx.level;\n\n        if (axis === \"X\") {\n            var xmin = newMin;\n            var xmax = newMax;\n\n            if (Mx.stk[k].xmin !== xmin || Mx.stk[k].xmax !== xmax) {\n                Mx.stk[k].xmin = xmin;\n                Mx.stk[k].xmax = xmax;\n                if (!Gx.xdata && Mx.level === 1) {\n                    Gx.xmin = Mx.stk[1].xmin;\n                    Gx.xmax = Mx.stk[1].xmax;\n                }\n                plot.refresh();\n            }\n        } else if (axis === \"Y\") {\n            var ymin = newMin;\n            var ymax = newMax;\n\n            if (ymin !== Mx.stk[k].ymin || ymax !== Mx.stk[k].ymax) {\n                Mx.stk[k].ymin = ymin;\n                Mx.stk[k].ymax = ymax;\n                if (Gx.cmode === Gx.basemode && Mx.level === 1) {\n                    Gx.ymin = Math.min(Gx.ymin, ymin);\n                    Gx.ymax = Math.max(Gx.ymax, ymax);\n                }\n                plot.refresh();\n            }\n        }\n    }\n\n    sigplot.Plot = Plot;\n    sigplot.plugins = {\n        AccordionPlugin,\n        AnnotationPlugin,\n        BoxesPlugin,\n        PlaybackControlsPlugin,\n        SliderPlugin,\n    };\n    module.exports = sigplot;\n\n}());\n", "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Plot } from 'sigplot';\n\nexport const PlotContext = React.createContext(undefined);\n\n/**\n * SigPlot.js React wrapper class\n *\n * @version 0.1.15\n * @visibleName SigPlot.js React Wrapper\n */\nclass SigPlot extends Component {\n  static propTypes = {\n    /**\n     * Different Layer nodes (e.g., ArrayLayer, PipeLayer, etc.)\n     *\n     * @ignore\n     */\n    children: PropTypes.node,\n\n    /** Height of the wrapper div */\n    height: PropTypes.number,\n\n    /** Width of the wrapper div */\n    width: PropTypes.number,\n\n    /** CSS 'display' property */\n    display: PropTypes.string,\n\n    /** Styles object for any other CSS styles on the wrapper div */\n    styles: PropTypes.object,\n\n    /**\n     * SigPlot plot-level options\n     *\n     * @see See [sigplot.Plot Docs](http://sigplot.lgsinnovations.com/html/doc/sigplot.Plot.html)\n     */\n    options: PropTypes.object,\n  };\n\n  static defaultProps = {\n    height: 300,\n    width: 300,\n    display: 'inline-block',\n    options: {\n      all: true,\n      expand: true,\n      autol: 100,\n      autohide_panbars: true,\n    },\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    const { options } = this.props;\n    this.plot = new Plot(this.element, options);\n\n    // Have to trigger context tree, setting state does that.\n    // eslint-disable-next-line react/no-did-mount-set-state\n    // eslint-disable-next-line react/no-unused-state\n    this.setState({ plot: this.plot });\n  }\n\n  shouldComponentUpdate(nextProps, _nextState) {\n    const { height, width, options } = this.props;\n    const {\n      height: newHeight,\n      width: newWidth,\n      options: newOptions,\n    } = nextProps;\n\n    // When the outer div height/width changes,\n    // we need to explicitly tell SigPlot to resize;\n    // otherwise, it won't resize automatically.\n    if (newHeight !== height || newWidth !== width) {\n      this.plot.checkresize();\n    }\n\n    // If the options change at the plot level,\n    // we need to handle that\n    if (newOptions !== options) {\n      this.plot.change_settings(newOptions);\n    }\n\n    return true;\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      display,\n      styles,\n      children: propChildren,\n    } = this.props;\n    const { plot } = this;\n\n    /**\n     * Recall we're treating the `sigplot.layer1d` and\n     * `sigplot.layer2d` as (virtual) children nodes since\n     * they are simply manipulations/API calls that modify\n     * the underlying <canvas>.\n     *\n     * As such, the user should never have to access the\n     * `children` property outright, instead being able to\n     * write\n     *\n     *   <SigPlot>\n     *     <ArrayLayer ... />\n     *   </SigPlot>\n     *\n     * Anyway, the point of the following statement is\n     * to provide the `plot` object (controlled by the parent)\n     * to the child so it can mutate it.\n     */\n    const children = plot\n      ? React.Children.map(propChildren, (child) => {\n          if (child) {\n            return React.cloneElement(child, { plot });\n          }\n          return null;\n        })\n      : null;\n\n    return (\n      <PlotContext.Provider value={this.plot}>\n        <div\n          style={{\n            height,\n            width,\n            display, // this will be deprecated\n            ...styles,\n          }}\n          ref={(element) => (this.element = element)}\n        >\n          {children}\n        </div>\n      </PlotContext.Provider>\n    );\n  }\n}\n\nexport default SigPlot;\n", "import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * ArrayLayer wrapper for sigplot.layer1d and sigplot.layer2d\n *\n * This layer is meant for static 1D and 2D (or 1D with `framesize`)\n * JS arrays/ArrayBuffers. A typical use case looks like\n *\n * For a 1-D spectral or time-series plot:\n *\n *   <SigPlot>\n *     <ArrayLayer data={[1, 2, 3]}/>\n *   </SigPlot>\n *\n * For a 2-D raster/heatmap:\n *\n *   <SigPlot>\n *     <ArrayLayer data={[[1, 2, 3], [2, 3, 4]]}/>\n *   </SigPlot>\n */\nclass ArrayLayer extends Layer {\n  /**\n   * Handles ArrayLayer being mounted onto the DOM\n   *\n   * All we need to do when the component 'mounts',\n   * is call `plot.overlay_array` with the relevant\n   * data and options. This will return our layer object.\n   *\n   * A large portion of the time, especially for dynamic\n   * systems, this will look like\n   * `this.context.overlay_array([], undefined)` upon mount.\n   */\n  componentDidMount() {\n    const { data, options, layerOptions } = this.props;\n    this.layer = this.context.overlay_array(data, options, layerOptions);\n  }\n\n  /**\n   * Handles new properties being passed into <ArrayLayer/>\n   *\n   * UNSAFE_componentWillReceiveProps() replaced with\n   * shouldComponentUpdate() as they have similar calling patterns.\n   * We are using this method for a side-effect, and therefore\n   * returning True. getDerivedStateFromProps() had an additional\n   * call at mount which UNSAFE_componentWillReceiveProps() lacked.\n   * Thus the usage of shouldComponentUpdate().\n   *\n   * This sits in the lifecycle right before `componentWillUpdate`,\n   * and most importantly `render`, so this is where we will call\n   * the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  shouldComponentUpdate(nextProps, _nextState) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions,\n    } = this.props;\n\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions,\n    } = nextProps;\n\n    // if the data changes, we'll go ahead\n    // and do a full `reload`;\n    // otherwise, we only need to headermod\n    // with the new options\n    if (nextData !== currentData) {\n      this.context.reload(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.context.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.context.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return true;\n  }\n}\n\nexport default ArrayLayer;\n", "import React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport { PlotContext } from './sigplot';\n\n/**\n * Abstract base class for all Layers\n */\nclass Layer extends Component {\n  static propTypes = {\n    /** Array of `Number` types */\n    data: PropTypes.arrayOf(PropTypes.number), // eslint-disable-line react/no-unused-prop-types\n\n    /** Header options for `data` */\n    options: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n\n    /**\n     * Options about the layer\n     *\n     * @see See [sigplot.layer1d](https://github.com/LGSInnovations/sigplot/blob/master/js/sigplot.layer1d.js)\n     * @see See [sigplot.layer2d](https://github.com/LGSInnovations/sigplot/blob/master/js/sigplot.layer2d.js)\n     */\n    layerOptions: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n  };\n\n  static contextType = PlotContext;\n\n  /**\n   * On unmount, all we need to do is remove the layer\n   * from the plot.\n   */\n  componentWillUnmount() {\n    this.context.remove_layer(this.layer);\n  }\n\n  /**\n   * The layer components don't _actually_ render to the DOM.\n   *\n   * They are merely abstractions of canvas-manipulations.\n   */\n  render() {\n    return false;\n  }\n}\n\nexport default Layer;\n", "import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_pipe\n *\n * This wrapper is for streaming 1-D plots or\n * 2-D raster waterfall plots.\n *\n * Typical use of this would look like\n *\n *   <SigPlot>\n *     <PipeLayer options={options} data={data}/>\n *   </SigPlot>\n *\n * where options is populated before data begins flowing\n */\nclass PipeLayer extends Layer {\n  /**\n   * On mount, the only action we can take is to overlay the\n   * pipe with the specified header (`options`) information\n   *\n   * It isn't until data begins coming that we can begin to\n   */\n  componentDidMount() {\n    const { options, data, layerOptions } = this.props;\n\n    // start by setting the header of the pipe\n    this.layer = this.context.overlay_pipe(options, layerOptions);\n\n    // if data is provided and non-empty, go ahead and\n    // begin plotting data\n    if (data !== undefined && data.length > 0) {\n      this.context.push(this.layer, data);\n    }\n  }\n\n  /**\n   * Handles new properties being passed into <PipeLayer/>\n   *\n   * UNSAFE_componentWillReceiveProps() replaced with\n   * shouldComponentUpdate() as they have similar calling patterns.\n   * We are using this method for a side-effect, and therefore\n   * returning True. getDerivedStateFromProps() had an additional\n   * call at mount which UNSAFE_componentWillReceiveProps() lacked.\n   * Thus the usage of shouldComponentUpdate().\n   *\n   * This sits in the lifecycle right before `componentWillUpdate`,\n   * and most importantly `render`, so this is where we will call\n   * the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   *\n   * @TODO Handle headermod updates\n   */\n  shouldComponentUpdate(nextProps, _nextState) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions,\n    } = this.props;\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions,\n    } = nextProps;\n\n    // if new data has come in, plot that\n    if (nextData && nextData !== currentData) {\n      this.context.push(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.context.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.context.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return true;\n  }\n}\n\nexport default PipeLayer;\n", "import React from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_href\n *\n * Typical use of this layer looks like\n *   <SigPlot>\n *     <HrefLayer href={'/path/to/file.tmp'}/>\n *   </SigPlot>\n */\nclass HrefLayer extends Layer {\n  static propTypes = {\n    /**\n     * URI to BLUEFILE or MATFILE to plot\n     *\n     * This can either be local 'file:///path/to/file' or\n     * remote 'http://myfile.com/file.tmp'\n     *\n     * Keep in mind that if the file is on a different domain,\n     * most browsers/web-servers will block cross origin requests.\n     *\n     * Since this layer doesn't take any numeric data,\n     * we are omitting the use of the `data` prop here.\n     */\n    href: PropTypes.string,\n\n    /** Callback that executes once the file loads */\n    onload: PropTypes.func,\n\n    /** Layer options */\n    options: PropTypes.object,\n  };\n\n  static defaultProps = {\n    href: '',\n    onload: null,\n  };\n\n  /**\n   * On mount, all we need to do is call overlay_href\n   */\n  componentDidMount() {\n    const { href, onload, options } = this.props;\n    this.layer = this.context.overlay_href(href, onload, options);\n  }\n\n  /**\n   * Handles new properties being passed into <HrefLayer/>\n   *\n   * UNSAFE_componentWillReceiveProps() replaced with\n   * shouldComponentUpdate() as they have similar calling patterns.\n   * We are using this method for a side-effect, and therefore\n   * returning True. getDerivedStateFromProps() had an additional\n   * call at mount which UNSAFE_componentWillReceiveProps() lacked.\n   * Thus the usage of shouldComponentUpdate().\n   *\n   * This sits in the lifecycle right before `componentWillUpdate`,\n   * and most importantly `render`, so this is where we will call\n   * the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  shouldComponentUpdate(nextProps, _nextState) {\n    const { href: oldHref, options: oldOptions } = this.props;\n\n    const { href: newHref, onload: newOnload, options: newOptions } = nextProps;\n\n    // we only care if `href` or `options` changes\n    if (newHref !== oldHref) {\n      this.context.deoverlay(this.layer);\n      this.layer = this.context.overlay_href(newHref, newOnload, newOptions);\n    } else if (this.layer !== undefined && newOptions !== oldOptions) {\n      this.context.get_layer(this.layer).change_settings(newOptions);\n    }\n\n    return true;\n  }\n}\n\nexport default HrefLayer;\n", "import React from 'react'; // eslint-disable-line no-unused-vars\nimport Layer from './layer';\n\n/**\n * BlueLayer wrapper for sigplot.layer1d and sigplot.layer2d\n *\n * This layer is meant for Bluefiles\n * ArrayBuffers. A typical use case looks like\n *\n * For a 1-D spectral or time-series plot:\n *\n *   <SigPlot>\n *     <BlueLayer data={hcb}/>\n *   </SigPlot>\n *\n * For a 2-D raster/heatmap:\n *\n *   <SigPlot>\n *     <BlueLayer data={hcb}\n *           layerOptions={{\n *             subsize: 8,\n *             layerType: \"2D\"\n *         }}\n *       />\n *   </SigPlot>\n */\nclass BlueLayer extends Layer {\n  /**\n   * Handles BlueLayer being mounted onto the DOM\n   *\n   * All we need to do when the component 'mounts',\n   * is call `plot.overlay_bluefile` with the relevant\n   * data and options. This will return our layer object.\n   */\n  componentDidMount() {\n    const { data, layerOptions } = this.props;\n    this.layer = this.context.overlay_bluefile(data, layerOptions);\n  }\n\n  /**\n   * Handles new properties being passed into <BlueLayer/>\n   *\n   * UNSAFE_componentWillReceiveProps() replaced with\n   * shouldComponentUpdate() as they have similar calling patterns.\n   * We are using this method for a side-effect, and therefore\n   * returning True. getDerivedStateFromProps() had an additional\n   * call at mount which UNSAFE_componentWillReceiveProps() lacked.\n   * Thus the usage of shouldComponentUpdate().\n   *\n   * This sits in the lifecycle right before `componentWillUpdate`,\n   * and most importantly `render`, so this is where we will call\n   * the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   */\n  shouldComponentUpdate(nextProps, _nextState) {\n    const {\n      data: currentData,\n      options: currentOptions,\n      layerOptions: currentLayerOptions,\n    } = this.props;\n\n    const {\n      data: nextData,\n      options: nextOptions,\n      layerOptions: nextLayerOptions,\n    } = nextProps;\n\n    // if the data changes, we'll go ahead\n    // and do a full `reload`;\n    // otherwise, we only need to headermod\n    // with the new options\n    if (nextData !== currentData) {\n      this.context.reload(this.layer, nextData, nextOptions);\n    } else if (nextOptions !== currentOptions) {\n      this.context.headermod(this.layer, nextOptions);\n    } else if (nextLayerOptions !== currentLayerOptions) {\n      this.context.get_layer(this.layer).change_settings(nextLayerOptions);\n    }\n\n    return true;\n  }\n}\n\nexport default BlueLayer;\n", "import React from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport Layer from './layer';\n\n/**\n * Wrapper around sigplot.Plot.overlay_websocket\n *\n * Typical use of this layer looks like\n *   <SigPlot>\n *     <WebsocketLayer wsurl={'ws://localhost:8080'}/>\n *   </SigPlot>\n */\nclass WebsocketLayer extends Layer {\n  static propTypes = {\n    /**\n     * URI to websocket server\n     *\n     * This usually looks like ws://<some URI>:<some port>\n     *\n     * Keep in mind that if the websocket server is on a different domain,\n     * most browsers/web-servers will block cross origin requests.\n     *\n     * Since this layer doesn't take any numeric data,\n     * we are omitting the use of the `data` prop here.\n     */\n    wsurl: PropTypes.string,\n\n    /** Key-value pairs whose values alter plot settings */\n    overrides: PropTypes.object,\n\n    /** Layer options */\n    options: PropTypes.object,\n  };\n\n  static defaultProps = {\n    wsurl: '',\n  };\n\n  /**\n   * On mount, all we need to do is call overlay_websocket\n   */\n  componentDidMount() {\n    const { wsurl, overrides, options } = this.props;\n    this.layer = this.context.overlay_websocket(wsurl, overrides, options);\n  }\n\n  /**\n   * Handles new properties being passed into <HrefLayer/>\n   *\n   * UNSAFE_componentWillReceiveProps() replaced with\n   * shouldComponentUpdate() as they have similar calling patterns.\n   * We are using this method for a side-effect, and therefore\n   * returning True. getDerivedStateFromProps() had an additional\n   * call at mount which UNSAFE_componentWillReceiveProps() lacked.\n   * Thus the usage of shouldComponentUpdate().\n   *\n   * This sits in the lifecycle right before `componentWillUpdate`,\n   * and most importantly `render`, so this is where we will call\n   * the plot's `reload` and `headermod` methods.\n   *\n   * @param nextProps    the newly received properties\n   *\n   * @TODO Investigate whether deoverlay is necessary here\n   */\n  shouldComponentUpdate(nextProps, _nextState) {\n    const { wsurl: oldWsurl, options: oldOptions } = this.props;\n\n    const {\n      wsurl: newWsurl,\n      overrides: newOverrides,\n      options: newOptions,\n    } = nextProps;\n\n    // we only care if `wsurl` or `options` changes;\n    if (newWsurl !== oldWsurl) {\n      this.context.deoverlay(this.layer);\n      this.layer = this.context.overlay_websocket(\n        newWsurl,\n        newOverrides,\n        newOptions\n      );\n    } else if (this.layer !== undefined && newOptions !== oldOptions) {\n      this.context.get_layer(this.layer).change_settings(newOptions);\n    }\n\n    return true;\n  }\n}\n\nexport default WebsocketLayer;\n", "import React, { Component } from 'react'; // eslint-disable-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport { PlotContext } from './sigplot';\n\n/**\n * Abstract base class for all Plugins\n */\nclass Plugin extends Component {\n  static propTypes = {\n    /**\n     * Options about the plugin\n     *\n     * @see See [plugins](https://github.com/LGSInnovations/sigplot/blob/master/js/plugins.js)\n     */\n    pluginOptions: PropTypes.object, // eslint-disable-line react/no-unused-prop-types\n  };\n\n  static contextType = PlotContext;\n\n  /**\n   * On unmount, all we need to do is remove the plugin\n   * from the plot.\n   */\n  componentWillUnmount() {\n    this.context.remove_plugin(this.plugin);\n  }\n\n  /**\n   * Getter for the sigplot.Plot object\n   *\n   * The `plot` is 'given' to  the plugin-children\n   * from the <SigPlot> parent component, so we receive\n   * it from the context.\n   */\n  get plot() {\n    const { plot } = this.context;\n    return plot;\n  }\n\n  /**\n   * The plugin components don't _actually_ render to the DOM.\n   *\n   * They are merely abstractions of canvas-manipulations.\n   */\n  render() {\n    return false;\n  }\n}\n\nexport default Plugin;\n"],
  "mappings": "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C,KAAM,gBACN,OAAQ,CAAC,CACL,IAAK,EACL,IAAK,EACL,MAAO,EACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,EACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,GACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,GACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,IACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,IACL,IAAK,IACL,MAAO,EACP,KAAM,KAEX,CACC,KAAM,cACN,OAAQ,CAAC,CACL,IAAK,EACL,IAAK,IACL,MAAO,IACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,GACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,IACP,KAAM,KACP,CACC,IAAK,GACL,IAAK,GACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,IACL,MAAO,EACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,IACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,IACL,IAAK,IACL,MAAO,IACP,KAAM,KAEX,CACC,KAAM,WACN,OAAQ,CAAC,CACL,IAAK,EACL,IAAK,EACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,GACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,EACL,MAAO,EACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,GACL,MAAO,EACP,KAAM,IACP,CACC,IAAK,GACL,IAAK,GACL,MAAO,EACP,KAAM,GACP,CACC,IAAK,GACL,IAAK,GACL,MAAO,GACP,KAAM,GACP,CACC,IAAK,IACL,IAAK,GACL,MAAO,GACP,KAAM,MAEX,CACC,KAAM,YACN,OAAQ,CAAC,CACL,IAAK,EACL,IAAK,IACL,MAAO,IACP,KAAM,KACP,CACC,IAAK,OACL,IAAK,EACL,MAAO,EACP,KAAM,KACP,CACC,IAAK,OACL,IAAK,EACL,MAAO,IACP,KAAM,KACP,CACC,IAAK,GACL,IAAK,EA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",
  "names": []
}
